<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>如何让所见即所得编辑器加上AI能力的翅膀</title>
    <link href="/2023/11/10/%E5%A6%82%E4%BD%95%E8%AE%A9%E6%89%80%E8%A7%81%E5%8D%B3%E6%89%80%E5%BE%97%E7%BC%96%E8%BE%91%E5%99%A8%E5%8A%A0%E4%B8%8AAI%E8%83%BD%E5%8A%9B%E7%9A%84%E7%BF%85%E8%86%80/"/>
    <url>/2023/11/10/%E5%A6%82%E4%BD%95%E8%AE%A9%E6%89%80%E8%A7%81%E5%8D%B3%E6%89%80%E5%BE%97%E7%BC%96%E8%BE%91%E5%99%A8%E5%8A%A0%E4%B8%8AAI%E8%83%BD%E5%8A%9B%E7%9A%84%E7%BF%85%E8%86%80/</url>
    
    <content type="html"><![CDATA[<p>先前的两篇文章，我们了解了所见即所得编辑器的原理，接下来，我们就要开始在知晓原理情况下搞点事情了，给所见即所得加持上AI的能力。本文，我们将给所见即所得编辑器，当然是基于Tiptap实现的，增加AI能力，大致分为<code>三个功能点</code>。</p><h4 id="AI加持后的所见即所得编辑器功能一撇"><a href="#AI加持后的所见即所得编辑器功能一撇" class="headerlink" title="AI加持后的所见即所得编辑器功能一撇"></a>AI加持后的所见即所得编辑器功能一撇</h4><ul><li><p>使用空格键唤起一个与ChatGPT对话的对话框，在基于一个话题对话之后，我们可以选择将对话的内容插入到编辑初，其操作体验如下所示</p><img src="/2023/11/10/%E5%A6%82%E4%BD%95%E8%AE%A9%E6%89%80%E8%A7%81%E5%8D%B3%E6%89%80%E5%BE%97%E7%BC%96%E8%BE%91%E5%99%A8%E5%8A%A0%E4%B8%8AAI%E8%83%BD%E5%8A%9B%E7%9A%84%E7%BF%85%E8%86%80/image-20231110165052262.png" alt="image-20231110165052262" style="zoom:50%;" data-src="/2023/11/10/%E5%A6%82%E4%BD%95%E8%AE%A9%E6%89%80%E8%A7%81%E5%8D%B3%E6%89%80%E5%BE%97%E7%BC%96%E8%BE%91%E5%99%A8%E5%8A%A0%E4%B8%8AAI%E8%83%BD%E5%8A%9B%E7%9A%84%E7%BF%85%E8%86%80/image-20231110165052262.png"></li><li><p>使用<code>/</code>唤起一个菜单，我们可以选择基于已有的文本进行续写，其大概的体验如下所示：</p><img src="/2023/11/10/%E5%A6%82%E4%BD%95%E8%AE%A9%E6%89%80%E8%A7%81%E5%8D%B3%E6%89%80%E5%BE%97%E7%BC%96%E8%BE%91%E5%99%A8%E5%8A%A0%E4%B8%8AAI%E8%83%BD%E5%8A%9B%E7%9A%84%E7%BF%85%E8%86%80/image-20231110165229543.png" alt="image-20231110165229543" style="zoom:50%;" data-src="/2023/11/10/%E5%A6%82%E4%BD%95%E8%AE%A9%E6%89%80%E8%A7%81%E5%8D%B3%E6%89%80%E5%BE%97%E7%BC%96%E8%BE%91%E5%99%A8%E5%8A%A0%E4%B8%8AAI%E8%83%BD%E5%8A%9B%E7%9A%84%E7%BF%85%E8%86%80/image-20231110165229543.png"></li><li><p>选中一段文字，弹出一个对话框，我们可以基于选中的文字做，<code>文本扩写</code>，<code>风格改写</code>，<code>文本翻译</code>等等一些操作，其操作体验如下所示：</p></li></ul><img src="/2023/11/10/%E5%A6%82%E4%BD%95%E8%AE%A9%E6%89%80%E8%A7%81%E5%8D%B3%E6%89%80%E5%BE%97%E7%BC%96%E8%BE%91%E5%99%A8%E5%8A%A0%E4%B8%8AAI%E8%83%BD%E5%8A%9B%E7%9A%84%E7%BF%85%E8%86%80/image-20231110165648304.png" alt="image-20231110165648304" style="zoom:50%;" data-src="/2023/11/10/%E5%A6%82%E4%BD%95%E8%AE%A9%E6%89%80%E8%A7%81%E5%8D%B3%E6%89%80%E5%BE%97%E7%BC%96%E8%BE%91%E5%99%A8%E5%8A%A0%E4%B8%8AAI%E8%83%BD%E5%8A%9B%E7%9A%84%E7%BF%85%E8%86%80/image-20231110165648304.png"><h4 id="如何实现这些功能"><a href="#如何实现这些功能" class="headerlink" title="如何实现这些功能"></a>如何实现这些功能</h4><p>上面，我们领略了一下AI加持后的Tiptap编辑器的样子，看起来时机已经有点<code>NotionAi</code>的影子了。那么，为啥要自己实现呢？因为Notion 引入 ChatGPT辅助创作，这种体验真的很好，沉浸式的编辑体验，但是缺点也是很大。</p><ul><li>Notion AI的能力太贵了，每个月10美元。</li><li>Notion AI据说是接入的 GPT 3 ，从目前看，这已经是一个比较落后的模型了。</li><li>灵活度不够，不能随意切模型，这就意味着我们自己没法基于自己写作风格来fine-tune自己的模型。</li></ul><p>说一千，到一万，反正，我们就是得自己造轮子了。</p><h5 id="实现-敲击空格，唤起对话框与ChatGPT对话，并插入"><a href="#实现-敲击空格，唤起对话框与ChatGPT对话，并插入" class="headerlink" title="实现 敲击空格，唤起对话框与ChatGPT对话，并插入"></a>实现 敲击空格，唤起对话框与ChatGPT对话，并插入</h5><p>实际上，我们首先空格，呼出一个对话框和ChatGPT对话的功能是在 Extension 实现的 addProseMirrorPlugins做的，如下，我们需要监听 <code>event.code === &#39;Space&#39; </code>事件，一旦用户敲击空格，就呼出对话框，对话框就的职责就是和ChatGPT对话，最后将对话的内容插入到编辑器editor的光标处即可，整个流程图如下：</p><img src="/2023/11/10/%E5%A6%82%E4%BD%95%E8%AE%A9%E6%89%80%E8%A7%81%E5%8D%B3%E6%89%80%E5%BE%97%E7%BC%96%E8%BE%91%E5%99%A8%E5%8A%A0%E4%B8%8AAI%E8%83%BD%E5%8A%9B%E7%9A%84%E7%BF%85%E8%86%80/image-20231110171520668.png" alt="image-20231110171520668" style="zoom:50%;" data-src="/2023/11/10/%E5%A6%82%E4%BD%95%E8%AE%A9%E6%89%80%E8%A7%81%E5%8D%B3%E6%89%80%E5%BE%97%E7%BC%96%E8%BE%91%E5%99%A8%E5%8A%A0%E4%B8%8AAI%E8%83%BD%E5%8A%9B%E7%9A%84%E7%BF%85%E8%86%80/image-20231110171520668.png"><p>其核心代码如下所示。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-title function_">addProseMirrorPlugins</span>(<span class="hljs-params"></span>) &#123;<br>     <span class="hljs-keyword">const</span> editor = <span class="hljs-variable language_">this</span>.<span class="hljs-property">editor</span>;<br>     <span class="hljs-keyword">const</span> &#123; enableAIChat &#125; = <span class="hljs-variable language_">this</span>.<span class="hljs-property">options</span>;<br><br>     <span class="hljs-keyword">return</span> [<br>       <span class="hljs-keyword">new</span> <span class="hljs-title class_">Plugin</span>(&#123;<br>         <span class="hljs-attr">key</span>: <span class="hljs-keyword">new</span> <span class="hljs-title class_">PluginKey</span>(<span class="hljs-string">&#x27;ai-event-handler&#x27;</span>),<br>         <span class="hljs-attr">props</span>: &#123;<br>           <span class="hljs-title function_">handleKeyDown</span>(<span class="hljs-params">_, event</span>) &#123;<br>             <span class="hljs-keyword">if</span> (event.<span class="hljs-property">code</span> === <span class="hljs-string">&#x27;Space&#x27;</span>) &#123;<br>               <span class="hljs-keyword">const</span> nodeText = <span class="hljs-title function_">getTextContentFromNodes</span>(editor.<span class="hljs-property">state</span>.<span class="hljs-property">selection</span>.<span class="hljs-property">$from</span>);<br><span class="hljs-comment">// 唤起对话框，与ChatGPT对话</span><br>               <span class="hljs-comment">// 将对话类容格式化为document，插入到 editor 的focus 处</span><br>               <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>             &#125;<br>           &#125;<br>         &#125;<br>       &#125;)<br>     ];<br>   &#125;<br></code></pre></td></tr></table></figure><p>实现 <code>/</code>，弹出菜单，和实现选中文本弹出菜单，其实现思路和敲击空格键呼出对话框的功能极其类似，就不一一介绍。完整的demo体验可以去utools插件市场，安装 <code>aition</code>体验。</p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>前端</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>精美桌面端App推荐</title>
    <link href="/2023/04/17/%E7%B2%BE%E7%BE%8E%E6%A1%8C%E9%9D%A2%E7%AB%AFApp%E6%8E%A8%E8%8D%90/"/>
    <url>/2023/04/17/%E7%B2%BE%E7%BE%8E%E6%A1%8C%E9%9D%A2%E7%AB%AFApp%E6%8E%A8%E8%8D%90/</url>
    
    <content type="html"><![CDATA[<h3 id="App-推荐"><a href="#App-推荐" class="headerlink" title="App 推荐"></a>App 推荐</h3><table><thead><tr><th>应用名称</th><th>下载地址</th><th>预览图</th></tr></thead><tbody><tr><td>AgentGpt</td><td>Mac 下载地址,Windows 下载地址</td><td><img src="https://i.328888.xyz/2023/04/17/iewkPk.jpeg" width="200px"></td></tr><tr><td>poe</td><td>Mac 下载地址,Windows 下载地址</td><td><img src="https://i.328888.xyz/2023/04/17/iewkPk.jpeg" width="200px"></td></tr></tbody></table><h3 id="赞赏"><a href="#赞赏" class="headerlink" title="赞赏"></a>赞赏</h3><p>搬砖不易，如果你觉得这些 App 对你有用，就请我喝一杯咖啡吧。<br><img src="https://i.328888.xyz/2023/04/17/iewkPk.jpeg" width="300px"></p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>桌面端App</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Cryptomator-Android源码分析</title>
    <link href="/2022/12/08/cryptomator-Android%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    <url>/2022/12/08/cryptomator-Android%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</url>
    
    <content type="html"><![CDATA[<h4 id="App的启动过程"><a href="#App的启动过程" class="headerlink" title="App的启动过程"></a>App的启动过程</h4><p>1、设置日志记录器，比较简单，不展开</p><p>2、根据BuildConfig.FLAVOR来输出不同的打印不同的版本信息</p><p>3、初始化dagger注入依赖</p><p>4、启动两个service，一个是加密服务，一个是自动上传服务，目测是为了后续的云盘、s3等上传</p><p>5、注册registerActivityLifecycleCallbacks，目的是为了激活机密服务，目测是为了放在App不在前台的时候锁住保险库。</p><p>6、设置主题颜色，三种，跟随系统，暗系，白系。</p><p>7、清理缓存，这是一个AsyncTask，因此不会卡UI线程，具体是做了 <code>cleanupDir(context.cacheDir)</code>。</p><p>8、给RxJava添加一个统一的错误处理，啥都没干，只打印了日志。</p><p>至此，cryptomator-Android的启动过程就完成了，这里难点在于dagger注入各种依赖，大可不必细看，只知道，需要使用到各种module的时候，dagger会自动帮注入好就可以。</p><p>需要稍微了解一下kotlin的一些语法，如:</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><span class="hljs-comment">//回调lambda简化</span><br>mView.setEventListener(<span class="hljs-keyword">object</span>:Listenser&#123;<br><span class="hljs-keyword">public</span> void onSuccess(Data <span class="hljs-keyword">data</span>)&#123;<br>    <span class="hljs-comment">//todo</span><br>  &#125;<br>&#125;)<br><span class="hljs-comment">////可简化为</span><br>mView.setEventListener&#123;<br>  <span class="hljs-comment">//todo</span><br>&#125;<br><br><span class="hljs-comment">//内联扩展函数,最重要的事可以简化多次判空操作。</span><br>a?let&#123;<br>  it.do1()<br>  it.do2()<br>  it.do3()<br>&#125;<br><span class="hljs-comment">/// 类似的内联还有 with操作，和js的with有点类似，可以避免频繁的写多次context</span><br><br><span class="hljs-comment">// use 操作，自带try catch ，fanlly 中 自带close操作，简直是流操作的福音</span><br><br></code></pre></td></tr></table></figure><h4 id="主activity的启动"><a href="#主activity的启动" class="headerlink" title="主activity的启动"></a>主activity的启动</h4><p>App启动之后，更具Android规则，打开的第一个activity应该是AndroidManifest中定义的启动的那个</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">activity</span></span><br><span class="hljs-tag"><span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;.ui.activity.VaultListActivity&quot;</span></span><br><span class="hljs-tag"><span class="hljs-attr">android:exported</span>=<span class="hljs-string">&quot;true&quot;</span></span><br><span class="hljs-tag"><span class="hljs-attr">android:theme</span>=<span class="hljs-string">&quot;@style/AppTheme.Starting&quot;</span></span><br><span class="hljs-tag"><span class="hljs-attr">android:windowSoftInputMode</span>=<span class="hljs-string">&quot;adjustPan&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">intent-filter</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">action</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;android.intent.action.MAIN&quot;</span> /&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">category</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;android.intent.category.LAUNCHER&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">intent-filter</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">activity</span>&gt;</span><br></code></pre></td></tr></table></figure><p>因此，毫无疑问，应该跑到这个入口页里面瞅瞅做了啥。</p><p>VaultListActivity继承自BaseActivity，因此，一般来讲一些公共的逻辑讲都会放在基类中来处理，直接看onCreate方法：</p><p>1、埋个日志，表示进入onCreate，简单不介绍</p><p>2、initializeDagger，使用dagger进行依赖注入,</p><p>3、初始化界面，可以看到布局是一个空壳子，界面的渲染全靠fragment。</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><span class="hljs-keyword">override</span> <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">onCreate</span><span class="hljs-params">(savedInstanceState: <span class="hljs-type">Bundle</span>?)</span></span> &#123;<br><span class="hljs-keyword">super</span>.onCreate(savedInstanceState)<br>logLifecycle(<span class="hljs-string">&quot;onCreate&quot;</span>)<br><br><span class="hljs-keyword">this</span>.activityComponent = initializeDagger()<br><br>javaClass.getAnnotation(Activity::<span class="hljs-keyword">class</span>.java)?.let &#123;<br>setContentView(getContentLayout(it))<br><br>Activities.setIntent(<span class="hljs-keyword">this</span>)<br><span class="hljs-keyword">this</span>.presenter = Activities.initializePresenter(<span class="hljs-keyword">this</span>)<br>afterIntentInjected()<br><br><span class="hljs-keyword">if</span> (savedInstanceState != <span class="hljs-literal">null</span>) &#123;<br>restoreState(savedInstanceState)<br>&#125;<br><span class="hljs-comment">//</span><br>setupView()<br>setupPresenter()<br><br><span class="hljs-keyword">if</span> (savedInstanceState == <span class="hljs-literal">null</span>) &#123;<br>createAndAddFragment()<br>&#125;<br><br>currentDialog = supportFragmentManager.findFragmentByTag(ACTIVE_DIALOG) <span class="hljs-keyword">as</span>? DialogFragment<br>closeDialogOnResume = currentDialog != <span class="hljs-literal">null</span><br>&#125; ?: Timber.tag(<span class="hljs-string">&quot;BaseActivity&quot;</span>).e(<span class="hljs-string">&quot;Failed to initialize Activity because config is null&quot;</span>)<br>&#125;<br></code></pre></td></tr></table></figure><p>setupView中使用</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><span class="hljs-keyword">override</span> <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">setupView</span><span class="hljs-params">()</span></span> &#123;<br>setupToolbar()<br>vaultListPresenter.prepareView()<br>activityRootView.setOnFilteredTouchEventForSecurityListener(<span class="hljs-keyword">object</span> : Listener &#123;<br><span class="hljs-keyword">override</span> <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">onFilteredTouchEventForSecurity</span><span class="hljs-params">()</span></span> &#123;<br>vaultListPresenter.onFilteredTouchEventForSecurity()<br>&#125;<br>&#125;)<br><br><span class="hljs-keyword">if</span> (stopEditFilePressed() &amp;&amp; sharedPreferencesHandler.keepUnlockedWhileEditing()) &#123;<br>hideNotification()<br>unSuspendLock()<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>vaultListPresenter.prepareView() 去准备view，这个时候，会触发checkLicense()。如果没有License，会告诉你去填license。这里绕过license的检测比较简单，直接注释去检测就好，下面一小节讲解一下license的检查策略。</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">prepareView</span><span class="hljs-params">()</span></span> &#123;<br><span class="hljs-keyword">if</span> (!sharedPreferencesHandler.isScreenLockDialogAlreadyShown) &#123;<br><span class="hljs-keyword">val</span> keyguardManager = context().getSystemService(Context.KEYGUARD_SERVICE) <span class="hljs-keyword">as</span> KeyguardManager<br><span class="hljs-keyword">if</span> (!keyguardManager.isKeyguardSecure) &#123;<br>view?.showDialog(AskForLockScreenDialog.newInstance())<br>&#125;<br>sharedPreferencesHandler.setScreenLockDialogAlreadyShown()<br>&#125;<br><br>sharedPreferencesHandler.vaultsRemovedDuringMigration()?.let &#123;<br><span class="hljs-keyword">val</span> cloudNameString = getString(CloudTypeModel.valueOf(CloudType.valueOf(it.first)).displayNameResource)<br>view?.showDialog(VaultsRemovedDuringMigrationDialog.newInstance(Pair(cloudNameString, it.second)))<br>sharedPreferencesHandler.vaultsRemovedDuringMigration(<span class="hljs-literal">null</span>)<br>&#125;<br><br>  <span class="hljs-comment">// 注释，别去检查了</span><br><span class="hljs-comment">//checkLicense()</span><br><br><span class="hljs-keyword">if</span> (sharedPreferencesHandler.usePhotoUpload()) &#123;<br>checkLocalStoragePermissionRegardingAutoUpload()<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>有的话就要开始走渲染界面了。</p><p>接下来走到onResume逻辑中看看</p><p>1、埋点日志，表示进入onResume，简单也不在介绍</p><p>2、设置被覆盖时不响应touches事件</p><p>3、设置安全策略，禁止录屏</p><p>4、判断是否没有打开的保险库，如果没有，就关闭当前打开的图片呀，文本文件之类的资源，一种保护。<strong>主要就是防止锁屏了，锁屏之前在浏览文件，打开还会看到文件</strong>。</p><p>所以第一个启动的activity的视图展示任务就落到了VaultListFragment上了。</p><p>整个布局就是一个RecyclerView展示的列表，然后在onResume的时候，调用presenter去load保险库列表</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><span class="hljs-keyword">override</span> <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">onResume</span><span class="hljs-params">()</span></span> &#123;<br><span class="hljs-keyword">super</span>.onResume()<br>vaultListPresenter.loadVaultList()<br>&#125;<br></code></pre></td></tr></table></figure><p>至此其实进入保险库的整个流程就完毕了。</p><h4 id="license检查"><a href="#license检查" class="headerlink" title="license检查"></a>license检查</h4><p>前面提到应用主界面会触发license的检查，其检查逻辑是除了Google player安装的版本，就会进入license检查环境，因此，这里可以看到版本的打包是使用了<code>BuildConfig.FLAVOR </code>特性。检查的逻辑是</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><span class="hljs-keyword">private</span> <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">checkLicense</span><span class="hljs-params">()</span></span> &#123;<br><span class="hljs-keyword">if</span> (BuildConfig.FLAVOR == <span class="hljs-string">&quot;apkstore&quot;</span> || BuildConfig.FLAVOR == <span class="hljs-string">&quot;fdroid&quot;</span> || BuildConfig.FLAVOR == <span class="hljs-string">&quot;lite&quot;</span>) &#123;<br>licenseCheckUseCase <span class="hljs-comment">//</span><br>.withLicense(<span class="hljs-string">&quot;&quot;</span>) <span class="hljs-comment">//</span><br>.run(<span class="hljs-keyword">object</span> : NoOpResultHandler&lt;LicenseCheck&gt;() &#123;<br><span class="hljs-keyword">override</span> <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">onSuccess</span><span class="hljs-params">(licenseCheck: <span class="hljs-type">LicenseCheck</span>)</span></span> &#123;<br><span class="hljs-keyword">if</span> (BuildConfig.FLAVOR == <span class="hljs-string">&quot;apkstore&quot;</span> &amp;&amp; sharedPreferencesHandler.doUpdate()) &#123;<br>checkForAppUpdates()<br>&#125;<br>&#125;<br><br><span class="hljs-keyword">override</span> <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">onError</span><span class="hljs-params">(e: <span class="hljs-type">Throwable</span>)</span></span> &#123;<br><span class="hljs-keyword">val</span> license = <span class="hljs-keyword">if</span> (e <span class="hljs-keyword">is</span> LicenseNotValidException) &#123;<br>e.license<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-string">&quot;&quot;</span><br>&#125;<br><span class="hljs-keyword">val</span> intent = Intent(context(), LicenseCheckActivity::<span class="hljs-keyword">class</span>.java)<br>intent.flags = Intent.FLAG_ACTIVITY_NEW_TASK or Intent.FLAG_ACTIVITY_CLEAR_TASK<br>intent.<span class="hljs-keyword">data</span> = Uri.parse(String.format(<span class="hljs-string">&quot;app://cryptomator/%s&quot;</span>, license))<br><br><span class="hljs-keyword">try</span> &#123;<br>context().startActivity(intent)<br>&#125; <span class="hljs-keyword">catch</span> (e: ActivityNotFoundException) &#123;<br>Toast.makeText(context(), <span class="hljs-string">&quot;Please contact the support.&quot;</span>, Toast.LENGTH_LONG).show()<br>finish()<br>&#125;<br>&#125;<br>&#125;)<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>1、如果没有传入license，就会使用本地存储（SQLlite）中的license来进行验证。</p><p>2、验证的主要逻辑就是使用公钥来解密license，看看是否可以解密出来，如果可以，就证明license是人家私钥加密的合法license，否则就是伪造的。</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><span class="hljs-keyword">private</span> static <span class="hljs-keyword">final</span> String ANDROID_PUB_KEY = <span class="hljs-string">&quot;MIGbMBAGByqGSM49AgEGBSuBBAAjA4GGAAQBcnb81CfNeL3qBVFMx/yRfm1Y1yib&quot;</span> + <span class="hljs-comment">//</span><br><span class="hljs-string">&quot;ajIJkV1s82AQt+mOl4+Kub64wq1OCgBVwWUlKwqgnyF39nmkoXEjakRPFngBzg2J&quot;</span> + <span class="hljs-comment">//</span><br><span class="hljs-string">&quot;zo4UR0B7OYmn0uGf3K+zQfxKnNMxGVPtlzE8j9Nqz/dm2YvYLLVwvTSDQX/GaxoP&quot;</span> + <span class="hljs-comment">//</span><br><span class="hljs-string">&quot;/EH84Hupw2wuU7qAaFU=&quot;</span>;<br><span class="hljs-keyword">final</span> Claims claims = <br>Jwts.parserBuilder().setSigningKey(getPublicKey(ANDROID_PUB_KEY)).build().parseClaimsJws(license).getBody();<br><span class="hljs-keyword">return</span> claims::getSubject;<br></code></pre></td></tr></table></figure><p>原理很简单，就是利用了<strong>非对称加解密</strong>。</p><h4 id="添加一个保险库"><a href="#添加一个保险库" class="headerlink" title="添加一个保险库"></a>添加一个保险库</h4><p>进入系统之后，就是看怎么添加一个保险库，保险库的添加有两种方式；1、从0创建一个。2、继承至一个已有的。</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">onAddExistingVault</span><span class="hljs-params">()</span></span> &#123;<br>addExistingVaultWorkflow.start()<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">onCreateVault</span><span class="hljs-params">()</span></span> &#123;<br>  createNewVaultWorkflow.start()<br>&#125;<br></code></pre></td></tr></table></figure><p>直接看从0开始创建的流程：</p><p>1、点击新建一个vault的话，会进入一个选择CloudType的界面，有[Dropbox，Google Drive，OneDrive等等]，当然还包括本地。</p><p>2、选择一个本地的玩一玩</p><p>3、进去是一个recycleView，如果之前添加过本地文件目录，那么是会有location列表的，初次创建是没有</p><p>4、点击底部的➕，会进入创建，创建会根据不同的CloudType进入不同的界面</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">onAddConnectionClicked</span><span class="hljs-params">()</span></span> &#123;<br><span class="hljs-keyword">when</span> (selectedCloudType.<span class="hljs-keyword">get</span>()) &#123;<br>CloudTypeModel.ONEDRIVE -&gt; addOnedriveCloud()<br>CloudTypeModel.WEBDAV -&gt; requestActivityResult(ActivityResultCallbacks.addChangeMultiCloud(), Intents.webDavAddOrChangeIntent())<br>CloudTypeModel.PCLOUD -&gt; requestActivityResult(ActivityResultCallbacks.pCloudAuthenticationFinished(), Intents.authenticatePCloudIntent())<br>CloudTypeModel.S3 -&gt; requestActivityResult(ActivityResultCallbacks.addChangeMultiCloud(), Intents.s3AddOrChangeIntent())<br>CloudTypeModel.LOCAL -&gt; openDocumentTree()<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>5、openDocumentTree就是拿到一个通过一个intent打开文件管理，然后返回一个contentProvider的uri，长这样<code>content://com.android.externalstorage.documents/tree/primary%3A11111</code>，随后保存到书库中</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><span class="hljs-keyword">public</span> void execute() throws BackendException &#123;<br><span class="hljs-keyword">if</span> (cloudExists(cloud)) &#123;<br><span class="hljs-keyword">throw</span> new CloudAlreadyExistsException();<br>&#125;<br><br><span class="hljs-keyword">if</span> (cloud.persistent()) &#123;<br>cloudRepository.store(cloud);<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">throw</span> new FatalBackendException(<span class="hljs-string">&quot;Can&#x27;t change cloud because it&#x27;s not persistent&quot;</span>);<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>6、点击一个location之后，会进入CreateVaultActivity中。</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs kotlin">void onCloudServiceChosen(SerializableResult&lt;CloudModel&gt; result) &#123;<br>onCloudServiceChosen(result.getResult());<br>&#125;<br><br><span class="hljs-keyword">private</span> void onCloudServiceChosen(CloudModel cloud) &#123;<br>presenter().getView().showProgress(ProgressModel.GENERIC);<br>getRootFolderUseCase <span class="hljs-comment">//</span><br>.withCloud(cloud.toCloud()) <span class="hljs-comment">//</span><br>.run(((ChooseCloudServicePresenter) presenter()).new ProgressCompletingResultHandler&lt;CloudFolder&gt;() &#123;<br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> void onSuccess(CloudFolder cloudFolder) &#123;<br>state().cloudRoot = cloudFolder;<br>chain(createVaultIntent(), SerializableResultCallbacks.nameEntered());<br>&#125;<br><br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> void onError(Throwable e) &#123;<br><span class="hljs-keyword">if</span> (!authenticationExceptionHandler.handleAuthenticationException( <span class="hljs-comment">//</span><br>presenter(), <span class="hljs-comment">//</span><br>e, <span class="hljs-comment">//</span><br>ActivityResultCallbacks.onCloudServiceAuthenticated())) &#123;<br><span class="hljs-keyword">super</span>.onError(e);<br>&#125;<br>&#125;<br>&#125;);<br>&#125;<br></code></pre></td></tr></table></figure><p>7、一进入，vaultNameEditText.requestFocus()就开始让你输入vaultName，确认之后，进入密码输入界面，密码是有强度的，使用了一个开源库zxvcbn来验证密码强度，而且排除了一些关键字作为密码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java">RxTextView.textChanges(passwordInput) <span class="hljs-comment">//</span><br>.observeOn(Schedulers.computation()) <span class="hljs-comment">//</span><br>.map(password -&gt; PasswordStrength.Companion.forPassword(password.toString(), SANITIZED_INPUTS)) <span class="hljs-comment">//</span><br>.observeOn(AndroidSchedulers.mainThread()) <span class="hljs-comment">//</span><br>.subscribe(strength -&gt; &#123;<br>strengthMeter.getProgressDrawable().setColorFilter(ResourceHelper.Companion.getColor(strength.getColor()), PorterDuff.Mode.SRC_IN);<br>strengthLabel.setText(strength.getDescription());<br>strengthMeter.setProgress(strength.getScore() + <span class="hljs-number">1</span>);<br>button.setEnabled(strength.getScore() &gt; PasswordStrength.EXTREMELY_WEAK.getScore());<br>&#125;);<br></code></pre></td></tr></table></figure><p>输入强度比较OK的密码之后，就到了创建vault的最后环节了</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><span class="hljs-keyword">public</span> Vault execute() throws BackendException &#123;<br>CloudFolder vaultFolder = cloudContentRepository.folder(folder, vaultName);<br>vaultFolder = cloudContentRepository.create(vaultFolder);<br>   <span class="hljs-comment">// 带着输入的密码过来创建vaultFolder</span><br>cloudRepository.create(vaultFolder, password);<br><span class="hljs-keyword">return</span> vaultRepository.store(aVault() <span class="hljs-comment">//</span><br>.thatIsNew() <span class="hljs-comment">//</span><br>.withNamePathAndCloudFrom(vaultFolder) <span class="hljs-comment">//</span><br>.withPosition(vaultRepository.vaults().size()) <span class="hljs-comment">//</span><br>.build());<br>&#125;<br></code></pre></td></tr></table></figure><p>create的真正实现在于</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">create</span><span class="hljs-params">(location: <span class="hljs-type">CloudFolder</span>, password: <span class="hljs-type">CharSequence</span>?, vaultConfigBuilder: <span class="hljs-type">VaultConfigBuilder</span>)</span></span> &#123;<br><span class="hljs-comment">// 1. write masterkey:</span><br><span class="hljs-keyword">val</span> masterkey = Masterkey.generate(secureRandom)<br><span class="hljs-keyword">try</span> &#123;<br>ByteArrayOutputStream().use &#123; <span class="hljs-keyword">data</span> -&gt;<br>MasterkeyFileAccess(CryptoConstants.PEPPER, secureRandom).persist(masterkey, <span class="hljs-keyword">data</span>, password, CryptoConstants.DEFAULT_MASTERKEY_FILE_VERSION)<br>cloudContentRepository.write(legacyMasterkeyFile(location), from(<span class="hljs-keyword">data</span>.toByteArray()), ProgressAware.NO_OP_PROGRESS_AWARE_UPLOAD, <span class="hljs-literal">false</span>, <span class="hljs-keyword">data</span>.size().toLong())<br>&#125;<br>&#125; <span class="hljs-keyword">catch</span> (e: IOException) &#123;<br><span class="hljs-keyword">throw</span> FatalBackendException(<span class="hljs-string">&quot;Failed to write masterkey&quot;</span>, e)<br>&#125;<br><br><span class="hljs-comment">// 2. initialize vault:</span><br><span class="hljs-keyword">val</span> vaultConfig = vaultConfigBuilder <span class="hljs-comment">//</span><br>.vaultFormat(CryptoConstants.MAX_VAULT_VERSION) <span class="hljs-comment">//</span><br>.cipherCombo(CryptoConstants.DEFAULT_CIPHER_COMBO) <span class="hljs-comment">//</span><br>.keyId(URI.create(String.format(<span class="hljs-string">&quot;%s:%s&quot;</span>, CryptoConstants.MASTERKEY_SCHEME, CryptoConstants.MASTERKEY_FILE_NAME))) <span class="hljs-comment">//</span><br>.shorteningThreshold(CryptoConstants.DEFAULT_MAX_FILE_NAME) <span class="hljs-comment">//</span><br>.build()<br><span class="hljs-keyword">val</span> encodedVaultConfig = vaultConfig.toToken(masterkey.encoded).toByteArray(StandardCharsets.UTF_8)<br><span class="hljs-keyword">val</span> vaultFile = cloudContentRepository.file(location, CryptoConstants.VAULT_FILE_NAME)<br>cloudContentRepository.write(vaultFile, from(encodedVaultConfig), ProgressAware.NO_OP_PROGRESS_AWARE_UPLOAD, <span class="hljs-literal">false</span>, encodedVaultConfig.size.toLong())<br><br><span class="hljs-comment">// 3. create root folder:</span><br>createRootFolder(location, cryptorFor(masterkey, vaultConfig.cipherCombo))<br>&#125;<br></code></pre></td></tr></table></figure><p>1、写了一个Masterkey，写一个masterkey.cryptomator</p><p>2、初始化一个vault，写一个vault.cryptomator</p><p>3、初始化根目录，支持一个保险库初始化完毕。</p><h4 id="文件加密机制"><a href="#文件加密机制" class="headerlink" title="文件加密机制"></a>文件加密机制</h4><p>要添加文件，就需要先打开保险库，然后在保险库中添加文件。</p><p>1、因为我们打开的是本地保险库，因此会根据这个保险库的找到目录下的vault.cryptomator，然后从里面读出，内容，用来匹配用户输入的密码，其原理就是重放生成masterkey.cryptomator的过程，匹配看是否一致。</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><span class="hljs-keyword">private</span> <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">unlockVault</span><span class="hljs-params">(vaultModel: <span class="hljs-type">VaultModel</span>)</span></span> &#123;<br><span class="hljs-keyword">if</span> (canUseBiometricOn(vaultModel)) &#123;<br><span class="hljs-keyword">if</span> (startedUsingPrepareUnlock) &#123;<br>startPrepareUnlockUseCase(vaultModel.toVault())<br>&#125;<br>view?.showBiometricDialog(vaultModel)<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>view?.showEnterPasswordDialog(vaultModel)<br>startPrepareUnlockUseCase(vaultModel.toVault())<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/*******************************************************************************</span><br><span class="hljs-comment"> * Copyright (c) 2016 Sebastian Stenzel and others.</span><br><span class="hljs-comment"> * All rights reserved. This program and the accompanying materials</span><br><span class="hljs-comment"> * are made available under the terms of the accompanying LICENSE.txt.</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * Contributors:</span><br><span class="hljs-comment"> *     Sebastian Stenzel - initial API and implementation</span><br><span class="hljs-comment"> *******************************************************************************/</span><br><span class="hljs-keyword">package</span> org.cryptomator.cryptolib.common;<br><br><span class="hljs-keyword">import</span> java.io.IOException;<br><span class="hljs-keyword">import</span> java.nio.ByteBuffer;<br><span class="hljs-keyword">import</span> java.nio.channels.WritableByteChannel;<br><br><span class="hljs-keyword">import</span> org.cryptomator.cryptolib.api.Cryptor;<br><span class="hljs-keyword">import</span> org.cryptomator.cryptolib.api.FileHeader;<br><span class="hljs-keyword">import</span> org.cryptomator.cryptolib.common.ByteBuffers;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">EncryptingWritableByteChannel</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">WritableByteChannel</span> &#123;<br><br><span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> WritableByteChannel delegate;<br><span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> Cryptor cryptor;<br><span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> FileHeader header;<br><span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> ByteBuffer cleartextBuffer;<br><br><span class="hljs-keyword">private</span> <span class="hljs-type">boolean</span> <span class="hljs-variable">firstWrite</span> <span class="hljs-operator">=</span> <span class="hljs-literal">true</span>;<br><span class="hljs-keyword">private</span> <span class="hljs-type">long</span> <span class="hljs-variable">chunkNumber</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br><br><span class="hljs-keyword">public</span> <span class="hljs-title function_">EncryptingWritableByteChannel</span><span class="hljs-params">(WritableByteChannel destination, Cryptor cryptor)</span> &#123;<br><span class="hljs-built_in">this</span>.delegate = destination;<br><span class="hljs-built_in">this</span>.cryptor = cryptor;<br><span class="hljs-built_in">this</span>.header = cryptor.fileHeaderCryptor().create();<br><span class="hljs-built_in">this</span>.cleartextBuffer = ByteBuffer.allocate(cryptor.fileContentCryptor().cleartextChunkSize());<br>&#125;<br><br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">isOpen</span><span class="hljs-params">()</span> &#123;<br><span class="hljs-keyword">return</span> delegate.isOpen();<br>&#125;<br><br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">synchronized</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">close</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> IOException &#123;<br>writeHeaderOnFirstWrite();<br>encryptAndFlushBuffer();<br>delegate.close();<br>&#125;<br><br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">synchronized</span> <span class="hljs-type">int</span> <span class="hljs-title function_">write</span><span class="hljs-params">(ByteBuffer src)</span> <span class="hljs-keyword">throws</span> IOException &#123;<br>writeHeaderOnFirstWrite();<br><span class="hljs-type">int</span> <span class="hljs-variable">result</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br><span class="hljs-keyword">while</span> (src.hasRemaining()) &#123;<br>result += ByteBuffers.copy(src, cleartextBuffer);<br><span class="hljs-keyword">if</span> (!cleartextBuffer.hasRemaining()) &#123;<br>encryptAndFlushBuffer();<br>&#125;<br>&#125;<br><span class="hljs-keyword">return</span> result;<br>&#125;<br><br>  <span class="hljs-comment">/// 文件头加密</span><br><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">writeHeaderOnFirstWrite</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> IOException &#123;<br><span class="hljs-keyword">if</span> (firstWrite) &#123;<br>delegate.write(cryptor.fileHeaderCryptor().encryptHeader(header));<br>&#125;<br>firstWrite = <span class="hljs-literal">false</span>;<br>&#125;<br><br>  <span class="hljs-comment">// 文件块加密</span><br><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">encryptAndFlushBuffer</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> IOException &#123;<br>cleartextBuffer.flip();<br><span class="hljs-keyword">if</span> (cleartextBuffer.hasRemaining()) &#123;<br><span class="hljs-type">ByteBuffer</span> <span class="hljs-variable">ciphertextBuffer</span> <span class="hljs-operator">=</span> cryptor.fileContentCryptor().encryptChunk(cleartextBuffer, chunkNumber++, header);<br>delegate.write(ciphertextBuffer);<br>&#125;<br>cleartextBuffer.clear();<br>&#125;<br><br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="各种云盘的添加"><a href="#各种云盘的添加" class="headerlink" title="各种云盘的添加"></a>各种云盘的添加</h4><h4 id="自动上锁机制"><a href="#自动上锁机制" class="headerlink" title="自动上锁机制"></a>自动上锁机制</h4><ol><li>前端使用sessionStorage换成虚拟切换的企业子id，保持tab下子企业id隔离。</li><li>所有站内以target&#x3D;”<em>blank</em>“新开页面逻辑检查下，已url参数的方式把子企业传过去，需要<strong>初始化切换的来源的</strong>子企业。</li><li>纯新开的新页面没有子企业信息，可以独立切换。</li><li>切换子企业的交互一致，封装组件，session状态维护。</li><li>接口通过全部传子企业id，后端做过滤，个别接口需要其他<strong>传通用参数</strong>，单独处理。</li></ol>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Android</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Flutter蓝盾构建指南</title>
    <link href="/2022/12/07/flutter%E8%93%9D%E7%9B%BE%E6%9E%84%E5%BB%BA%E6%8C%87%E5%8D%97/"/>
    <url>/2022/12/07/flutter%E8%93%9D%E7%9B%BE%E6%9E%84%E5%BB%BA%E6%8C%87%E5%8D%97/</url>
    
    <content type="html"><![CDATA[<blockquote><p>众所周知，flutter是比较流行的跨平台方案，目前可以构建出Android，iOS，macOS，Windows，web等产物，这里只想介绍一下Android和iOS的构建产物方式，理解了这两种产物的构建，自动动手实现其他产物，应该并不是什么难事。</p></blockquote><p>首先，要构建出release包，也就是用户可以安装的包，无论是在Android，还是iOS上，都是需要”<strong>证书</strong>“来签名的。两个平台对比了解如下：</p><table><thead><tr><th>平台</th><th>证书</th><th>最直接的生成方式</th></tr></thead><tbody><tr><td>Android</td><td>.jks</td><td><a href="https://www.jianshu.com/p/b9b4b3461ae7">keytool</a>，免费的，谁都可以任意申请</td></tr><tr><td>iOS</td><td>.p12 &amp; .mobileprovision</td><td>只能去苹果开发者官网申请，or公司有提供的话，比如<a href="https://keystore.woa.com/dashboard">keystore</a> 申请，本质上都是苹果开发者中心申请，一句话，要钱的</td></tr></tbody></table><p>说个题外话，为啥要签名，一句话，证明这个产物是你生成的。</p><p>为了不花多少代价，这里，iOS我们在keystore上申请证书，申请的过程比较简单，其步骤不懂可以找keystore助手，但我们最终需要拿到下图这些证书，尤其是发布环境。因为flutter 构建需要。</p><p><img src="/2022/12/07/flutter%E8%93%9D%E7%9B%BE%E6%9E%84%E5%BB%BA%E6%8C%87%E5%8D%97/image-20221207190937458.png" alt="image-20221207190937458" loading="lazy" data-src="/2022/12/07/flutter%E8%93%9D%E7%9B%BE%E6%9E%84%E5%BB%BA%E6%8C%87%E5%8D%97/image-20221207190937458.png"></p><h4 id="iOS配置篇"><a href="#iOS配置篇" class="headerlink" title="iOS配置篇"></a>iOS配置篇</h4><p>在证书申请成功的前提下，我们需要对iOS工程进行一定的配置，首先，需要下载发布环境的<strong>签名证书</strong>和<strong>描述文件</strong>，然后双击添加到系统keychain里面，相信我过程很简单。然后接下来就是需要对iOS工程进行一定的配置了，使用xcode打开iOS目录。按照红框从左到右的顺序，就可以进入<strong>描述文件</strong>配置的界面，记住，<strong>因为我们是使用公司的证书，而不是自己登录的accont来获取描述文件，因此，我们一定要记住把Automatically mange signing 给反勾选掉</strong>。</p><p><img src="/2022/12/07/flutter%E8%93%9D%E7%9B%BE%E6%9E%84%E5%BB%BA%E6%8C%87%E5%8D%97/image-20221207191509340.png" alt="image-20221207191509340" loading="lazy" data-src="/2022/12/07/flutter%E8%93%9D%E7%9B%BE%E6%9E%84%E5%BB%BA%E6%8C%87%E5%8D%97/image-20221207191509340.png"></p><p>很简单，配置其实就已经OK了，但别急着打包，还要补一个文件到ios工程下面，随便命名都可以，这里为了规范，取名为<code>ExportOptions.plist</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shel">cd ios<br>touch ExportOptions.plist<br></code></pre></td></tr></table></figure><p>在里面补充内容</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">plist</span> <span class="hljs-keyword">PUBLIC</span> <span class="hljs-string">&quot;-//Apple//DTD PLIST 1.0//EN&quot;</span> <span class="hljs-string">&quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">plist</span> <span class="hljs-attr">version</span>=<span class="hljs-string">&quot;1.0&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dict</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">key</span>&gt;</span>generateAppStoreInformation<span class="hljs-tag">&lt;/<span class="hljs-name">key</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">false</span>/&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">key</span>&gt;</span>manageAppVersionAndBuildNumber<span class="hljs-tag">&lt;/<span class="hljs-name">key</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">true</span>/&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">key</span>&gt;</span>method<span class="hljs-tag">&lt;/<span class="hljs-name">key</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">string</span>&gt;</span>app-store<span class="hljs-tag">&lt;/<span class="hljs-name">string</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">key</span>&gt;</span>provisioningProfiles<span class="hljs-tag">&lt;/<span class="hljs-name">key</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dict</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">key</span>&gt;</span>com.xxx.xxx<span class="hljs-tag">&lt;/<span class="hljs-name">key</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">string</span>&gt;</span>com.xxx.xxx_Production_SignProvision<span class="hljs-tag">&lt;/<span class="hljs-name">string</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dict</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">key</span>&gt;</span>signingCertificate<span class="hljs-tag">&lt;/<span class="hljs-name">key</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">string</span>&gt;</span>Apple Distribution<span class="hljs-tag">&lt;/<span class="hljs-name">string</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">key</span>&gt;</span>signingStyle<span class="hljs-tag">&lt;/<span class="hljs-name">key</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">string</span>&gt;</span>manual<span class="hljs-tag">&lt;/<span class="hljs-name">string</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">key</span>&gt;</span>stripSwiftSymbols<span class="hljs-tag">&lt;/<span class="hljs-name">key</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">true</span>/&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">key</span>&gt;</span>uploadSymbols<span class="hljs-tag">&lt;/<span class="hljs-name">key</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">false</span>/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dict</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">plist</span>&gt;</span><br><br></code></pre></td></tr></table></figure><p>别忘记把里面的xxx调换为你自己的BundleID，这个很重要，搞错肯定是打不出包的。好了，接下来验证一下。</p><p><strong>在flutter工程根目录下执行：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">flutter build ipa --export-options-plist $PWD/ios/ExportOptions.plist<br></code></pre></td></tr></table></figure><p>不出意外，应该是可以看到</p><p><img src="/2022/12/07/flutter%E8%93%9D%E7%9B%BE%E6%9E%84%E5%BB%BA%E6%8C%87%E5%8D%97/image-20221207192201361-0412125.png" alt="image-20221207192201361" loading="lazy" data-src="/2022/12/07/flutter%E8%93%9D%E7%9B%BE%E6%9E%84%E5%BB%BA%E6%8C%87%E5%8D%97/image-20221207192201361-0412125.png"></p><p>本地的准备工作也就基本上告一段落了，接下来就是去蓝盾上整流水线了。</p><p><img src="/2022/12/07/flutter%E8%93%9D%E7%9B%BE%E6%9E%84%E5%BB%BA%E6%8C%87%E5%8D%97/image-20221207200414439.png" loading="lazy" data-src="/2022/12/07/flutter%E8%93%9D%E7%9B%BE%E6%9E%84%E5%BB%BA%E6%8C%87%E5%8D%97/image-20221207200414439.png"></p><p>流水线步骤比较清晰，第一个是选macOS环境，我这里选择的最新的系统，xcode14.0.1</p><p><img src="/2022/12/07/flutter%E8%93%9D%E7%9B%BE%E6%9E%84%E5%BB%BA%E6%8C%87%E5%8D%97/image-20221207200948090.png" alt="image-20221207200948090" loading="lazy" data-src="/2022/12/07/flutter%E8%93%9D%E7%9B%BE%E6%9E%84%E5%BB%BA%E6%8C%87%E5%8D%97/image-20221207200948090.png"></p><p>git拉取就不必多说，原理就是把项目git clone 到工作空间下；</p><p>打包产物这里就有必要详细聊一下了</p><p>1、需要准备flutter环境，这里直接在公司的镜像上托下来，思路是直接装到工作空间下，用这个flutter来跑，避免构建机上版本冲突。脚本内容如下:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs shell"><br>cd $WORKSPACE<br>ARG_FLUTTER_VERSION=3.3.6<br><span class="hljs-meta prompt_"># </span><span class="language-bash">这里就是git拉取代码保存flutter代码的目录，随便写</span><br>BUILD_ROOT=code/<br>echo &quot;执行清理缓存&quot;<br>rm -rf flutter<br>rm -rf /tmp/flutter_output_path.log<br>FLUTTER_DOWNLOAD_URL=&quot;https://mirrors.tencent.com/flutter/flutter_infra_release/releases/stable/macos/flutter_macos_$&#123;ARG_FLUTTER_VERSION&#125;-stable.zip&quot;<br>wget $&#123;FLUTTER_DOWNLOAD_URL&#125; --no-check-certificate -O flutter.zip<br>unzip flutter.zip<br>export PATH=&quot;$(pwd)/flutter/bin:$PATH&quot;<br>echo $PATH<br>FLUTTER_PATH=&quot;$(pwd)/flutter/&quot;<br>export PUB_HOSTED_URL=https://pub.flutter-io.cn<br>export FLUTTER_STORAGE_BASE_URL=https://storage.flutter-io.cn<br>echo &quot;PUB_HOSTED_URL=$PUB_HOSTED_URL&quot;<br>echo &quot;FLUTTER_STORAGE_BASE_URL=$FLUTTER_STORAGE_BASE_URL&quot;<br>export PUB_CACHE=~/.pub-cache/<br>rm -rf ~/.pub-cache/*<br>rm -rf $FLUTTER_PATH/.pub-cache/*<br><span class="hljs-meta prompt_"># </span><span class="language-bash">进入flutter项目根目录</span><br>cd $BUILD_ROOT<br>flutter packages get<br><span class="hljs-meta prompt_"># </span><span class="language-bash">执行本地尝试成功的那个构建产物命令</span><br>flutter build ipa --export-options-plist ./ios/ExportOptions.plist<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">构建Android产物</span><br>flutter build apk<br><br><br></code></pre></td></tr></table></figure><p>可以看到我们大部分工作在准备和本地一致的环境，就是为了执行 <code>flutter build ipa --export-options-plist ./ios/ExportOptions.plist</code>。</p><p>2、然后就是开始构建 ipa了。</p><p>3、ipa构建好之后，将产物归档，是为了扫二维码可以安装，但我们不安装这个。</p><p>4、使用企业微信重新签名。</p><p>保存！执行起来，不出意外，可以看到构建产物中有两个ipa了，一个是使用企业证书签名过的，是可以直接在蓝盾上安装了。</p><h4 id="Android配置篇"><a href="#Android配置篇" class="headerlink" title="Android配置篇"></a>Android配置篇</h4><p>Android的实现过程其实比较类似，深圳还更加简单些，直接使用keystore上蓝盾的证书，<strong>思路是flutter构建出一个不签名的包</strong>。</p><p>然后使用蓝盾插件签名。</p><p>因此，我们对android下面的app目录下的build.gradle进行更改，直接把buildTypes配置成这样</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs groovy">buildTypes &#123;<br>       release &#123;<br>           signingConfig <span class="hljs-literal">null</span><br>       &#125;<br>   &#125;<br></code></pre></td></tr></table></figure><p>本地执行 ，默认注意需要jdk8</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">flutter build apk<br></code></pre></td></tr></table></figure><p>可以看到apk可以构建成功，只不过是一个未签名的，然后由蓝盾上的签名流程的处理就好了，简单的办法是，直接在构建产物环节增加一下 Android产物的构建，过程复用，免得重新搞一个shell，又得安装一下flutter环境等。</p><p>至此，整个蓝盾构建flutter工程的Android和ios包均完毕。如果比较幸运，是可以看到产物的。</p><pre><code class=" mermaid">graph LR    A[输入数组] --&gt; B[选择基准元素]    B --&gt; C[划分数组]    C --&gt; D[左侧子数组]    C --&gt; E[右侧子数组]    D --&gt; F[选择基准元素]    E --&gt; F    F --&gt; G[划分数组]    G --&gt; H[左侧子数组]    G --&gt; I[右侧子数组]    H --&gt; J[选择基准元素]    I --&gt; J    J --&gt; K[划分数组]    K --&gt; L[左侧子数组]    K --&gt; M[右侧子数组]    L --&gt; N[选择基准元素]    M --&gt; N    N --&gt; O[划分数组]    O --&gt; P[左侧子数组]    O --&gt; Q[右侧子数组]    P --&gt; R[选择基准元素]    Q --&gt; R    R --&gt; S[划分数组]    S --&gt; T[左侧子数组]    S --&gt; U[右侧子数组]    T --&gt; V[选择基准元素]    U --&gt; V    V --&gt; W[划分数组]    W --&gt; X[左侧子数组]    W --&gt; Y[右侧子数组]    X --&gt; Z[选择基准元素]    Y --&gt; Z    Z --&gt; AA[划分数组]    AA --&gt; AB[左侧子数组]    AA --&gt; AC[右侧子数组]    AB --&gt; B    AC --&gt; B</code></pre><!-- flag of hidden posts -->]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Flutter</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Cryptomator研究</title>
    <link href="/2022/11/29/cryptomator%E7%A0%94%E7%A9%B6/"/>
    <url>/2022/11/29/cryptomator%E7%A0%94%E7%A9%B6/</url>
    
    <content type="html"><![CDATA[<p>初次安装，可以选择添加一个保险库，添加的方式可以是：</p><ol><li>创建一个</li><li>打开现有的保险库</li></ol><p><img src="/2022/11/29/cryptomator%E7%A0%94%E7%A9%B6/image-20221129152534616-9706738.png" alt="image-20221129152534616" loading="lazy" data-src="/2022/11/29/cryptomator%E7%A0%94%E7%A9%B6/image-20221129152534616-9706738.png"></p><p>创建一个的方式中，会有一个环节提示用户创建一个<strong>恢复秘钥</strong>来帮助会忘记密码的场景。</p><p><img src="/2022/11/29/cryptomator%E7%A0%94%E7%A9%B6/image-20221129152355612-9706644.png" alt="image-20221129152355612" loading="lazy" data-src="/2022/11/29/cryptomator%E7%A0%94%E7%A9%B6/image-20221129152355612-9706644.png"></p><p>创建的过程中，可以返回，再次进来，之前的设置是缓存的，这一点非常人性化。如果选择了恢复秘钥，将会生成一串随机字符串文本：</p><p><img src="/2022/11/29/cryptomator%E7%A0%94%E7%A9%B6/image-20221129152902160-9706946.png" alt="image-20221129152902160" loading="lazy" data-src="/2022/11/29/cryptomator%E7%A0%94%E7%A9%B6/image-20221129152902160-9706946.png"></p><p>存储文件的方式，解锁保鲜库，其实就是打开受保护的文件夹，然后往里面放文件</p><p><img src="/2022/11/29/cryptomator%E7%A0%94%E7%A9%B6/image-20221129153709860-9707433.png" alt="image-20221129153709860" loading="lazy" data-src="/2022/11/29/cryptomator%E7%A0%94%E7%A9%B6/image-20221129153709860-9707433.png"></p><p><img src="/2022/11/29/cryptomator%E7%A0%94%E7%A9%B6/image-20221129154349614-9707831.png" alt="image-20221129154349614" loading="lazy" data-src="/2022/11/29/cryptomator%E7%A0%94%E7%A9%B6/image-20221129154349614-9707831.png"></p><p>如果直接通过路径打开，看到的将会是加密之后的</p><p><img src="/2022/11/29/cryptomator%E7%A0%94%E7%A9%B6/image-20221129154041405-9707643.png" alt="image-20221129154041405" loading="lazy" data-src="/2022/11/29/cryptomator%E7%A0%94%E7%A9%B6/image-20221129154041405-9707643.png"></p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>应用</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>逻辑思考</title>
    <link href="/2022/11/16/%E9%80%BB%E8%BE%91%E6%80%9D%E8%80%83/"/>
    <url>/2022/11/16/%E9%80%BB%E8%BE%91%E6%80%9D%E8%80%83/</url>
    
    <content type="html"><![CDATA[<h5 id="逻辑思维最基本的原则，被归纳为以下四条。"><a href="#逻辑思维最基本的原则，被归纳为以下四条。" class="headerlink" title="逻辑思维最基本的原则，被归纳为以下四条。"></a>逻辑思维最基本的原则，被归纳为以下四条。</h5><p><strong>1</strong>、将结论明确为<strong>“</strong>是&#x2F;否<strong>”</strong></p><p><strong>2</strong>、通过<strong>“</strong>因为<strong>”“</strong>所以<strong>”</strong>来思考</p><p><strong>3</strong>、结合事实</p><p><strong>4、</strong>切中论点，顾及整体平衡</p><h4 id="技巧"><a href="#技巧" class="headerlink" title="技巧"></a>技巧</h4><p>平时遇到灰色的概念不要把它扔在一边，试着去明确地判断它是黑是白，养成这样的思考习惯就行了。这样大脑就能逐渐形成事事区分、对下达判断的依据刨根问底的思考方式。而这样的习惯，对培养主动关注世间动向、确立自己的判断轴也是很有帮助的</p>]]></content>
    
    
    <categories>
      
      <category>财务</category>
      
    </categories>
    
    
    <tags>
      
      <tag>财务</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何看懂公司财报及关键指标</title>
    <link href="/2022/11/16/%E8%B4%A2%E5%8A%A1%E4%B8%89%E5%BC%A0%E8%A1%A8/"/>
    <url>/2022/11/16/%E8%B4%A2%E5%8A%A1%E4%B8%89%E5%BC%A0%E8%A1%A8/</url>
    
    <content type="html"><![CDATA[<blockquote><p>导语：想要了解一家公司的财务状况，我们可以通过查看它的财报。那么，如何看懂公司财报及关键指标呢？本文将为你详细解答。</p></blockquote><h3 id="一、财报简介"><a href="#一、财报简介" class="headerlink" title="一、财报简介"></a>一、财报简介</h3><p>财报，又称财务报表，是一家公司定期发布的，用以展示其财务状况和经营成果的一份报告。通常包括资产负债表、利润表、现金流量表等。</p><h3 id="二、关键财报指标"><a href="#二、关键财报指标" class="headerlink" title="二、关键财报指标"></a>二、关键财报指标</h3><ol><li><h4 id="资产负债表"><a href="#资产负债表" class="headerlink" title="资产负债表"></a>资产负债表</h4></li></ol><p>资产负债表展示了公司在某一时刻的财务状况，包括资产、负债和股东权益。关键指标有：</p><p>（1）总资产：公司拥有的所有资产，包括现金、应收账款、存货等。</p><p>（2）总负债：公司需要偿还的债务，包括应付账款、短期借款等。</p><p>（3）股东权益：公司属于股东的部分，等于总资产减去总负债。</p><ol start="2"><li><h4 id="利润表"><a href="#利润表" class="headerlink" title="利润表"></a>利润表</h4></li></ol><p>利润表展示了公司在一段时间内的盈利状况。关键指标有：</p><p>（1）营业收入：公司通过销售产品或提供服务所获得的收入。</p><p>（2）营业利润：公司在正常经营活动中产生的利润。</p><p>（3）净利润：公司在一段时间内的最终盈利，等于营业利润减去税费和其他费用。</p><ol start="3"><li><h4 id="现金流量表"><a href="#现金流量表" class="headerlink" title="现金流量表"></a>现金流量表</h4></li></ol><p>现金流量表反映了公司在一段时间内现金的流入和流出。关键指标有：</p><p>（1）经营活动现金流：公司在正常经营活动中产生的现金流。</p><p>（2）投资活动现金流：公司在投资活动中产生的现金流。</p><p>（3）筹资活动现金流：公司在筹资活动中产生的现金流。</p><h3 id="三、重要比率分析"><a href="#三、重要比率分析" class="headerlink" title="三、重要比率分析"></a>三、重要比率分析</h3><ol><li><p>流动比率：流动资产除以流动负债，用以衡量公司在短期内偿还债务的能力。</p></li><li><p>负债比率：总负债除以总资产，用以衡量公司负债占资产的比例。</p></li><li><p>毛利率：毛利除以营业收入，用以衡量公司每一单位产品或服务的利润。</p></li><li><p>净利率：净利润除以营业收入，用以衡量公司整体盈利能力。</p></li><li><p>收益率：净利润除以股东权益，用以衡量公司为股东创造的价值。</p></li></ol><p><strong>总结：通过以上分析，我们可以初步了解一家公司的财务状况。然而，财报并非唯一评价公司的标准，还需结合行业状况、公司战略等多方面因素进行综合判断。</strong></p>]]></content>
    
    
    <categories>
      
      <category>财务</category>
      
    </categories>
    
    
    <tags>
      
      <tag>财务</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>市场营销</title>
    <link href="/2022/11/16/%E5%B8%82%E5%9C%BA%E8%90%A5%E9%94%80/"/>
    <url>/2022/11/16/%E5%B8%82%E5%9C%BA%E8%90%A5%E9%94%80/</url>
    
    <content type="html"><![CDATA[<h3 id="市场营销的阶段"><a href="#市场营销的阶段" class="headerlink" title="市场营销的阶段"></a>市场营销的阶段</h3><p><img src="/2022/11/16/%E5%B8%82%E5%9C%BA%E8%90%A5%E9%94%80/image-20221116182330539.png" alt="image-20221116182330539" loading="lazy" data-src="/2022/11/16/%E5%B8%82%E5%9C%BA%E8%90%A5%E9%94%80/image-20221116182330539.png"></p><h4 id="市场营销1-0"><a href="#市场营销1-0" class="headerlink" title="市场营销1.0"></a>市场营销1.0</h4><p>首先在世界还未形成一体的时代，市场营销并不是必要的。在那种状 况下，当产品推出，并且它是必需品的话，就不难销售。只要处于尚未产 生竞争的状态中，那么埋头生产，再将产品卖出就可以了。</p><h4 id="市场营销2-0"><a href="#市场营销2-0" class="headerlink" title="市场营销2.0"></a>市场营销2.0</h4><p>在商品过于充足的现在，任何产品都不可能生产出来就不愁销售。 总会有类似产品或是替代品出现，在竞争中拉低价格，并且顾客需求也开 始多样化。商人将面对各种障碍，因此之前的市场营销1.0，也就是只负责 生产的思维模式很快就被市场淘汰了。</p><p>于是许多情况下，商品在推出市场之前会进行调查。也就是所谓的3C 分析(市场·顾客分析、内部环境分析、竞争分析)。并且会反复思考 S(segmentation细分)、T(targeting目标)、P(positioning定位)和4P(Marketing mix市场营销组合)这四点针对销售的策略后再投入市场。</p><p>当产品投入市场后，还会进行严密管理，让商品进入有空缺的市场。 </p><h4 id="市场营销3-0"><a href="#市场营销3-0" class="headerlink" title="市场营销3.0"></a>市场营销3.0</h4><p>从无竞争的世界中以体力决定胜负的市场营销进化为以头脑决定胜负 的市场营销。市场营销2.0就是科特勒从1970到1980年代的著作中所提出的 理论。</p><p>而后，市场营销逐渐介入品牌认知和个人意识，从而发展到认知科学 领域。这是市场营销2.0之后的世界</p><h3 id="产品分析-价值大致可分为两种"><a href="#产品分析-价值大致可分为两种" class="headerlink" title="产品分析:价值大致可分为两种"></a>产品分析:价值大致可分为两种</h3><ol><li>其一是“将不平稳的状态恢复正常状态(由负到零)”，也就是解决问 题型。比如受伤时所使用的创可贴，以及牙签、卫生纸等日用品(质量水 准基本持平的可代替商品)这一类产品。</li><li>其二则是“将正常状态进一步提升为高昂状态(从零到正)”，也就是 提高心灵满足感。比如以奢侈品为代表的产品，拥有它就能提高心灵的满足感。<strong>这方面也可以称作情绪性消费</strong></li></ol>]]></content>
    
    
    <categories>
      
      <category>市场营销</category>
      
    </categories>
    
    
    <tags>
      
      <tag>市场营销</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ts实现整洁架构领域层</title>
    <link href="/2022/10/26/ts%E5%AE%9E%E7%8E%B0%E6%95%B4%E6%B4%81%E6%9E%B6%E6%9E%84%E9%A2%86%E5%9F%9F%E5%B1%82/"/>
    <url>/2022/10/26/ts%E5%AE%9E%E7%8E%B0%E6%95%B4%E6%B4%81%E6%9E%B6%E6%9E%84%E9%A2%86%E5%9F%9F%E5%B1%82/</url>
    
    <content type="html"><![CDATA[<h3 id="Typescript中实现清洁架构的模块化应用领域层"><a href="#Typescript中实现清洁架构的模块化应用领域层" class="headerlink" title="Typescript中实现清洁架构的模块化应用领域层"></a>Typescript中实现清洁架构的模块化应用领域层</h3><p>为什么使用Typescript，只是因为它越来越流行，但这是有原因的。据说，<strong>Typescript可以帮助开发中减少15%的错误</strong>。它对与其他开发者合作也很有用，因为每个组件属性、类属性和函数参数都可以在代码中定义其类型；</p><p>Clean arhcitecture是一种设计模式，旨在将应用逻辑与用户界面或外部服务分开。它通过在一个圆圈中定义层，其中每一层只能与圆圈中心的其他层进行交互。用Vue的话来说，这些层是（从外到内） <strong>Components + Store -&gt; Use cases -&gt; Entities</strong>，如下图所示。</p><p><img src="/2022/10/26/ts%E5%AE%9E%E7%8E%B0%E6%95%B4%E6%B4%81%E6%9E%B6%E6%9E%84%E9%A2%86%E5%9F%9F%E5%B1%82/clean-architecture.png" alt="clean-architecture.png" loading="lazy" data-src="/2022/10/26/ts%E5%AE%9E%E7%8E%B0%E6%95%B4%E6%B4%81%E6%9E%B6%E6%9E%84%E9%A2%86%E5%9F%9F%E5%B1%82/clean-architecture.png"></p><h4 id="领域层"><a href="#领域层" class="headerlink" title="领域层"></a>领域层</h4><p>领域层包含定义我们的应用程序将使用的基本数据的实体。应用层包含所有应用于实体的逻辑和操作。UI&#x2F;Store层包含用户界面、控制器和演示器，这主要是应用程序的Vue&#x2F;Nuxt部分。有一些元素组成了每个层，我们需要定义这些元素来构建这样的应用程序。</p><h4 id="组件"><a href="#组件" class="headerlink" title="组件"></a>组件</h4><p>这就是我们所知道的vue组件。因为它包含了一些逻辑，也包含了用户界面，所以它既是视图也是展示者。这意味着它负责将商店中的任何数据转化为界面（按钮、下拉菜单、表格等）能够理解的数据结构。</p><h4 id="Vuex-store"><a href="#Vuex-store" class="headerlink" title="Vuex store"></a>Vuex store</h4><p>我们将使用存储模块。你应该对此很熟悉，但这次我们将使用有一些限制的存储。由于store将是我们的 “控制器”，它负责接收来自用户的输入（来自组件的数据）并对这些数据进行操作。为了执行这个操作，它应该调用一个Interactor，而不是自己执行这个逻辑。商店应该只被组件调用（vuex actions），并相应地更新其状态（vuex mutations），把所有的逻辑留给内层。</p><h4 id="Interactor"><a href="#Interactor" class="headerlink" title="Interactor"></a>Interactor</h4><p>交互器是一个被控制器调用的元素，通过服务执行任务并将结果返回给控制器。每个用例都应该有一个交互器。</p><h4 id="Service"><a href="#Service" class="headerlink" title="Service"></a>Service</h4><p>在我们的例子中，服务是一个作为交互器的查找表的对象。所有的操作都应该在服务中可用。每个实体可以有一个服务，例如，TodoService将拥有与Todo实体交互的所有逻辑，如获取、创建、编辑、删除。事实上，该服务应该实现一个属于领域层的接口，它定义了所有可能的用例。它也可以有外部服务，比如从API中获取数据的HTTP服务。</p><p>请注意，我们通常在Vuex商店做的事情，现在被委托（delegated）给一个调用服务的用例Interactor。</p><h4 id="Repository"><a href="#Repository" class="headerlink" title="Repository"></a>Repository</h4><p>这是一个接口（interface），定义了一个实体的所有用例和操作。</p><h4 id="Entity"><a href="#Entity" class="headerlink" title="Entity"></a>Entity</h4><p>这是一个类或类型定义，定义了我们应用程序中对象的数据和领域限制（domain restrictions ）。验证逻辑也应该由实体来涵盖。即使实体仅仅描述了数据结构和验证逻辑，我们也不会通过层传递实体。组件永远不会看到一个实体对象，只有实体的序列化表示。</p><p>下图显示了所有这些元素之间的相互作用。</p><p><img src="/2022/10/26/ts%E5%AE%9E%E7%8E%B0%E6%95%B4%E6%B4%81%E6%9E%B6%E6%9E%84%E9%A2%86%E5%9F%9F%E5%B1%82/clean-arch-flow.png" alt="clean-arch-flow.png" loading="lazy" data-src="/2022/10/26/ts%E5%AE%9E%E7%8E%B0%E6%95%B4%E6%B4%81%E6%9E%B6%E6%9E%84%E9%A2%86%E5%9F%9F%E5%B1%82/clean-arch-flow.png"></p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>架构</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Lex&amp;yacc学习</title>
    <link href="/2022/10/08/lex%E5%AD%A6%E4%B9%A0/"/>
    <url>/2022/10/08/lex%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<p><img src="/2022/10/08/lex%E5%AD%A6%E4%B9%A0/image-20221008114332001.png" alt="image-20221008114332001" loading="lazy" data-src="/2022/10/08/lex%E5%AD%A6%E4%B9%A0/image-20221008114332001.png"></p><h4 id="lex"><a href="#lex" class="headerlink" title="lex"></a>lex</h4><p>lex是做词法分析的，可以把文本解析为token</p><h4 id="yacc"><a href="#yacc" class="headerlink" title="yacc"></a>yacc</h4><p>yacc 可以把lex解析出来的token搞成语法树</p><h4 id="bison"><a href="#bison" class="headerlink" title="bison"></a>bison</h4><p>其实就是GNU标准yacc，完全兼容yacc，但是功能更加强大。</p><p>一个 Lex 程序分为三个段：第一段是 C 和 Lex 的全局声明，第二段包括模式（C 代码），第三段是补充的 C 函数，这些段以%%来分界。</p><h3 id="先来看看lex解析一个配置的示例"><a href="#先来看看lex解析一个配置的示例" class="headerlink" title="先来看看lex解析一个配置的示例"></a>先来看看lex解析一个配置的示例</h3><p>假设，我们有一个配置文件 config.s，接下来我们利用lex来解析它。</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">db_type:</span> mysql<br><span class="hljs-symbol">db_name:</span> student<br><span class="hljs-symbol">db_table_prefix:</span> test_<br><span class="hljs-symbol">db_port:</span><span class="hljs-number">3306</span><br></code></pre></td></tr></table></figure><p>所以，我们来写我们的lex文件</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><br>%&#123;<br>    #include <span class="hljs-string">&quot;myscaner.h&quot;</span><br>%&#125;<br><br><br>%%<br>:                 <span class="hljs-keyword">return</span> COLON;<br><span class="hljs-string">&quot;db_type&quot;</span>         <span class="hljs-keyword">return</span> TYPE;<br><span class="hljs-string">&quot;db_name&quot;</span>         <span class="hljs-keyword">return</span> NAME;<br><span class="hljs-string">&quot;db_table_prefix&quot;</span> <span class="hljs-keyword">return</span> TABLE_PREFIX;<br><span class="hljs-string">&quot;db_port&quot;</span>           <span class="hljs-keyword">return</span> PORT;<br><br>[a-zA-Z][_a-zA-Z0-<span class="hljs-number">9</span>]* <span class="hljs-keyword">return</span> IDENTIFIER;<br>[<span class="hljs-number">1</span>-<span class="hljs-number">9</span>][<span class="hljs-number">0</span>-<span class="hljs-number">9</span>]*           <span class="hljs-keyword">return</span> INTEGER;<br>[ \t\n]               ;<br>.                     printf(<span class="hljs-string">&quot;unexpected character\n&quot;</span>);<br><br><br><br>%%<br><br>int yywrap(void) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>可以很明显的看出来，我们的lex文件分为3部分，第一部分，我们引入了一个头文件，这个文件的内容是：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">define</span> TYPE 1</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> NAME 2</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> TABLE_PREFIX 3</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> PORT 4</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> COLON 5</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> IDENTIFIER 6</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> INTEGER 7</span><br></code></pre></td></tr></table></figure><p>就是定义了一些常量，可以看到lex文件的第二部分就是使用正则匹配好文本之后，返回token所使用的标识。</p><p>有了这样一个 lex文件之后，我们使用lex进行编译，就会输出一个.c文件</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">lex</span> myscanner.l<br></code></pre></td></tr></table></figure><p><img src="/2022/10/08/lex%E5%AD%A6%E4%B9%A0/image-20221008124503677.png" alt="image-20221008124503677" loading="lazy" data-src="/2022/10/08/lex%E5%AD%A6%E4%B9%A0/image-20221008124503677.png"></p><p>生成的这个文件1千多行，不干别的就是为了把我们输入的文本解析为一堆token，为啥这么说等会你就明白了。</p><p>有了这个lex.yy.c这个文件之后呢，我们就可以利用他来做配置文件解析了。我们可以写一个C程序。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;myscaner.h&quot;</span></span><br><br><span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> <span class="hljs-title function_">yylex</span><span class="hljs-params">()</span>; <span class="hljs-comment">// 链接 lex.yy.c中的方法，这个就是获取下token</span><br><span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> yylineno; <span class="hljs-comment">// 链接lex.yy.c中的 变量，指示这当前解析的行数</span><br><span class="hljs-keyword">extern</span> <span class="hljs-type">char</span> *yytext; <span class="hljs-comment">// 链接lex.yy.c中的 变量,只是当前token的 值。</span><br><br><span class="hljs-type">char</span> *names[] = &#123;<span class="hljs-literal">NULL</span>, <span class="hljs-string">&quot;db_type&quot;</span>, <span class="hljs-string">&quot;db_name&quot;</span>, <span class="hljs-string">&quot;db_table_prefix&quot;</span>, <span class="hljs-string">&quot;db_port&quot;</span>&#125;;<br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br><br>    <span class="hljs-type">int</span> ntoken, vtoken;<span class="hljs-comment">//定义 ”:“ 两边的token</span><br>    ntoken = yylex();<br>    <span class="hljs-keyword">while</span> (ntoken)<br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>, ntoken);<br>        <span class="hljs-keyword">if</span> (yylex() != COLON)<br>        &#123;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Syntax error in line %d, Expected a : but fount %s\n&quot;</span>, yylineno, yytext);<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>        &#125;<br>        <span class="hljs-keyword">switch</span> (ntoken)<br>        &#123;<br>        <span class="hljs-keyword">case</span> TYPE:<br>        <span class="hljs-keyword">case</span> NAME:<br>        <span class="hljs-keyword">case</span> TABLE_PREFIX:<br>        <span class="hljs-keyword">case</span> PORT:<br>            vtoken = yylex();<br>            <span class="hljs-keyword">if</span> (ntoken == PORT &amp;&amp; vtoken != INTEGER)<span class="hljs-comment">//如果是port的话，那么他的值需要时整数</span><br>            &#123;<br>                <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;port expected to be a integer,but %s got\n&quot;</span>, yytext);<br>                <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>            &#125;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s has set to %s\n&quot;</span>, names[ntoken], yytext);<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">default</span>:<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;unexpected token&quot;</span>);<br>        &#125;<br>        ntoken = yylex();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>我们跑一下程序看看</p><p><img src="/2022/10/08/lex%E5%AD%A6%E4%B9%A0/image-20221008130140375.png" alt="image-20221008130140375" loading="lazy" data-src="/2022/10/08/lex%E5%AD%A6%E4%B9%A0/image-20221008130140375.png"></p><p>可以看到，配置文件解析成功。</p><p>那么实际上，我们如果没有lex的帮忙解析这个配置文件应该也不是啥难事，就是读一行文本，解析一行，就比如使用js处理一行</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">line.<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;:&quot;</span>).<span class="hljs-title function_">reduce</span>(..<span class="hljs-title function_">trim</span>().) <span class="hljs-comment">//不是照样可以很容易输出每行配置，要做什么数字检查也相信客观不是啥难事。</span><br></code></pre></td></tr></table></figure><p>但是回过头来想一想，真的有lex这么直接么，lex其实就是一个正则表达式匹配token的描述文件，解析的事情根本不需要我们动手，我们只需要告诉他规则，他就可以帮我们完成文本解析这个过程，利用yylex,yytext，我们就可以把token等等这些东西都方便的找出来为我所用。</p><p>yacc呢</p><p><img src="/2022/10/08/lex%E5%AD%A6%E4%B9%A0/image-20221008131539697.png" alt="image-20221008131539697" loading="lazy" data-src="/2022/10/08/lex%E5%AD%A6%E4%B9%A0/image-20221008131539697.png"></p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>编译原理</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Yew初探</title>
    <link href="/2022/09/29/yew%E5%88%9D%E6%8E%A2/"/>
    <url>/2022/09/29/yew%E5%88%9D%E6%8E%A2/</url>
    
    <content type="html"><![CDATA[<h2 id="yew是啥"><a href="#yew是啥" class="headerlink" title="yew是啥"></a>yew是啥</h2><p><strong>Yew</strong> 是一个设计先进的 <a href="https://www.rust-lang.org/">Rust</a> 框架，目的是使用 <a href="https://webassembly.org/">WebAssembly</a> 来创建多线程的前端 web 应用，众所周知，webAssembly是前端的未来，比如设计软件之神figma就是使用rust写的一个webAssembly，其打败sketch的直接原因就是由于其性能秒杀了它，因此毫无疑问，后面越来越多的web应用将会拥抱webAssembly。实现webAssembly很多种方式，为什么选用rust，其实业界有很多种对比，我觉得figma就是很好的例子，因为它用的是rust，而yew是一个这样的框架，这里是<a href="https://yew.rs/zh-Hans">yew</a>的介绍。</p><h2 id="yew入门"><a href="#yew入门" class="headerlink" title="yew入门"></a>yew入门</h2><h3 id="安装yew环境"><a href="#安装yew环境" class="headerlink" title="安装yew环境"></a>安装yew环境</h3><h4 id="安装rust环境"><a href="#安装rust环境" class="headerlink" title="安装rust环境"></a>安装rust环境</h4><p>要使用yew，需要先安装rust环境，命令简单的不得了</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">curl --proto &#x27;=https&#x27; --tlsv1.2 -sSf https://sh.rustup.rs | sh<br></code></pre></td></tr></table></figure><p>执行完之后记得</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">source &quot;$HOME/.cargo/env&quot;<br>cargo --version<br><span class="hljs-meta prompt_">-&gt;</span><span class="language-bash">cargo 1.64.0 (387270bc7 2022-09-16)</span><br></code></pre></td></tr></table></figure><p>来验证下rust环境是否安装成功。</p><h4 id="安装WebAssembly目标"><a href="#安装WebAssembly目标" class="headerlink" title="安装WebAssembly目标"></a>安装WebAssembly目标</h4><p>Rust 可以编译成不同的 “目标”。浏览器上支持的目标是 “wasm32-unknown-unknown”，安装的办法是：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">rustup target add wasm32-unknown-unknown<br></code></pre></td></tr></table></figure><h4 id="安装trunk这个包管理工具"><a href="#安装trunk这个包管理工具" class="headerlink" title="安装trunk这个包管理工具"></a>安装trunk这个包管理工具</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">cargo install trunk<br></code></pre></td></tr></table></figure><h3 id="开始体验一个yew的简单项目"><a href="#开始体验一个yew的简单项目" class="headerlink" title="开始体验一个yew的简单项目"></a>开始体验一个yew的简单项目</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">cargo new yew-app<br>cd yew-app<br>cargo run<br></code></pre></td></tr></table></figure><p>跑起来之后，你会发现只是在控制台打印了一个开门红，此时也许你也不了解rust，也别着急，我们先把项目转换为web应用。</p><h5 id="使用vscode打开项目，编辑cargo-toml"><a href="#使用vscode打开项目，编辑cargo-toml" class="headerlink" title="使用vscode打开项目，编辑cargo.toml"></a>使用vscode打开项目，编辑cargo.toml</h5><figure class="highlight toml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs toml"><span class="hljs-section">[package]</span><br><span class="hljs-attr">name</span> = <span class="hljs-string">&quot;yew-app&quot;</span><br><span class="hljs-attr">version</span> = <span class="hljs-string">&quot;0.1.0&quot;</span><br><span class="hljs-attr">edition</span> = <span class="hljs-string">&quot;2021&quot;</span><br><br><span class="hljs-comment"># See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html</span><br><br><span class="hljs-section">[dependencies]</span><br><span class="hljs-comment"># 因为我操作时最新的是0.19.3，如果你验证是已经有更加新的版本，可以尝试更新的版本。</span><br><span class="hljs-attr">yew</span> = <span class="hljs-string">&quot;0.19.3&quot;</span><br></code></pre></td></tr></table></figure><h5 id="编辑一下main-rs"><a href="#编辑一下main-rs" class="headerlink" title="编辑一下main.rs"></a>编辑一下main.rs</h5><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs rust"><span class="hljs-keyword">use</span> yew::prelude::*;<br><br><span class="hljs-keyword">enum</span> <span class="hljs-title class_">Msg</span> &#123;<br>    AddOne,<br>&#125;<br><br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">Model</span> &#123;<br>    value: <span class="hljs-type">i64</span>,<br>&#125;<br><br><span class="hljs-keyword">impl</span> <span class="hljs-title class_">Component</span> <span class="hljs-keyword">for</span> <span class="hljs-title class_">Model</span> &#123;<br>    <span class="hljs-keyword">type</span> <span class="hljs-title class_">Message</span> = Msg;<br>    <span class="hljs-keyword">type</span> <span class="hljs-title class_">Properties</span> = ();<br><br>    <span class="hljs-keyword">fn</span> <span class="hljs-title function_">create</span>(_ctx: &amp;Context&lt;<span class="hljs-keyword">Self</span>&gt;) <span class="hljs-punctuation">-&gt;</span> <span class="hljs-keyword">Self</span> &#123;<br>        <span class="hljs-keyword">Self</span> &#123;<br>            value: <span class="hljs-number">0</span>,<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">fn</span> <span class="hljs-title function_">update</span>(&amp;<span class="hljs-keyword">mut</span> <span class="hljs-keyword">self</span>, _ctx: &amp;Context&lt;<span class="hljs-keyword">Self</span>&gt;, msg: <span class="hljs-keyword">Self</span>::Message) <span class="hljs-punctuation">-&gt;</span> <span class="hljs-type">bool</span> &#123;<br>        <span class="hljs-keyword">match</span> msg &#123;<br>            Msg::AddOne =&gt; &#123;<br>                <span class="hljs-keyword">self</span>.value += <span class="hljs-number">1</span>;<br>                <span class="hljs-comment">// the value has changed so we need to</span><br>                <span class="hljs-comment">// re-render for it to appear on the page</span><br>                <span class="hljs-literal">true</span><br>            &#125;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">fn</span> <span class="hljs-title function_">view</span>(&amp;<span class="hljs-keyword">self</span>, ctx: &amp;Context&lt;<span class="hljs-keyword">Self</span>&gt;) <span class="hljs-punctuation">-&gt;</span> Html &#123;<br>        <span class="hljs-comment">// This gives us a component&#x27;s &quot;`Scope`&quot; which allows us to send messages, etc to the component.</span><br>        <span class="hljs-keyword">let</span> <span class="hljs-variable">link</span> = ctx.<span class="hljs-title function_ invoke__">link</span>();<br>        html! &#123;<br>            &lt;div&gt;<br>                &lt;button onclick=&#123;link.<span class="hljs-title function_ invoke__">callback</span>(|_| Msg::AddOne)&#125;&gt;&#123; <span class="hljs-string">&quot;+1&quot;</span> &#125;&lt;/button&gt;<br>                &lt;p&gt;&#123; <span class="hljs-keyword">self</span>.value &#125;&lt;/p&gt;<br>            &lt;/div&gt;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">fn</span> <span class="hljs-title function_">main</span>() &#123;<br>    yew::start_app::&lt;Model&gt;();<br>&#125;<br></code></pre></td></tr></table></figure><h5 id="创建一个index-html"><a href="#创建一个index-html" class="headerlink" title="创建一个index.html"></a>创建一个index.html</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Yew App<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h5 id="好了，编译出你的web应用吧"><a href="#好了，编译出你的web应用吧" class="headerlink" title="好了，编译出你的web应用吧"></a>好了，编译出你的web应用吧</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">trunk serve<br></code></pre></td></tr></table></figure><h5 id="打开浏览器卡看"><a href="#打开浏览器卡看" class="headerlink" title="打开浏览器卡看"></a>打开浏览器卡看</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">http://127.0.0.1:8080<br></code></pre></td></tr></table></figure><h5 id="打包生成的文件是"><a href="#打包生成的文件是" class="headerlink" title="打包生成的文件是"></a>打包生成的文件是</h5><p><img src="/2022/09/29/yew%E5%88%9D%E6%8E%A2/image-20220929165528190.png" alt="image-20220929165528190" loading="lazy" data-src="/2022/09/29/yew%E5%88%9D%E6%8E%A2/image-20220929165528190.png"></p><p>这个框架也算是比较人性化，对rs文件的变更，保存之后，也会马上热更新。</p><p>至此，yew的初探就完成了，下期，尝试写一个比较复杂的应用吧。</p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>webassambly</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>小程序图片加载优化</title>
    <link href="/2022/04/12/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%9B%BE%E7%89%87%E5%8A%A0%E8%BD%BD%E4%BC%98%E5%8C%96/"/>
    <url>/2022/04/12/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%9B%BE%E7%89%87%E5%8A%A0%E8%BD%BD%E4%BC%98%E5%8C%96/</url>
    
    <content type="html"><![CDATA[<h4 id="小程序图片加载优化的意义"><a href="#小程序图片加载优化的意义" class="headerlink" title="小程序图片加载优化的意义"></a>小程序图片加载优化的意义</h4><ol><li>提示加载速度，让用户觉得爽</li><li>降低内存占用，使得小程序允许保持在一个较低水平的内存，不用户oom导致crash</li></ol><h4 id="加速方面"><a href="#加速方面" class="headerlink" title="加速方面"></a>加速方面</h4><p>降低网络图片内容大小，可以使用webp替代jpg，因为同等质量下webp体积拳打png脚踢jpg，且根据小程序官网来看，目前是支持webp的</p><p><img src="/2022/04/12/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%9B%BE%E7%89%87%E5%8A%A0%E8%BD%BD%E4%BC%98%E5%8C%96/image-20220412155601770.png" alt="小程序webp支持" loading="lazy" data-src="/2022/04/12/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%9B%BE%E7%89%87%E5%8A%A0%E8%BD%BD%E4%BC%98%E5%8C%96/image-20220412155601770.png"></p><p>那么，真是的测试效果是，之前150k左右的jpg，目前只需要80k，而且清晰度比之前高很多，体积比之前小了，显然加载就快了，这部分不需要多少例证。</p><p>比较容易忽略的是，本身用户的网络不好，处于弱网情况下，我们改怎么优化？</p><p>一个比较容易想到的办法是预加载，事实上，腾讯电子签也是这么做的，我们做了一个自定义组件，传一堆图片url进来，帮助加载，设置每个图片像素是1个像素，加载ok之后，干掉[v-if&#x3D;”false”]，避免占用dom节点。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;template&gt;<br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;!imageLoaded&quot;</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">image</span></span></span><br><span class="hljs-tag"><span class="language-xml">      <span class="hljs-attr">v-show</span>=<span class="hljs-string">&quot;false&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">      <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(item, index) in urls&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">      @<span class="hljs-attr">load</span>=<span class="hljs-string">&quot;imageLoad&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">      <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;index&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">      <span class="hljs-attr">:src</span>=<span class="hljs-string">&quot;item&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">      <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;image-item-pre-loader&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">    &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">image</span>&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="language-javascript"><span class="language-xml">  <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">return</span> &#123;</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-attr">imageLoaded</span>: <span class="hljs-literal">false</span>,</span></span><br><span class="language-javascript"><span class="language-xml">    &#125;;</span></span><br><span class="language-javascript"><span class="language-xml">  &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">  <span class="hljs-attr">props</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-attr">urls</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-attr">type</span>: <span class="hljs-title class_">Array</span>,</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-attr">default</span>: <span class="hljs-function">() =&gt;</span> [],</span></span><br><span class="language-javascript"><span class="language-xml">    &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">  &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">  <span class="hljs-attr">methods</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-title function_">imageLoad</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-variable language_">this</span>.<span class="hljs-property">imageLoaded</span> = <span class="hljs-literal">true</span>;<span class="hljs-comment">// 预加载图片成功后，干掉预加载图片控件，避免占用内存</span></span></span><br><span class="language-javascript"><span class="language-xml">    &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">  &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">&#125;;</span></span><br><span class="language-javascript"><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-selector-class">.image-item-pre-loader</span> &#123;</span></span><br><span class="language-css"><span class="language-xml">  <span class="hljs-attribute">width</span>: <span class="hljs-number">1px</span>;</span></span><br><span class="language-css"><span class="language-xml">  <span class="hljs-attribute">height</span>: <span class="hljs-number">1px</span>;</span></span><br><span class="language-css"><span class="language-xml">&#125;</span></span><br><span class="language-css"><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span></span><br><br></code></pre></td></tr></table></figure><p>用法是，在进入页面之前提前加载下一页需要用到的图片资源，细心的你可以发现，这个预加载图片自定义组件做得更绝，加载完之后，把自己销毁了，但是达到了目的，提前把图片加载到了磁盘，因此，下一次加载图片的时候，会是load from disk.</p><p><img src="/2022/04/12/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%9B%BE%E7%89%87%E5%8A%A0%E8%BD%BD%E4%BC%98%E5%8C%96/wecom-temp-b937585e2817c5f55fa765a64d0d022a.png" alt="load from disk" loading="lazy" data-src="/2022/04/12/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%9B%BE%E7%89%87%E5%8A%A0%E8%BD%BD%E4%BC%98%E5%8C%96/wecom-temp-b937585e2817c5f55fa765a64d0d022a.png"></p><p>体验明显会更加好，给用户的感觉是加载更快了。</p><h4 id="内存占用方面"><a href="#内存占用方面" class="headerlink" title="内存占用方面"></a>内存占用方面</h4><p>众所周知，一张图片在App中占用的内存和他的体积没有实际关系，只和图片的真实像素有关，换句话说，<strong>图片的width*height越大，所占用的内存就越大</strong>。普遍看，几乎所有的App中都存在这样的场景，加载的图片的实际尺寸远远大于控件的尺寸，这是对内存赤裸裸的浪费，在腾讯电子签小程序中也存在不少这样的场景，例如,这个小图用的是一个超级大图。</p><p><img src="/2022/04/12/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%9B%BE%E7%89%87%E5%8A%A0%E8%BD%BD%E4%BC%98%E5%8C%96/image-20220412155942568.png" alt="实际加载图片尺寸远大于控件尺寸" loading="lazy" data-src="/2022/04/12/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%9B%BE%E7%89%87%E5%8A%A0%E8%BD%BD%E4%BC%98%E5%8C%96/image-20220412155942568.png"></p><p>针对这样的场景，其解法是需要提供一份与之尺寸匹配的图片。</p><p>但，这样并不是终点，我们如何能做到防微杜渐，避免这些悲剧不断发生才是王道。因为，腾讯电子签采取的措施是在image控件的onload回调中做文章。</p><ol><li>在image的onload方法中获取图片实际的尺寸。</li><li>通过微信小程序 createSelectorQuery 暴露出来的api拿到图片的实际尺寸</li><li>两者想比较，如果实际图片远大于控件尺寸，进行告警，逐一修复</li></ol><p>最终我们实现了日志加告警，目前已经正在投入使用中，并且对检查出来的大图进行逐一修复中。</p><p>另外：在监控告警中，我们意外发现，<strong>有些图片居然没有设置固定宽高，通常出现的这种情况比较容易会造成页面的重绘</strong>，所以在监控中，我们也加入了图片没有设置尺寸的告警，进而进一步优化用户体验。</p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>小程序</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>小程序优化指南</title>
    <link href="/2022/04/03/uni-app%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%BC%98%E5%8C%96%E6%8C%87%E5%8D%97/"/>
    <url>/2022/04/03/uni-app%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%BC%98%E5%8C%96%E6%8C%87%E5%8D%97/</url>
    
    <content type="html"><![CDATA[<h2 id="官方优化建议"><a href="#官方优化建议" class="headerlink" title="官方优化建议"></a>官方优化建议</h2><h4 id="避免使用大图"><a href="#避免使用大图" class="headerlink" title="避免使用大图"></a>避免使用大图</h4><p>页面中若大量使用大图资源，会造成页面切换的卡顿，导致系统内存升高，甚至白屏崩溃。</p><p>尤其是不要把多张大图缩小后显示在一个屏幕内，比如上传图片前选了数张几M体积的照片，然后缩小在一个屏幕中展示多张几M的大图，非常容易白屏崩溃。对大体积的二进制文件进行base64，也非常耗费资源。</p><h4 id="优化数据更新"><a href="#优化数据更新" class="headerlink" title="优化数据更新"></a>优化数据更新</h4><p>在 <code>uni-app</code> 中，定义在 data 里面的数据每次变化时都会通知视图层重新渲染页面。<strong>所以如果不是视图所需要的变量，可以不定义在 data 中，可在外部定义变量或直接挂载在vue实例上，以避免造成资源浪费</strong>。</p><h5 id="长列表"><a href="#长列表" class="headerlink" title="长列表"></a>长列表</h5><ul><li>长列表中如果每个item有一个点赞按钮，点击后点赞数字+1，此时点赞组件必须是一个<strong>单独引用的组件，才能做到差量数据更新</strong>。否则会造成整个列表数据重载。</li><li>长列表中每个item并不一定需要做成组件，取决于你的业务中是否需要差量更新某一行item的数据，如没有此类需求则不应该引入大量组件。（点击item后背景变色，属于css调整，没有更新data数据和渲染，不涉及这个问题）</li><li>单个组件中存在大量数据时（比如长列表），在App和小程序端数据更新时会消耗较多时间，建议使用组件对数据进行分页，将变更限制更小范围。可以参考：<a href="https://ext.dcloud.net.cn/plugin?id=2863#detail">长列表优化示例(opens new window)</a></li><li>如需要左右滑动的长列表，请在HBuilderX新建uni-app项目选新闻模板，那是一个标杆实现。自己用swiper和scroll-view做很容易引发性能问题。</li></ul><h4 id="减少一次性渲染的节点数量"><a href="#减少一次性渲染的节点数量" class="headerlink" title="减少一次性渲染的节点数量"></a>减少一次性渲染的节点数量</h4><p><strong>页面初始化时，逻辑层如果一次性向视图层传递很大的数据，使视图层一次性渲染大量节点，可能造成通讯变慢、页面切换卡顿</strong>，所以建议以局部更新页面的方式渲染页面。如：服务端返回100条数据，可进行分批加载，一次加载50条，500ms 后进行下一次加载。</p><h4 id="减少组件数量、减少节点嵌套层级"><a href="#减少组件数量、减少节点嵌套层级" class="headerlink" title="减少组件数量、减少节点嵌套层级"></a>减少组件数量、减少节点嵌套层级</h4><p>深层嵌套的节点在页面初始化构建时往往需要更多的内存占用，并且在遍历节点时也会更慢些，所以建议减少深层的节点嵌套，即页面结果更加扁平化。</p><h4 id="避免视图层和逻辑层频繁进行通讯"><a href="#避免视图层和逻辑层频繁进行通讯" class="headerlink" title="避免视图层和逻辑层频繁进行通讯"></a>避免视图层和逻辑层频繁进行通讯</h4><ul><li>减少 scroll-view 组件的 scroll 事件监听，当监听 scroll-view 的滚动事件时，视图层会频繁的向逻辑层发送数据；</li><li>监听 scroll-view 组件的滚动事件时，不要实时的改变 scroll-top&#x2F;scroll-left 属性，因为监听滚动时，视图层向逻辑层通讯，改变 scroll-top&#x2F;scroll-left 时，逻辑层又向视图层通讯，这样就可能造成通讯卡顿。</li><li>注意 onPageScroll 的使用，onPageScroll 进行监听时，视图层会频繁的向逻辑层发送数据；</li><li>多使用css动画，而不是通过js的定时器操作界面做动画</li><li>如需在canvas里做跟手操作，小程序端建议使用web-view组件。<strong>web-view里的页面没有逻辑层和视图层分离的概念</strong>，自然也不会有通信折损。</li></ul><h4 id="优化页面切换动画"><a href="#优化页面切换动画" class="headerlink" title="优化页面切换动画"></a>优化页面切换动画</h4><ul><li>页面初始化时若存在大量图片或<strong>原生组件渲染和大量数据通讯，会发生新页面渲染和窗体进入动画抢资源，造成页面切换卡顿、掉帧</strong>。建议延时100ms~300ms渲染图片或复杂原生组件，分批进行数据通讯，以减少一次性渲染的节点数量。</li></ul><h4 id="优化背景色闪白"><a href="#优化背景色闪白" class="headerlink" title="优化背景色闪白"></a>优化背景色闪白</h4><ol><li>如果是新页面进入时背景闪白</li></ol><ul><li>如果页面背景是深色，在vue页面中可能会发生新窗体刚开始动画时是灰白色背景，动画结束时才变为深色背景，造成闪屏。这是因为webview的背景生效太慢的问题。此时需将样式写在 <code>App.vue</code> 里，可以加速页面样式渲染速度。<code>App.vue</code> 里面的样式是全局样式，每次新开页面会优先加载 <code>App.vue</code> 里面的样式，然后加载普通 vue 页面的样式。</li></ul><h4 id="优化启动速度"><a href="#优化启动速度" class="headerlink" title="优化启动速度"></a>优化启动速度</h4><ul><li>工程代码越多，包括背景图和本地字体文件越大，对小程序启动速度有影响，应注意控制体积。组件引用的前景图不影响性能。</li></ul><h4 id="优化包体积"><a href="#优化包体积" class="headerlink" title="优化包体积"></a>优化包体积</h4><ul><li><p>uni-app发行到小程序时，自带引擎只有几十K，主要是一个定制过的vue.js核心库。如果使用了es6转es5、css对齐的功能，可能会增大代码体积，可以配置这些编译功能是否开启。</p></li><li><h5 id="解决uni-app编译后vendor-js文件过大"><a href="#解决uni-app编译后vendor-js文件过大" class="headerlink" title="解决uni-app编译后vendor.js文件过大"></a><a href="https://segmentfault.com/a/1190000022034729">解决uni-app编译后vendor.js文件过大</a></h5><ul><li><strong>开启生产环境gzip</strong>，vendor.js从2.5M减少到440k</li><li>使用 <a href="https://link.segmentfault.com/?enc=55naxIfeVBleEhh0keJWfQ==.ejew0C/77C/i4a23Ple5Ws84RAXAcgN0bIPdNLEDaAfUIrhQ4rawtZSX8TpRQTpA7QAlJ+gGALw4OzlnkYU1pw==">webpackBundleAnalyzer</a>，可以帮助分析文件大小。</li></ul></li></ul><h2 id="微信官方优化建议"><a href="#微信官方优化建议" class="headerlink" title="微信官方优化建议"></a>微信官方优化建议</h2><h4 id="小程序启动性能优化"><a href="#小程序启动性能优化" class="headerlink" title="小程序启动性能优化"></a>小程序启动性能优化</h4><p>这部分主要是冷加载首屏渲染优化</p><ol><li>按需注入组件</li><li>小程序支持启用<strong>初始渲染缓存</strong>。开启后，可以在<strong>非首次</strong>启动时，使视图层不需要等待逻辑层初始化完毕，而直接提前将页面渲染结果展示给用户，这可以使「首页渲染完成」和页面对用户可见的时间大大提前</li><li>当组件不被使用时，应及时从 <code>usingComponents</code> 中移除。</li><li>与视图层渲染无关的数据应尽量不要放在 data 中，避免影响页面渲染时间。</li><li>读写本地缓存的能力，数据存储在本地，返回的会比网络请求快</li><li>骨架屏，分模块加载</li></ol><h4 id="小程序运行时性能优化"><a href="#小程序运行时性能优化" class="headerlink" title="小程序运行时性能优化"></a>小程序运行时性能优化</h4><hr><h5 id="合理使用-setData"><a href="#合理使用-setData" class="headerlink" title="合理使用 setData"></a>合理使用 setData</h5><p><code>setData</code> 是小程序开发中使用最频繁、也是最容易引发性能问题的接口。</p><h5 id="1-setData-的流程"><a href="#1-setData-的流程" class="headerlink" title="1. setData 的流程"></a>1. setData 的流程</h5><p><code>setData</code> 的过程，大致可以分成几个阶段：</p><ul><li>逻辑层虚拟 DOM 树的遍历和更新，触发组件生命周期和 observer 等；</li><li>将 data 从逻辑层传输到视图层；</li><li>视图层虚拟 DOM 树的更新、真实 DOM 元素的更新并触发页面渲染更新。</li><li>于小程序的逻辑层和视图层是两个独立的运行环境、分属不同的线程或进程，不能直接进行数据共享，需要进行数据的序列化、跨线程&#x2F;进程的数据传输、数据的反序列化，因此数据传输过程是<strong>异步的、非实时的</strong></li><li>数据传输的耗时与<strong>数据量的大小</strong>正相关，如果对端线程处于繁忙状态，数据会在<strong>消息队列中等待</strong>。</li></ul><h5 id="2、优化建议"><a href="#2、优化建议" class="headerlink" title="2、优化建议"></a>2、优化建议</h5><ul><li><strong>data 应只包括渲染相关的数据setData</strong> ：用 setData 的方式更新渲染无关的字段，会触发额外的渲染流程，或者增加传输的数据量，影响渲染耗时。</li><li><strong>控制 setData 的频率</strong>：仅在需要进行页面内容更新时调用 setData、对连续的 setData 调用尽可能的进行<strong>合并</strong></li><li><strong>选择合适的 setData 范围</strong>：对于需要频繁更新的页面元素，可以封装为独立的组件，在组件内进行 setData 操作。</li><li><strong>setData应该只传变化的数据</strong>：<code>this.setData(&#123;&#39;array[2].message&#39;: &#39;newVal&#39;, &#39;a.b.c.d&#39;: &#39;newVal&#39;&#125;)</code>，而不是每次都更新整个对象或数组；</li><li><strong>setData应该避免后台页面刷新</strong>：页面切后台后的更新操作，应尽量避免，或延迟到页面 <code>onShow</code> 后延迟进行</li></ul><h2 id><a href="#" class="headerlink" title></a></h2><h5 id="渲染性能优化"><a href="#渲染性能优化" class="headerlink" title="渲染性能优化"></a>渲染性能优化</h5><ol><li>非必要不监听 scroll 事件；</li><li>选择高性能动画实现方式，如优先使用 CSS 渐变、CSS 动画</li><li>建议使用<a href="https://developers.weixin.qq.com/miniprogram/dev/api/wxml/wx.createIntersectionObserver.html">节点布局相交状态监听 IntersectionObserver</a> 推断某些节点是否可见、有多大比例可见，而不是监听scrollview</li></ol><hr><h5 id="页面切换优化"><a href="#页面切换优化" class="headerlink" title="页面切换优化"></a>页面切换优化</h5><p><img src="https://res.wx.qq.com/wxdoc/dist/assets/img/route-1.2700b598.svg" alt="img" loading="lazy"></p><ol><li>onHide&#x2F;onUnload 中的逻辑应尽量简单，若必须要进行部分复杂逻辑，可以考虑用 setTimeout 延迟进行。</li><li>跳转到分包页面时，从发起页面跳转到页面 onLoad 之间可能有较长的时间间隔，可以利用时间进行网络数据加载，提前准备分包页数据。</li><li>避免预加载流程对页面加载过程的影响，开发者可以配置 <code>handleWebviewPreload</code> 选项，来控制预加载下个页面的时机。设置<code>&quot;handleWebviewPreload&quot;: &quot;auto&quot;</code></li></ol><hr><h5 id="资源加载优化"><a href="#资源加载优化" class="headerlink" title="资源加载优化"></a>资源加载优化</h5><h5 id="1-控制图片资源的大小"><a href="#1-控制图片资源的大小" class="headerlink" title="1. 控制图片资源的大小"></a>1. 控制图片资源的大小</h5><p>开发者应根据功能需要和实际显示区域的大小，选择合适的图片尺寸、图片格式和压缩比。</p><p><strong>图片体积太大，可能导致下列后果</strong></p><ul><li>增加图片下载时间，导致用户看到图片时机延迟；</li><li>对用户造成非必要的流量消耗；</li><li>影响图片解码和绘制的耗时，可能更容易造成掉帧、卡顿或白屏，甚至无法正常进行滚动和页面切换（低端设备上会尤为明显）；</li><li>内存占用增长，尤其是大图片和长列表中的大量图片会导致内存占用急剧上升。</li></ul><h5 id="图片对内存的影响"><a href="#图片对内存的影响" class="headerlink" title="图片对内存的影响"></a><strong>图片对内存的影响</strong></h5><p>iOS 系统内存紧张时，会主动回收掉一部分 WebView。大图片和长列表中的大量图片很容易引起系统对 WebView 的回收，导致小程序白屏，严重时会触发微信强制关闭小程序。</p><p>内存增长如果超过了限制，也会导致小程序出现白屏或黑屏，甚至整个小程序发生闪退。</p><h5 id="2-避免滥用-image-组件的-widthFix-x2F-heightFix-模式"><a href="#2-避免滥用-image-组件的-widthFix-x2F-heightFix-模式" class="headerlink" title="2. 避免滥用 image 组件的 widthFix&#x2F;heightFix 模式"></a>2. 避免滥用 image 组件的 widthFix&#x2F;heightFix 模式</h5><p>widthFix&#x2F;heightFix 模式会在图片加载完成后，动态改变图片的高度或宽度。图片高度或宽度的动态改变，可能会引起页面内大范围的布局重排，导致页面发生抖动，并造成卡顿。</p><p>对于页面的背景图或 banner 图，应尽量预先指定图片的尺寸，避免图片加载完成后再进行二次的尺寸调整。</p><hr><h5 id="内存优化"><a href="#内存优化" class="headerlink" title="内存优化"></a>内存优化</h5><ol><li>建议小程序在必要时使用 <a href="https://developers.weixin.qq.com/miniprogram/dev/api/device/memory/wx.onMemoryWarning.html">wx.onMemoryWarning</a> 监听内存告警事件，进行必要的内存清理。例如：释放一些暂时不用的组件或 JS 对象。</li><li>页面 unload 之后，基础库会从页面栈中将页面实例清理，unload 中进行必要的清理。<ol><li>事件监听器中持有了页面的 this</li><li>函数闭包内持有了页面的 this</li><li>异步回调中访问了页面的 this，如wx.request</li><li>定时器等清理</li></ol></li><li>按需加载图片，过大的图片渲染到过小的组件区域是一种内存浪费</li><li>不要发送无用的网络请求，解析数据都是内存消耗。</li></ol><hr><h2 id="自己沉淀优化"><a href="#自己沉淀优化" class="headerlink" title="自己沉淀优化"></a>自己沉淀优化</h2><h4 id="页面切换优化-1"><a href="#页面切换优化-1" class="headerlink" title="页面切换优化"></a>页面切换优化</h4><ol><li>预加载图片，可以定义一个预加载图片组件，提前预加载图片，加载完记得释放组件</li><li>列表进入详情，直接带上item项进入，在loading数据，配合骨架屏。</li><li>优化网络请求耗时，接口缓存机制</li></ol><h4 id="内存优化-1"><a href="#内存优化-1" class="headerlink" title="内存优化"></a>内存优化</h4><ol><li>图片使用合理的尺寸</li><li>避免网络数据冗余</li></ol><h2 id="监控体系搭建"><a href="#监控体系搭建" class="headerlink" title="监控体系搭建"></a>监控体系搭建</h2><p>目的：提供优化指导，对比优化后的数据，数据呈现,TAM，小程序测速均ok</p><h4 id="图片监控"><a href="#图片监控" class="headerlink" title="图片监控"></a>图片监控</h4><ol><li>网络图片远远大于控件尺寸</li><li>加载耗时严重</li><li>预加载图片、命中效果</li></ol><h4 id="setData尺寸过大，频率过快"><a href="#setData尺寸过大，频率过快" class="headerlink" title="setData尺寸过大，频率过快"></a>setData尺寸过大，频率过快</h4><ol><li>setData数据过大</li><li>setData次数过于频繁</li></ol><h4 id="网络监控"><a href="#网络监控" class="headerlink" title="网络监控"></a>网络监控</h4><ol><li>接口请求异常</li><li>连接耗时过长</li><li>接口数据包大</li><li>接口http cache</li></ol><h4 id="内存监控"><a href="#内存监控" class="headerlink" title="内存监控"></a>内存监控</h4><ol><li>内存触发告警</li><li>dump 分析</li></ol><h4 id="卡顿监控"><a href="#卡顿监控" class="headerlink" title="卡顿监控"></a>卡顿监控</h4><ol><li>首次渲染超过500ms</li><li>路由卡顿？这个貌似波动很大</li><li>点击卡顿</li></ol><p>方案通用话，最好是SDK接入，方便外部团队接入</p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>小程序</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Google workSpace Market Docsign插件研究</title>
    <link href="/2022/03/30/Google-workSpace-Market-docsign%E6%8F%92%E4%BB%B6%E7%A0%94%E7%A9%B6/"/>
    <url>/2022/03/30/Google-workSpace-Market-docsign%E6%8F%92%E4%BB%B6%E7%A0%94%E7%A9%B6/</url>
    
    <content type="html"><![CDATA[<p>docSign目前已经集成到了Google doc上面，起呈现模式如下所示：</p><p><img src="/2022/03/30/Google-workSpace-Market-docsign%E6%8F%92%E4%BB%B6%E7%A0%94%E7%A9%B6/image-20220330163525236.png" alt="image-20220330163525236" loading="lazy" data-src="/2022/03/30/Google-workSpace-Market-docsign%E6%8F%92%E4%BB%B6%E7%A0%94%E7%A9%B6/image-20220330163525236.png"></p><p>被唤起之后，其插件模块层现在页面的右边，是一个siderbar的形式。</p><p>经过调研，<strong>发现只有文档类型才有这个插件入口</strong>，看起来，形态上是做一些内容编辑，然后在进行合同相关控件的补充，进而进行合同签署。加入说编辑好了合同内容，点击下一步，就进入到</p><p><strong>添加联系人的环节了</strong></p><p><img src="/2022/03/30/Google-workSpace-Market-docsign%E6%8F%92%E4%BB%B6%E7%A0%94%E7%A9%B6/image-20220330164607707.png" alt="image-20220330164607707" loading="lazy" data-src="/2022/03/30/Google-workSpace-Market-docsign%E6%8F%92%E4%BB%B6%E7%A0%94%E7%A9%B6/image-20220330164607707.png"></p><p>这里可以补充多方联系人，联系人的补充界面呈现如下：</p><p><img src="/2022/03/30/Google-workSpace-Market-docsign%E6%8F%92%E4%BB%B6%E7%A0%94%E7%A9%B6/image-20220330164717447.png" alt="image-20220330164717447" loading="lazy" data-src="/2022/03/30/Google-workSpace-Market-docsign%E6%8F%92%E4%BB%B6%E7%A0%94%E7%A9%B6/image-20220330164717447.png"></p><p>这里可以看到老外的习惯是<strong>姓名+邮箱</strong>的形式，并没有国内所谓的身份证、手机号等等，好奇这块如何做身份核验了，继续下一步。</p><p><img src="/2022/03/30/Google-workSpace-Market-docsign%E6%8F%92%E4%BB%B6%E7%A0%94%E7%A9%B6/image-20220330164925444.png" alt="image-20220330164925444" loading="lazy" data-src="/2022/03/30/Google-workSpace-Market-docsign%E6%8F%92%E4%BB%B6%E7%A0%94%E7%A9%B6/image-20220330164925444.png"></p><p>可以看到，这里如果是你和对方签的话，你是使用邮件的方式通知别人签署，所以需要写一封邮件，简单的提醒下用户签署文件。</p><p>点击下一步，出现了一个错误</p><p><img src="/2022/03/30/Google-workSpace-Market-docsign%E6%8F%92%E4%BB%B6%E7%A0%94%E7%A9%B6/image-20220330165119887.png" alt="image-20220330165119887" loading="lazy" data-src="/2022/03/30/Google-workSpace-Market-docsign%E6%8F%92%E4%BB%B6%E7%A0%94%E7%A9%B6/image-20220330165119887.png"></p><p>看起来，插件刚上，貌似bug还是有点多。正常情况下，<strong>会直接跳转到docsign自己的官网去</strong>：</p><p><img src="/2022/03/30/Google-workSpace-Market-docsign%E6%8F%92%E4%BB%B6%E7%A0%94%E7%A9%B6/image-20220330170136508.png" alt="image-20220330170136508" loading="lazy" data-src="/2022/03/30/Google-workSpace-Market-docsign%E6%8F%92%E4%BB%B6%E7%A0%94%E7%A9%B6/image-20220330170136508.png"></p><p>这里会给所有的参与方发送一封邮件进行签署。可以看到，他支持：</p><ol><li>设置签署方顺序</li><li>从通讯录中继续添加签署方</li><li>显示签署顺序</li></ol><p>签署顺序确定之后，可以通过点击签名顺序查看，无序签署和有序签署生成的流图不一样。</p><p>下面这个是无序的</p><p><img src="/2022/03/30/Google-workSpace-Market-docsign%E6%8F%92%E4%BB%B6%E7%A0%94%E7%A9%B6/image-20220330172946091.png" alt="image-20220330172946091" loading="lazy" data-src="/2022/03/30/Google-workSpace-Market-docsign%E6%8F%92%E4%BB%B6%E7%A0%94%E7%A9%B6/image-20220330172946091.png"></p><p>下面这个是有序的</p><p><img src="/2022/03/30/Google-workSpace-Market-docsign%E6%8F%92%E4%BB%B6%E7%A0%94%E7%A9%B6/image-20220330173145752.png" alt="image-20220330173145752" loading="lazy" data-src="/2022/03/30/Google-workSpace-Market-docsign%E6%8F%92%E4%BB%B6%E7%A0%94%E7%A9%B6/image-20220330173145752.png"></p><p>一份合同的发起可以对签署人做一些签署限制。比如限制需要亲身签名等</p><p><img src="/2022/03/30/Google-workSpace-Market-docsign%E6%8F%92%E4%BB%B6%E7%A0%94%E7%A9%B6/image-20220330173503734.png" alt="image-20220330173503734" loading="lazy" data-src="/2022/03/30/Google-workSpace-Market-docsign%E6%8F%92%E4%BB%B6%E7%A0%94%E7%A9%B6/image-20220330173503734.png"></p><p>还可以自定义，主要是针对邮件内容添加私信或者增加访问密码已确保安全。</p><p><img src="/2022/03/30/Google-workSpace-Market-docsign%E6%8F%92%E4%BB%B6%E7%A0%94%E7%A9%B6/image-20220330173531132.png" alt="image-20220330173531132" loading="lazy" data-src="/2022/03/30/Google-workSpace-Market-docsign%E6%8F%92%E4%BB%B6%E7%A0%94%E7%A9%B6/image-20220330173531132.png"></p><p>注意，最终发送这份合同的人，<strong>在合同签署完之后，无论如何都会收到一份完成的合同的副本</strong>。</p><p>点击下一步，就会进入控件分配页，可以给签署放分配填写控件，签署控件等。</p><p><img src="/2022/03/30/Google-workSpace-Market-docsign%E6%8F%92%E4%BB%B6%E7%A0%94%E7%A9%B6/image-20220330173723435.png" alt="image-20220330173723435" loading="lazy" data-src="/2022/03/30/Google-workSpace-Market-docsign%E6%8F%92%E4%BB%B6%E7%A0%94%E7%A9%B6/image-20220330173723435.png"></p><p><strong>如果直接发送邮件，发起流程就结束了</strong>，签署人会收到一封邮件，进入之后</p><p><img src="/2022/03/30/Google-workSpace-Market-docsign%E6%8F%92%E4%BB%B6%E7%A0%94%E7%A9%B6/image-20220330174229260.png" alt="image-20220330174229260" loading="lazy" data-src="/2022/03/30/Google-workSpace-Market-docsign%E6%8F%92%E4%BB%B6%E7%A0%94%E7%A9%B6/image-20220330174229260.png"></p><p>可选：</p><ol><li>在左侧操作栏签名，或放置内容上去</li><li>打印下来签名</li><li>分配给别人处理</li><li>拒签</li></ol><p>看交互，起主要想做的动作应该是让用户使用左侧的控件进行签署，要注意的是，这里的签署并不一定是签名。</p><p><img src="/2022/03/30/Google-workSpace-Market-docsign%E6%8F%92%E4%BB%B6%E7%A0%94%E7%A9%B6/image-20220330174613276.png" alt="image-20220330174613276" loading="lazy" data-src="/2022/03/30/Google-workSpace-Market-docsign%E6%8F%92%E4%BB%B6%E7%A0%94%E7%A9%B6/image-20220330174613276.png"></p><p>还可以是：</p><ol><li>盖章</li><li>放置日期</li><li>已经放置一些填写类的控件上去，并填写内容。</li></ol><p>然后点击完成之后，就生成了一份完成了的合同，<strong>这里比较特殊的是，在docsign没有账号的情况下，依然可以签署，签署完成后，docsign会引导你创建一个账号，保存副本</strong>。</p><p><img src="/2022/03/30/Google-workSpace-Market-docsign%E6%8F%92%E4%BB%B6%E7%A0%94%E7%A9%B6/image-20220330175113158.png" alt="image-20220330175113158" loading="lazy" data-src="/2022/03/30/Google-workSpace-Market-docsign%E6%8F%92%E4%BB%B6%E7%A0%94%E7%A9%B6/image-20220330175113158.png"></p><p>生成账号只会，查看副本会进入上述页面。这里可以看到本次合同签署还有一方没有签署。然后有：</p><ol><li>收件箱–收取待签署的合同</li><li>已发送–我发的合同，可以看到docsign是对发送合同收费的，签署不收费，我注册新号只赠送了3次发送。</li><li>草稿–应该是还没发出去的合同</li><li>VIP功能，没体验到。</li></ol><h4 id="快速视图"><a href="#快速视图" class="headerlink" title="快速视图"></a>快速视图</h4><ol><li>需要进行的操作，应该是一些站内提醒TODO</li><li>正等待他人，应该是待别人签署的合同归类</li><li>…等等一些合同状态管理和身份认证管理收拢。</li></ol><h4 id="主页"><a href="#主页" class="headerlink" title="主页"></a>主页</h4><p><img src="/2022/03/30/Google-workSpace-Market-docsign%E6%8F%92%E4%BB%B6%E7%A0%94%E7%A9%B6/image-20220330175709694.png" alt="image-20220330175709694" loading="lazy" data-src="/2022/03/30/Google-workSpace-Market-docsign%E6%8F%92%E4%BB%B6%E7%A0%94%E7%A9%B6/image-20220330175709694.png"></p><p>主页就是，快速发起的入口，和合同的状态分类，一个提示创建签名的入口。</p><p><strong>第二个人签署的时候，可以看到第一个人签署的内容都放到了上面。</strong></p><p><img src="/2022/03/30/Google-workSpace-Market-docsign%E6%8F%92%E4%BB%B6%E7%A0%94%E7%A9%B6/image-20220330175928742.png" alt="image-20220330175928742" loading="lazy" data-src="/2022/03/30/Google-workSpace-Market-docsign%E6%8F%92%E4%BB%B6%E7%A0%94%E7%A9%B6/image-20220330175928742.png"></p><p>点击已完成，大家就应该会收到推送通知</p><p><img src="/2022/03/30/Google-workSpace-Market-docsign%E6%8F%92%E4%BB%B6%E7%A0%94%E7%A9%B6/image-20220330185029692.png" alt="image-20220330185029692" loading="lazy" data-src="/2022/03/30/Google-workSpace-Market-docsign%E6%8F%92%E4%BB%B6%E7%A0%94%E7%A9%B6/image-20220330185029692.png"></p><p>但验证发现，有一方状态始终是待另外一方签署，又是一个bug。。。。</p><p>那么，如果在上面的步骤不立即发送呢？</p><p>就会进入指定控件的页面，这里直观上感受，产品意图是<strong>提前指定一些填写和签署区域</strong>。</p><p><img src="/2022/03/30/Google-workSpace-Market-docsign%E6%8F%92%E4%BB%B6%E7%A0%94%E7%A9%B6/image-20220330184606811.png" alt="image-20220330184606811" loading="lazy" data-src="/2022/03/30/Google-workSpace-Market-docsign%E6%8F%92%E4%BB%B6%E7%A0%94%E7%A9%B6/image-20220330184606811.png"></p><p>点击发送，类似的情况，签署人也会收到邮件推送，进去看一下，可以发现，只能对上一步指定的进行签署or填写，不能额外的增加控件上来。</p><p><img src="/2022/03/30/Google-workSpace-Market-docsign%E6%8F%92%E4%BB%B6%E7%A0%94%E7%A9%B6/image-20220330184818769.png" alt="image-20220330184818769" loading="lazy" data-src="/2022/03/30/Google-workSpace-Market-docsign%E6%8F%92%E4%BB%B6%E7%A0%94%E7%A9%B6/image-20220330184818769.png"></p><p>签署完成如果检查到你是注册过了，且没登录的话，会引导你登录，如果选择不登录，会进入</p><p><img src="/2022/03/30/Google-workSpace-Market-docsign%E6%8F%92%E4%BB%B6%E7%A0%94%E7%A9%B6/image-20220330185432659.png" alt="image-20220330185432659" loading="lazy" data-src="/2022/03/30/Google-workSpace-Market-docsign%E6%8F%92%E4%BB%B6%E7%A0%94%E7%A9%B6/image-20220330185432659.png"></p><p>基本上主题的发起签署流程就体验完了。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>docsign插件做的事情很有限，基于一份doc文档，切入到docsign的官网进行合同的发起，之后的签署流程全部都在docsign里面。</p><p>docsign对比电子签的不同点：</p><ol><li>使用邮箱的方式来扭转，没有人脸核身。</li><li>没有登录态可以签署，看起来应该是一些token机制</li><li>类似与使用doc转pdf的方式发起合同，如果不提前指定填写，签署控件，那么进入签署环节，签署人可以自己拖动控件进行填写，托控件签署。</li><li>使用文件发起，可以拖入一些填写控件进来，覆盖到pdf上。这依赖于他的特性，在签署的过程中，还可以拖入填写控件，进行合成到pdf中。</li></ol>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>调研</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>升级Hexo后图片不显示的问题解决</title>
    <link href="/2022/03/30/%E5%8D%87%E7%BA%A7hexo%E5%90%8E%E5%9B%BE%E7%89%87%E4%B8%8D%E6%98%BE%E7%A4%BA%E7%9A%84%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    <url>/2022/03/30/%E5%8D%87%E7%BA%A7hexo%E5%90%8E%E5%9B%BE%E7%89%87%E4%B8%8D%E6%98%BE%E7%A4%BA%E7%9A%84%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/</url>
    
    <content type="html"><![CDATA[<p>最近手贱，升级了hexo，以为会更加好用点，但更新之后发现没有什么太大的变化，反而，hexo g &amp;&amp; hexo d 之后，发现博客图片不显示了。</p><p>研究了下，发现是使用了data-src的方式了，不在是之前的src方式，因此，我的hexo-asset-image插件需要跟着升级一下了。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs javascript">$(<span class="hljs-string">&#x27;img&#x27;</span>).<span class="hljs-title function_">each</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br><span class="hljs-keyword">if</span> ($(<span class="hljs-variable language_">this</span>).<span class="hljs-title function_">attr</span>(<span class="hljs-string">&#x27;src&#x27;</span>) || $(<span class="hljs-variable language_">this</span>).<span class="hljs-title function_">attr</span>(<span class="hljs-string">&#x27;data-src&#x27;</span>)) &#123;<span class="hljs-comment">//if the image has a src or data-src attribute</span><br><span class="hljs-comment">// For windows style path, we replace &#x27;\&#x27; to &#x27;/&#x27;.</span><br><span class="hljs-keyword">let</span> src = $(<span class="hljs-variable language_">this</span>).<span class="hljs-title function_">attr</span>(<span class="hljs-string">&#x27;src&#x27;</span>) || $(<span class="hljs-variable language_">this</span>).<span class="hljs-title function_">attr</span>(<span class="hljs-string">&#x27;data-src&#x27;</span>);<br>src.<span class="hljs-title function_">replace</span>(<span class="hljs-string">&#x27;\\&#x27;</span>, <span class="hljs-string">&#x27;/&#x27;</span>);<br><span class="hljs-keyword">if</span>(!<span class="hljs-regexp">/http[s]*.*|\/\/.*/</span>.<span class="hljs-title function_">test</span>(src) &amp;&amp;<br>   !<span class="hljs-regexp">/^\s*\//</span>.<span class="hljs-title function_">test</span>(src)) &#123;<br>  <span class="hljs-comment">// For &quot;about&quot; page, the first part of &quot;src&quot; can&#x27;t be removed.</span><br>  <span class="hljs-comment">// In addition, to support multi-level local directory.</span><br>  <span class="hljs-keyword">let</span> imageArr = src.<span class="hljs-title function_">split</span>(<span class="hljs-string">&#x27;/&#x27;</span>)<br>  <span class="hljs-keyword">if</span>(imageArr.<span class="hljs-property">length</span>&gt;<span class="hljs-number">1</span>)&#123;<br>  src = imageArr[<span class="hljs-number">1</span>]<br>  &#125;<br>  $(<span class="hljs-variable language_">this</span>).<span class="hljs-title function_">attr</span>(<span class="hljs-string">&#x27;src&#x27;</span>, path + src);<br>  $(<span class="hljs-variable language_">this</span>).<span class="hljs-title function_">attr</span>(<span class="hljs-string">&#x27;data-src&#x27;</span>, path + src);<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-property">info</span>&amp;&amp;<span class="hljs-variable language_">console</span>.<span class="hljs-title function_">info</span>(<span class="hljs-string">&quot;update link as:--&gt;&quot;</span>+ path + src);<br>&#125;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-property">info</span>&amp;&amp;<span class="hljs-variable language_">console</span>.<span class="hljs-title function_">info</span>(<span class="hljs-string">&quot;no src attr, skipped...&quot;</span>);<br><span class="hljs-variable language_">console</span>.<span class="hljs-property">info</span>&amp;&amp;<span class="hljs-variable language_">console</span>.<span class="hljs-title function_">info</span>($(<span class="hljs-variable language_">this</span>));<br>&#125;<br> &#125;);<br></code></pre></td></tr></table></figure><p>如果不想自己折腾，只需要使用我的这个插件即可 <a href="https://github.com/bravekingzhang/hexo-asset-image">https://github.com/bravekingzhang/hexo-asset-image</a></p><p>package.json中添加依赖项</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-attr">&quot;dependencies&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;dtrace-provider&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^0.8.8&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;hexo&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;^6.3.0&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;hexo-asset-image&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;git+https://github.com/bravekingzhang/hexo-asset-image.git&quot;</span><span class="hljs-punctuation">,</span><br>  ...<br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><ol><li>需要 hexo clean 一下 ，然后再 hexo g &amp; hexo d</li><li>需要check以下效果可以使用 hexo s 本地看看。</li><li>如果使用typora 建议插入本地图片的方式改为</li></ol><p><img src="/2022/03/30/%E5%8D%87%E7%BA%A7hexo%E5%90%8E%E5%9B%BE%E7%89%87%E4%B8%8D%E6%98%BE%E7%A4%BA%E7%9A%84%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/image-20221127191941982.png" alt="image-20221127191941982" loading="lazy" data-src="/2022/03/30/%E5%8D%87%E7%BA%A7hexo%E5%90%8E%E5%9B%BE%E7%89%87%E4%B8%8D%E6%98%BE%E7%A4%BA%E7%9A%84%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/image-20221127191941982.png"></p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>小程序网络监控面板</title>
    <link href="/2022/03/30/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%BD%91%E7%BB%9C%E7%9B%91%E6%8E%A7%E9%9D%A2%E6%9D%BF/"/>
    <url>/2022/03/30/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%BD%91%E7%BB%9C%E7%9B%91%E6%8E%A7%E9%9D%A2%E6%9D%BF/</url>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/weimobGroup/WeConsole">https://github.com/weimobGroup/WeConsole</a></p><!-- flag of hidden posts -->]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>小程序</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>腾讯文档插件研发</title>
    <link href="/2022/03/29/%E8%85%BE%E8%AE%AF%E6%96%87%E6%A1%A3%E6%8F%92%E4%BB%B6%E7%A0%94%E5%8F%91/"/>
    <url>/2022/03/29/%E8%85%BE%E8%AE%AF%E6%96%87%E6%A1%A3%E6%8F%92%E4%BB%B6%E7%A0%94%E5%8F%91/</url>
    
    <content type="html"><![CDATA[<h4 id="注册卡开发者账号"><a href="#注册卡开发者账号" class="headerlink" title="注册卡开发者账号"></a>注册卡开发者账号</h4><p><a href="https://docs.qq.com/form/page/DYklqc0hadEdmeElR?_w_tencentdocx_form=1&coord=&_w_tencentdocx_form=1#/fill-detail">到这个文档上面填写一个内部申请流程</a>，填写@tencent.com的邮箱，完毕之后，大概一小时会有lulu来审批。</p><p>审批通过之后，去<a href="https://docs.qq.com/open/developers/#/login">https://docs.qq.com/open/developers/#/login</a> 完成注册。</p><p>目标是会到这一步，然后等待后台审核，一般都是秒通过。</p><p><img src="/2022/03/29/%E8%85%BE%E8%AE%AF%E6%96%87%E6%A1%A3%E6%8F%92%E4%BB%B6%E7%A0%94%E5%8F%91/image-20220330093950127.png" alt="image-20220330093950127" loading="lazy" data-src="/2022/03/29/%E8%85%BE%E8%AE%AF%E6%96%87%E6%A1%A3%E6%8F%92%E4%BB%B6%E7%A0%94%E5%8F%91/image-20220330093950127.png"></p><p>通过与否可以进入管理后台查看</p><p><img src="/2022/03/29/%E8%85%BE%E8%AE%AF%E6%96%87%E6%A1%A3%E6%8F%92%E4%BB%B6%E7%A0%94%E5%8F%91/image-20220330094059637.png" alt="image-20220330094059637" loading="lazy" data-src="/2022/03/29/%E8%85%BE%E8%AE%AF%E6%96%87%E6%A1%A3%E6%8F%92%E4%BB%B6%E7%A0%94%E5%8F%91/image-20220330094059637.png"></p><h4 id="申请addonId"><a href="#申请addonId" class="headerlink" title="申请addonId"></a>申请addonId</h4><p>没有这个addonId，后面的插件没法跑起来，有点类似于小程序的appid，我理解，这个是需要把带啊推送到一个他们提供的沙箱中。</p><p>找@xkyhuang，我理解开通了上面的开发者，就可以找文档小伙伴索要了。</p><h4 id="准备开发环境"><a href="#准备开发环境" class="headerlink" title="准备开发环境"></a>准备开发环境</h4><p>参考<a href="https://docs.qq.com/doc/DTnB5b2VJeUNTY1FG">这个文档</a>开始搞起，安装开发工具。</p><p>homebrew的方式安装失败的话，可以参考下面的方式：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">First check OS.</span><br>OS=&quot;$(uname)&quot;<br>if [[ &quot;$&#123;OS&#125;&quot; == &quot;Linux&quot; ]]<br>then<br>  ADDON_TOOLS_ON_OS=&quot;linux&quot;<br>elif [[ &quot;$&#123;OS&#125;&quot; == &quot;Darwin&quot; ]]<br>then<br>  ADDON_TOOLS_ON_OS=&quot;macos&quot;<br>else<br>  abort &quot;Homebrew is only supported on macOS and Linux.&quot;<br>fi<br><br>default_name=&quot;docs-addon-tools-$ADDON_TOOLS_ON_OS-v0.5.323.zip&quot;<br>if [[ &quot;$ADDON_TOOLS_VERSION&quot; ]]; then<br>  name=&quot;docs-addon-tools-$ADDON_TOOLS_ON_OS-$ADDON_TOOLS_VERSION.zip&quot;<br>else<br>  name=$default_name<br>fi<br><br>curl https://cdn.addon.tencentsuite.com/addon-tools/beta/$name -o $name<br>unzip $name<br>rm $name<br>chmod 0555 docs-addon-tools<br>mv ./docs-addon-tools /usr/local/bin<br></code></pre></td></tr></table></figure><p>保存这个脚本为<code>smart-tools-latest.sh</code>，对文件  <code>chmod a+x smart-tools-latest.sh</code>,然后<code>./smart-tools-latest.sh</code>执行脚本，就可以安装了。</p><p><img src="/2022/03/29/%E8%85%BE%E8%AE%AF%E6%96%87%E6%A1%A3%E6%8F%92%E4%BB%B6%E7%A0%94%E5%8F%91/image-20220330095757636.png" alt="image-20220330095757636" loading="lazy" data-src="/2022/03/29/%E8%85%BE%E8%AE%AF%E6%96%87%E6%A1%A3%E6%8F%92%E4%BB%B6%E7%A0%94%E5%8F%91/image-20220330095757636.png"></p><p>验证一下是否安装成功</p><p><img src="/2022/03/29/%E8%85%BE%E8%AE%AF%E6%96%87%E6%A1%A3%E6%8F%92%E4%BB%B6%E7%A0%94%E5%8F%91/image-20220330100028938.png" alt="image-20220330100028938" loading="lazy" data-src="/2022/03/29/%E8%85%BE%E8%AE%AF%E6%96%87%E6%A1%A3%E6%8F%92%E4%BB%B6%E7%A0%94%E5%8F%91/image-20220330100028938.png"></p><p>至此，环境已经安装完毕。</p><h4 id="创建一个demo"><a href="#创建一个demo" class="headerlink" title="创建一个demo"></a>创建一个demo</h4><p>直接使用命令创建一个项目</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docs-addon-tools create demo<br></code></pre></td></tr></table></figure><p>运行项目</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docs-addon-tools dev -p 3000 -d ./demo<br></code></pre></td></tr></table></figure><p>注意，没有addonId会报错，所以一定要在前面的步骤申请下来addonId。申请之后跑上面的例子，会进入这个页面。</p><p>但是你会发现，插件这里没有我们的插件。</p><p><img src="/2022/03/29/%E8%85%BE%E8%AE%AF%E6%96%87%E6%A1%A3%E6%8F%92%E4%BB%B6%E7%A0%94%E5%8F%91/wecom-temp-bbaf1140d5df52b10025b43f178203d7.png" alt="wecom-temp-bbaf1140d5df52b10025b43f178203d7" loading="lazy" data-src="/2022/03/29/%E8%85%BE%E8%AE%AF%E6%96%87%E6%A1%A3%E6%8F%92%E4%BB%B6%E7%A0%94%E5%8F%91/wecom-temp-bbaf1140d5df52b10025b43f178203d7.png"></p><p>那是因为还需要信任一下根证书，进入 并双击下，然后到下面这个钥匙串中管去信任根证书即可。<code>/Users/&#123;userName&#125;/.AddonToolsAppData/SSL_cert/root.crt</code></p><p><img src="/2022/03/29/%E8%85%BE%E8%AE%AF%E6%96%87%E6%A1%A3%E6%8F%92%E4%BB%B6%E7%A0%94%E5%8F%91/image-20220330115856327.png" alt="image-20220330115856327" loading="lazy" data-src="/2022/03/29/%E8%85%BE%E8%AE%AF%E6%96%87%E6%A1%A3%E6%8F%92%E4%BB%B6%E7%A0%94%E5%8F%91/image-20220330115856327.png"></p><p>然后，就会发现</p><p><img src="/2022/03/29/%E8%85%BE%E8%AE%AF%E6%96%87%E6%A1%A3%E6%8F%92%E4%BB%B6%E7%A0%94%E5%8F%91/image-20220330120305553.png" alt="image-20220330120305553" loading="lazy" data-src="/2022/03/29/%E8%85%BE%E8%AE%AF%E6%96%87%E6%A1%A3%E6%8F%92%E4%BB%B6%E7%A0%94%E5%8F%91/image-20220330120305553.png"></p><p>插件就出来了。</p><p>如果还没出来的话，可能是由于<a href="https://zh.wikipedia.org/wiki/HTTP%E4%B8%A5%E6%A0%BC%E4%BC%A0%E8%BE%93%E5%AE%89%E5%85%A8"> HSTS</a> 的限制，需要开发者将本地浏览器的allow-insecure-localhost开启，随后即可在任意文档开始插件的调试。不同浏览器开启allow-insecure-localhost的方式如下：</p><p>chorme：打开<code>chrome://flags/#allow-insecure-localhost</code>  ，将选项从diabaled改为enable，并重启浏览器应用。</p><p><img src="/2022/03/29/%E8%85%BE%E8%AE%AF%E6%96%87%E6%A1%A3%E6%8F%92%E4%BB%B6%E7%A0%94%E5%8F%91/image-20220330120819112.png" alt="image-20220330120819112" loading="lazy" data-src="/2022/03/29/%E8%85%BE%E8%AE%AF%E6%96%87%E6%A1%A3%E6%8F%92%E4%BB%B6%E7%A0%94%E5%8F%91/image-20220330120819112.png"></p><p>插件可以做一些这样的操作。</p><!-- flag of hidden posts -->]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>前端</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>小程序点击防抖哪家强</title>
    <link href="/2022/03/16/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%82%B9%E5%87%BB%E9%98%B2%E6%8A%96%E5%93%AA%E5%AE%B6%E5%BC%BA/"/>
    <url>/2022/03/16/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%82%B9%E5%87%BB%E9%98%B2%E6%8A%96%E5%93%AA%E5%AE%B6%E5%BC%BA/</url>
    
    <content type="html"><![CDATA[<h4 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h4><p>从<strong>腾讯电子签</strong>在现网问题反馈中，我们发现中发现有部分用户吐槽一些按钮不小心快速多次点击出现出现多个类似的页面，处理完业务之后回退需要退两次。虽说对于业务流程来说没有影响，但是确实影响到用户体验，所以如何优雅且<strong>强制性</strong>规范的在小程序上做防重复点击是本文研究的重点。</p><h4 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h4><p>腾讯电子签小程序基于 uni-app 研发，举个栗子，通常一处存在点击的处理事件长这个样子，见下面的@click。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>  &lt;PdfItem v-for=&quot;(img, idx) in images&quot; @click=&quot;doSomeThing(idx)&quot; /&gt;<br>&lt;/template&gt;<br>&lt;script&gt;<br><br>export default &#123;<br><br>  data() &#123;<br>    return &#123;<br>      ...<br>    &#125;;<br>  &#125;,<br>  methods: &#123;<br>    doSomeThing(idx) &#123;<br>      //do some thing<br>    &#125;,<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>那么，如何做好并消灭防重复点击就是本文要研究的点。拿上面的例子来说，大概有几个方式</p><ol><li><p>在 doSomeThing 中加一个变量，当做门卫，如果方法没处理完，再次进入直接返回，恩，每个方法都需要增加一段逻辑，去设置变量，比较繁琐。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-title function_">doSomeThing</span>(<span class="hljs-params"></span>)&#123;<br>  <span class="hljs-keyword">if</span>(isDoing)&#123;<br>    <span class="hljs-keyword">return</span><br>  &#125;<br>  isDoing = <span class="hljs-literal">true</span><br>  ....<br>  isDoing = <span class="hljs-literal">false</span><br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>给 doSomeThing 方法增加一个 debounce 包裹一下，恩，比第一种略好，更加简洁点。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-attr">doSomeThing</span>:_.<span class="hljs-title function_">debounce</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br>  ....<br>&#125;)<br></code></pre></td></tr></table></figure></li><li><p>hook 的方式 hook 住 click 方法，然后来做处理逻辑，无奈小程序也没有类似 web 的这种 addEventListener，遂放弃。</p></li></ol><p>找到一种好的解决方式不是难问题，难问题是：</p><ol><li>我们的业务代码中，已经出现了很多出没有增加防抖逻辑包裹的代码，难道线上遇到一个反馈，解决一个吗？</li><li>如何限制后续编码过程中，大家写 onclick 代码的时候，强制加上 onclick。</li></ol><p>很显然，对于代码规范检测，我们非常容易想到使用 eslint，但是现有的 eslint 有这么规则吗？自然是没有的，所以，我们遇到的问题在理论上转换为了：<strong>如何开发一款插件有效的检测 onClick 有没有使用防抖</strong>。</p><h4 id="eslint-插件开搞"><a href="#eslint-插件开搞" class="headerlink" title="eslint 插件开搞"></a>eslint 插件开搞</h4><h5 id="基本开发准备"><a href="#基本开发准备" class="headerlink" title="基本开发准备"></a>基本开发准备</h5><p>插件开发的整体流程我就不在本文的介绍当中，本文只关心如何去实现检测的逻辑及基本的程序入口和调试技巧介绍。首先，我们要检测的文件是 .vue 文件，因此，我们需要在 eslint 大环境下解析 vue 语法，那么使用什么方式解析 vue 语法，我们需要自己开发吗，显然不是，vue 肯定是有的，比如<a href="https://github.com/vuejs/vue-eslint-parser#readme">vue-eslint-parser</a>,想要更加直观的看解析效果，可以到<a href="https://astexplorer.net/">astexplorer</a>贴上一段 vue 代码看看。</p><p><img src="/2022/03/16/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%82%B9%E5%87%BB%E9%98%B2%E6%8A%96%E5%93%AA%E5%AE%B6%E5%BC%BA/image-20220316185014558.png" alt="image-20220316185014558" loading="lazy" data-src="/2022/03/16/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%82%B9%E5%87%BB%E9%98%B2%E6%8A%96%E5%93%AA%E5%AE%B6%E5%BC%BA/image-20220316185014558.png"></p><p>那么，我们就可以插件的开发框架下，模拟 vue 文件被这个插件解析，然后生成一个语法树抛给 eslint 插件入口，参见下面的代码块，解析好的语法数会已 node 参数传入到 Program 函数。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@fileoverview</span> onClick should wrap with debounce in page</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> <span class="hljs-variable">hoollyzhang</span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">&#x27;use strict&#x27;</span>;<br><br><span class="hljs-comment">//------------------------------------------------------------------------------</span><br><span class="hljs-comment">// Rule Definition</span><br><span class="hljs-comment">//------------------------------------------------------------------------------</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;电子签防抖插件已加载&#x27;</span>)<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@type</span> &#123;<span class="hljs-type">import(&#x27;eslint&#x27;).Rule.RuleModule</span>&#125;</span><br><span class="hljs-comment"> */</span><br><span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span> = &#123;<br>  <span class="hljs-attr">meta</span>: &#123;<br>    <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;problem&#x27;</span>, <span class="hljs-comment">// `problem`, `suggestion`, or `layout`</span><br>    <span class="hljs-attr">docs</span>: &#123;<br>      <span class="hljs-attr">description</span>: <span class="hljs-string">&#x27;onClick should wrap with debounce in page&#x27;</span>,<br>      <span class="hljs-attr">category</span>: <span class="hljs-string">&#x27;Possible Problems&#x27;</span>,<br>      <span class="hljs-attr">recommended</span>: <span class="hljs-literal">true</span>,<br>      <span class="hljs-attr">url</span>: <span class="hljs-literal">null</span>, <span class="hljs-comment">// URL to the documentation page for this rule</span><br>    &#125;,<br>    <span class="hljs-attr">schema</span>: [], <span class="hljs-comment">// Add a schema if the rule has options</span><br>    <span class="hljs-attr">messages</span>: &#123;<br>      <span class="hljs-attr">missingAddDebounceClick</span>: <span class="hljs-string">`onClick method should wrap with debounce, use &quot;import &#123; debounce &#125; from &#x27;@/utils/custom-lodash&#x27;&quot; and wrap with it in the page.`</span>,<br>      <span class="hljs-attr">shouldNotUseEmitThisWay</span>: <span class="hljs-string">`It is suggested to use the debounce method of wrapping`</span><br>    &#125;<br>  &#125;,<br><br>  <span class="hljs-title function_">create</span>(<span class="hljs-params">context</span>) &#123;<br>    <span class="hljs-comment">// variables should be defined here</span><br><br>    <span class="hljs-comment">//----------------------------------------------------------------------</span><br>    <span class="hljs-comment">// Helpers</span><br>    <span class="hljs-comment">//----------------------------------------------------------------------</span><br><br>    <span class="hljs-comment">//----------------------------------------------------------------------</span><br>    <span class="hljs-comment">// Public</span><br>    <span class="hljs-comment">//----------------------------------------------------------------------</span><br><br>    <span class="hljs-keyword">return</span> &#123;<br>      <span class="hljs-comment">// visitor functions for different types of nodes</span><br>      <span class="hljs-title class_">Program</span>(node) &#123;<br>        <span class="hljs-keyword">const</span> fileName = context.<span class="hljs-title function_">getFilename</span>();<br>        <span class="hljs-keyword">if</span>(!fileName.<span class="hljs-title function_">endsWith</span>(<span class="hljs-string">`vue`</span>))&#123;<br>          <span class="hljs-keyword">return</span><br>        &#125;<br>        <span class="hljs-comment">//...</span><br>        <span class="hljs-keyword">const</span> &#123; templateBody,body &#125; = node<br><br>        [...methods].<span class="hljs-title function_">map</span>(<span class="hljs-function"><span class="hljs-params">item</span>=&gt;</span><span class="hljs-title function_">reportError</span>(item))<br>      &#125;,<br>    &#125;;<br>  &#125;,<br>&#125;;<br><br></code></pre></td></tr></table></figure><p>插件开发框架为了便于我们开发调试插件，提供了这样一套模板方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@fileoverview</span> Import subPackage config in page</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> <span class="hljs-variable">hoollyzhang</span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">&quot;use strict&quot;</span>;<br><br><span class="hljs-comment">//------------------------------------------------------------------------------</span><br><span class="hljs-comment">// Requirements</span><br><span class="hljs-comment">//------------------------------------------------------------------------------</span><br><br><span class="hljs-keyword">const</span> rule = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;../../../lib/rules/check-on-click-debounce&quot;</span>);<br><span class="hljs-keyword">const</span> <span class="hljs-variable constant_">VUE_ESLINT_PARSER</span> = path.<span class="hljs-title function_">join</span>(<br>  __dirname,<br>  <span class="hljs-variable constant_">NODE_MODULES</span>,<br>  <span class="hljs-string">&quot;vue-eslint-parser&quot;</span><br>);<br><br><span class="hljs-comment">//------------------------------------------------------------------------------</span><br><span class="hljs-comment">// Tests</span><br><span class="hljs-comment">//------------------------------------------------------------------------------</span><br><br><span class="hljs-keyword">const</span> ruleTester = <span class="hljs-keyword">new</span> <span class="hljs-title class_">RuleTester</span>();<br>ruleTester.<span class="hljs-title function_">run</span>(<span class="hljs-string">&quot;check-on-click-debounce&quot;</span>, rule, &#123;<br>  <span class="hljs-attr">valid</span>: [<span class="hljs-string">&quot;pages/vue-onclick-debounce/onclick-debounce-test-ok.vue&quot;</span>].<span class="hljs-title function_">map</span>(<br>    <span class="hljs-function">(<span class="hljs-params">filename</span>) =&gt;</span> (&#123;<br>      <span class="hljs-attr">code</span>: fs.<span class="hljs-title function_">readFileSync</span>(path.<span class="hljs-title function_">join</span>(<span class="hljs-variable constant_">TEST_INPUTS_DIR</span>, filename), <span class="hljs-string">&quot;utf8&quot;</span>),<br>      <span class="hljs-attr">filename</span>: path.<span class="hljs-title function_">join</span>(<span class="hljs-variable constant_">TEST_INPUTS_DIR</span>, filename),<br>      <span class="hljs-attr">parser</span>: <span class="hljs-variable constant_">VUE_ESLINT_PARSER</span>,<br>      parserOptions,<br>    &#125;)<br>  ),<br><br>  <span class="hljs-attr">invalid</span>: [<span class="hljs-string">&quot;pages/vue-onclick-debounce/onclick-debounce-test-not-ok.vue&quot;</span>].<span class="hljs-title function_">map</span>(<br>    <span class="hljs-function">(<span class="hljs-params">filename</span>) =&gt;</span> (&#123;<br>      <span class="hljs-attr">code</span>: fs.<span class="hljs-title function_">readFileSync</span>(path.<span class="hljs-title function_">join</span>(<span class="hljs-variable constant_">TEST_INPUTS_DIR</span>, filename), <span class="hljs-string">&quot;utf8&quot;</span>),<br>      <span class="hljs-attr">filename</span>: path.<span class="hljs-title function_">join</span>(<span class="hljs-variable constant_">TEST_INPUTS_DIR</span>, filename),<br>      <span class="hljs-attr">parser</span>: <span class="hljs-variable constant_">VUE_ESLINT_PARSER</span>,<br>      parserOptions,<br>      <span class="hljs-attr">errors</span>: [&#123; <span class="hljs-attr">messageId</span>: <span class="hljs-string">&quot;missingAddDebounceClick&quot;</span> &#125;],<br>    &#125;)<br>  ),<br>&#125;);<br></code></pre></td></tr></table></figure><p>所以，我们可以使用这个验证我们研发的 eslint 插件是否符合预期，而且调试起来也比较方便，在 vscode 上开发的话，配置一个启动项即可，比如我配置了一个 launch.json;</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-comment">// 使用 IntelliSense 了解相关属性。</span><br>  <span class="hljs-comment">// 悬停以查看现有属性的描述。</span><br>  <span class="hljs-comment">// 欲了解更多信息，请访问: https://go.microsoft.com/fwlink/?linkid=830387</span><br>  <span class="hljs-attr">&quot;version&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;0.2.0&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;configurations&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>    <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;pwa-node&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;request&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;launch&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Launch onClick test&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;skipFiles&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;&lt;node_internals&gt;/**&quot;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;program&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;$&#123;workspaceFolder&#125;/packages/eslint-plugin-tsign-weapp/tests/lib/rules/check-on-click-debounce.js&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">]</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>这样一来，我们就可以展开调试了。</p><p><img src="/2022/03/16/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%82%B9%E5%87%BB%E9%98%B2%E6%8A%96%E5%93%AA%E5%AE%B6%E5%BC%BA/image-20220316190601141.png" alt="image-20220316190601141" loading="lazy" data-src="/2022/03/16/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%82%B9%E5%87%BB%E9%98%B2%E6%8A%96%E5%93%AA%E5%AE%B6%E5%BC%BA/image-20220316190601141.png"></p><h5 id="检测原理介绍"><a href="#检测原理介绍" class="headerlink" title="检测原理介绍"></a>检测原理介绍</h5><p>1、首先我们需要拿到所有&lt;template 中被 @click 引用到的方法，这个可以通过递归遍历 templateBody 这个树解决。</p><p><img src="/2022/03/16/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%82%B9%E5%87%BB%E9%98%B2%E6%8A%96%E5%93%AA%E5%AE%B6%E5%BC%BA/image-20220316191301667.png" alt="image-20220316191301667" loading="lazy" data-src="/2022/03/16/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%82%B9%E5%87%BB%E9%98%B2%E6%8A%96%E5%93%AA%E5%AE%B6%E5%BC%BA/image-20220316191301667.png"></p><p>如上图，我们只需要找到这个 argument name 是 click 的这个结点中 value 里面的 expression 的 name，就是我们要检测的方法</p><p>2、基于上面找到的方法，我们在去 methods 的结点中去找到对应的方法，看看这个方法的 body 有没有被 debounce 包裹即可，如果没有哦就告警处理。</p><h5 id="实际效果"><a href="#实际效果" class="headerlink" title="实际效果"></a>实际效果</h5><p><img src="/2022/03/16/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%82%B9%E5%87%BB%E9%98%B2%E6%8A%96%E5%93%AA%E5%AE%B6%E5%BC%BA/image-20220316191949544.png" alt="image-20220316191949544" loading="lazy" data-src="/2022/03/16/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%82%B9%E5%87%BB%E9%98%B2%E6%8A%96%E5%93%AA%E5%AE%B6%E5%BC%BA/image-20220316191949544.png"></p><!-- flag of hidden posts -->]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>小程序</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Uni转换的async Await</title>
    <link href="/2022/03/11/uni%E8%BD%AC%E6%8D%A2%E7%9A%84async-await/"/>
    <url>/2022/03/11/uni%E8%BD%AC%E6%8D%A2%E7%9A%84async-await/</url>
    
    <content type="html"><![CDATA[<p>vue3的方式在App生命周期中对 onLaunch和onShow函数使用 async来修饰，转换出的源码是：</p><p><img src="/2022/03/11/uni%E8%BD%AC%E6%8D%A2%E7%9A%84async-await/%E4%BC%81%E4%B8%9A%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_62f4efcd-0658-4c53-b1e2-ab8be6b02aa7.png" alt="企业微信截图_62f4efcd-0658-4c53-b1e2-ab8be6b02aa7" loading="lazy" data-src="/2022/03/11/uni%E8%BD%AC%E6%8D%A2%E7%9A%84async-await/%E4%BC%81%E4%B8%9A%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_62f4efcd-0658-4c53-b1e2-ab8be6b02aa7.png"></p><p>vue2的方式使用 async修饰 onLaunch转换出的函数是</p><p><img src="/2022/03/11/uni%E8%BD%AC%E6%8D%A2%E7%9A%84async-await/%E4%BC%81%E4%B8%9A%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_b5cf3b1b-a9c6-4354-b085-fb9c816f5ac2.png" alt="企业微信截图_b5cf3b1b-a9c6-4354-b085-fb9c816f5ac2" loading="lazy" data-src="/2022/03/11/uni%E8%BD%AC%E6%8D%A2%E7%9A%84async-await/%E4%BC%81%E4%B8%9A%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_b5cf3b1b-a9c6-4354-b085-fb9c816f5ac2.png"></p><p>而如果在vue2中不对其是用asnyc修饰的话，其转换出的函数是</p><p><img src="/2022/03/11/uni%E8%BD%AC%E6%8D%A2%E7%9A%84async-await/%E4%BC%81%E4%B8%9A%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_be9630b9-3dc6-4cc0-bec2-70a466f01d3a.png" alt="企业微信截图_be9630b9-3dc6-4cc0-bec2-70a466f01d3a" loading="lazy" data-src="/2022/03/11/uni%E8%BD%AC%E6%8D%A2%E7%9A%84async-await/%E4%BC%81%E4%B8%9A%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_be9630b9-3dc6-4cc0-bec2-70a466f01d3a.png"></p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>uniapp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>小程序网络接口请求优化</title>
    <link href="/2022/03/11/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%BD%91%E7%BB%9C%E6%8E%A5%E5%8F%A3%E8%AF%B7%E6%B1%82%E4%BC%98%E5%8C%96/"/>
    <url>/2022/03/11/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%BD%91%E7%BB%9C%E6%8E%A5%E5%8F%A3%E8%AF%B7%E6%B1%82%E4%BC%98%E5%8C%96/</url>
    
    <content type="html"><![CDATA[<h4 id="http2-0"><a href="#http2-0" class="headerlink" title="http2.0"></a>http2.0</h4><p>但是有请求还是在建立连接，不知道为啥</p><p><img src="/2022/03/11/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%BD%91%E7%BB%9C%E6%8E%A5%E5%8F%A3%E8%AF%B7%E6%B1%82%E4%BC%98%E5%8C%96/image-20220311134455489.png" alt="image-20220311134455489" loading="lazy" data-src="/2022/03/11/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%BD%91%E7%BB%9C%E6%8E%A5%E5%8F%A3%E8%AF%B7%E6%B1%82%E4%BC%98%E5%8C%96/image-20220311134455489.png"></p><p>问了一下google，发现是小程序默认没有开启http2。</p><p><img src="/2022/03/11/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%BD%91%E7%BB%9C%E6%8E%A5%E5%8F%A3%E8%AF%B7%E6%B1%82%E4%BC%98%E5%8C%96/image-20220311171928708.png" alt="image-20220311171928708" loading="lazy" data-src="/2022/03/11/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%BD%91%E7%BB%9C%E6%8E%A5%E5%8F%A3%E8%AF%B7%E6%B1%82%E4%BC%98%E5%8C%96/image-20220311171928708.png"></p><p>然后搜索了一下社区，发现需要手动开启</p><p><img src="/2022/03/11/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%BD%91%E7%BB%9C%E6%8E%A5%E5%8F%A3%E8%AF%B7%E6%B1%82%E4%BC%98%E5%8C%96/wecom-temp-f56b392e21e5b839dd0921c0f866eb98.png" alt="wecom-temp-f56b392e21e5b839dd0921c0f866eb98" loading="lazy" data-src="/2022/03/11/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%BD%91%E7%BB%9C%E6%8E%A5%E5%8F%A3%E8%AF%B7%E6%B1%82%E4%BC%98%E5%8C%96/wecom-temp-f56b392e21e5b839dd0921c0f866eb98.png"></p><p>所以，把这个选型开启之后，看一看效果</p><p><img src="/2022/03/11/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%BD%91%E7%BB%9C%E6%8E%A5%E5%8F%A3%E8%AF%B7%E6%B1%82%E4%BC%98%E5%8C%96/wecom-temp-76da1a8e6c6b61d94c9ecbeb9f52fe38.png" alt="wecom-temp-76da1a8e6c6b61d94c9ecbeb9f52fe38" loading="lazy" data-src="/2022/03/11/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%BD%91%E7%BB%9C%E6%8E%A5%E5%8F%A3%E8%AF%B7%E6%B1%82%E4%BC%98%E5%8C%96/wecom-temp-76da1a8e6c6b61d94c9ecbeb9f52fe38.png"></p><p>首屏除第一个请求之后，其他请求都是没超过400ms的，而且可以看到ConnectionID确实是复用的。</p><p>另外发现最后一个请求没的状态码没给出来，但是看下详情</p><p><img src="/2022/03/11/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%BD%91%E7%BB%9C%E6%8E%A5%E5%8F%A3%E8%AF%B7%E6%B1%82%E4%BC%98%E5%8C%96/wecom-temp-819dfd09b6312312a893228b4581c754.png" alt="wecom-temp-819dfd09b6312312a893228b4581c754" loading="lazy" data-src="/2022/03/11/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%BD%91%E7%BB%9C%E6%8E%A5%E5%8F%A3%E8%AF%B7%E6%B1%82%E4%BC%98%E5%8C%96/wecom-temp-819dfd09b6312312a893228b4581c754.png"></p><p>是 <code>200 OK</code>，对比一下正常展示的请求</p><p><img src="/2022/03/11/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%BD%91%E7%BB%9C%E6%8E%A5%E5%8F%A3%E8%AF%B7%E6%B1%82%E4%BC%98%E5%8C%96/wecom-temp-411c761610931475d201993b36ce8612.png" alt="wecom-temp-411c761610931475d201993b36ce8612" loading="lazy" data-src="/2022/03/11/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%BD%91%E7%BB%9C%E6%8E%A5%E5%8F%A3%E8%AF%B7%E6%B1%82%E4%BC%98%E5%8C%96/wecom-temp-411c761610931475d201993b36ce8612.png"></p><p>发现有点不大一样，正常的请求状态码这里展示 <code>200</code>，而且Response Headers中有明确的status这个字段。之类怀疑是小程序的开发者工具实现有点粗糙了，兼容性不好。</p><h4 id="列表页一个tab下拉出现2个请"><a href="#列表页一个tab下拉出现2个请" class="headerlink" title="列表页一个tab下拉出现2个请"></a>列表页一个tab下拉出现2个请</h4><p>DescribeBatchSignFlowList</p><p>DescribeFlows</p><h4 id="很多地方都会发生的请求"><a href="#很多地方都会发生的请求" class="headerlink" title="很多地方都会发生的请求"></a>很多地方都会发生的请求</h4><p>CheckUserAgreementVersion</p><!-- flag of hidden posts -->]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>小程序</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Uni如何桥接小程序的</title>
    <link href="/2022/03/10/uni%E5%A6%82%E4%BD%95%E6%A1%A5%E6%8E%A5%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%9A%84/"/>
    <url>/2022/03/10/uni%E5%A6%82%E4%BD%95%E6%A1%A5%E6%8E%A5%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%9A%84/</url>
    
    <content type="html"><![CDATA[<p>uni编译后的代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> getEmitter = (<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-keyword">let</span> <span class="hljs-title class_">Emitter</span>;<br>  <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">getUniEmitter</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">if</span> (!<span class="hljs-title class_">Emitter</span>) &#123;<br>      <span class="hljs-title class_">Emitter</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title class_">Emitter</span>;<br>  &#125;;<br>&#125;)();<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">apply</span>(<span class="hljs-params">ctx, method, args</span>) &#123;<br>  <span class="hljs-keyword">return</span> ctx[method].<span class="hljs-title function_">apply</span>(ctx, args);<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">$on</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-title function_">apply</span>(<span class="hljs-title function_">getEmitter</span>(), <span class="hljs-string">&quot;$on&quot;</span>, [...<span class="hljs-variable language_">arguments</span>]);<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">$off</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-title function_">apply</span>(<span class="hljs-title function_">getEmitter</span>(), <span class="hljs-string">&quot;$off&quot;</span>, [...<span class="hljs-variable language_">arguments</span>]);<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">$once</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-title function_">apply</span>(<span class="hljs-title function_">getEmitter</span>(), <span class="hljs-string">&quot;$once&quot;</span>, [...<span class="hljs-variable language_">arguments</span>]);<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">$emit</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-title function_">apply</span>(<span class="hljs-title function_">getEmitter</span>(), <span class="hljs-string">&quot;$emit&quot;</span>, [...<span class="hljs-variable language_">arguments</span>]);<br>&#125;<br></code></pre></td></tr></table></figure><h5 id="uni连接vue和小程序的桥梁"><a href="#uni连接vue和小程序的桥梁" class="headerlink" title="uni连接vue和小程序的桥梁"></a>uni连接vue和小程序的桥梁</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">initProperties</span>(<span class="hljs-params">props, isBehavior = <span class="hljs-literal">false</span>, file = <span class="hljs-string">&quot;&quot;</span></span>) &#123;<br>  <span class="hljs-keyword">const</span> properties = &#123;&#125;;<br>  <span class="hljs-keyword">if</span> (!isBehavior) &#123;<br>    properties.<span class="hljs-property">vueId</span> = &#123;<br>      <span class="hljs-attr">type</span>: <span class="hljs-title class_">String</span>,<br>      <span class="hljs-attr">value</span>: <span class="hljs-string">&quot;&quot;</span>,<br>    &#125;;<br>    <span class="hljs-comment">// 用于字节跳动小程序模拟抽象节点</span><br>    properties.<span class="hljs-property">generic</span> = &#123;<br>      <span class="hljs-attr">type</span>: <span class="hljs-title class_">Object</span>,<br>      <span class="hljs-attr">value</span>: <span class="hljs-literal">null</span>,<br>    &#125;;<br>    properties.<span class="hljs-property">vueSlots</span> = &#123;<br>      <span class="hljs-comment">// 小程序不能直接定义 $slots 的 props，所以通过 vueSlots 转换到 $slots</span><br>      <span class="hljs-attr">type</span>: <span class="hljs-literal">null</span>,<br>      <span class="hljs-attr">value</span>: [],<br>      <span class="hljs-title function_">observer</span>(<span class="hljs-params">newVal, oldVal</span>) &#123;<br>        <span class="hljs-keyword">const</span> $slots = <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">create</span>(<span class="hljs-literal">null</span>);<br>        newVal.<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">slotName</span>) =&gt;</span> &#123;<br>          $slots[slotName] = <span class="hljs-literal">true</span>;<br>        &#125;);<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">setData</span>(&#123;<span class="hljs-comment">//调用小程序的setData</span><br>          $slots,<br>        &#125;);<br>      &#125;,<br>    &#125;;<br>  &#125;<br>  <span class="hljs-keyword">if</span> (<span class="hljs-title class_">Array</span>.<span class="hljs-title function_">isArray</span>(props)) &#123;<br>    <span class="hljs-comment">// [&#x27;title&#x27;]</span><br>    props.<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">key</span>) =&gt;</span> &#123;<br>      properties[key] = &#123;<br>        <span class="hljs-attr">type</span>: <span class="hljs-literal">null</span>,<br>        <span class="hljs-attr">observer</span>: <span class="hljs-title function_">createObserver</span>(key),<br>      &#125;;<br>    &#125;);<br>  &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-title function_">isPlainObject</span>(props)) &#123;<br>    <span class="hljs-comment">// &#123;title:&#123;type:String,default:&#x27;&#x27;&#125;,content:String&#125;</span><br>    <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">keys</span>(props).<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">key</span>) =&gt;</span> &#123;<br>      <span class="hljs-keyword">const</span> opts = props[key];<br>      <span class="hljs-keyword">if</span> (<span class="hljs-title function_">isPlainObject</span>(opts)) &#123;<br>        <span class="hljs-comment">// title:&#123;type:String,default:&#x27;&#x27;&#125;</span><br>        <span class="hljs-keyword">let</span> value = opts.<span class="hljs-property">default</span>;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-title function_">isFn</span>(value)) &#123;<br>          value = <span class="hljs-title function_">value</span>();<br>        &#125;<br><br>        opts.<span class="hljs-property">type</span> = <span class="hljs-title function_">parsePropType</span>(key, opts.<span class="hljs-property">type</span>);<br><br>        properties[key] = &#123;<br>          <span class="hljs-attr">type</span>: <span class="hljs-variable constant_">PROP_TYPES</span>.<span class="hljs-title function_">indexOf</span>(opts.<span class="hljs-property">type</span>) !== -<span class="hljs-number">1</span> ? opts.<span class="hljs-property">type</span> : <span class="hljs-literal">null</span>,<br>          value,<br>          <span class="hljs-attr">observer</span>: <span class="hljs-title function_">createObserver</span>(key),<br>        &#125;;<br>      &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-comment">// content:String</span><br>        <span class="hljs-keyword">const</span> type = <span class="hljs-title function_">parsePropType</span>(key, opts);<br>        properties[key] = &#123;<br>          <span class="hljs-attr">type</span>: <span class="hljs-variable constant_">PROP_TYPES</span>.<span class="hljs-title function_">indexOf</span>(type) !== -<span class="hljs-number">1</span> ? type : <span class="hljs-literal">null</span>,<br>          <span class="hljs-attr">observer</span>: <span class="hljs-title function_">createObserver</span>(key),<br>        &#125;;<br>      &#125;<br>    &#125;);<br>  &#125;<br>  <span class="hljs-keyword">return</span> properties;<br>&#125;<br><br></code></pre></td></tr></table></figure><h5 id="uni创建页面和组件"><a href="#uni创建页面和组件" class="headerlink" title="uni创建页面和组件"></a>uni创建页面和组件</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//小程序的component https://developers.weixin.qq.com/miniprogram/dev/reference/api/Component.html</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">createPage</span>(<span class="hljs-params">vuePageOptions</span>) &#123;<br>  &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title class_">Component</span>(<span class="hljs-title function_">parsePage</span>(vuePageOptions));<br>  &#125;<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">createComponent</span>(<span class="hljs-params">vueOptions</span>) &#123;<br>  &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title class_">Component</span>(<span class="hljs-title function_">parseComponent</span>(vueOptions));<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h5 id="uni创建App"><a href="#uni创建App" class="headerlink" title="uni创建App"></a>uni创建App</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">createApp</span>(<span class="hljs-params">vm</span>) &#123;<br>  <span class="hljs-title class_">App</span>(<span class="hljs-title function_">parseApp</span>(vm));<span class="hljs-comment">//小程序的App方法https://developers.weixin.qq.com/miniprogram/dev/reference/api/App.html</span><br>  <span class="hljs-keyword">return</span> vm;<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">parseApp</span>(<span class="hljs-params">vm</span>) &#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-title function_">parseBaseApp</span>(vm, &#123;<br>    mocks,<br>    initRefs,<br>  &#125;);<br>&#125;<br><br><span class="hljs-keyword">const</span> hooks = [<br>  <span class="hljs-string">&quot;onShow&quot;</span>,<br>  <span class="hljs-string">&quot;onHide&quot;</span>,<br>  <span class="hljs-string">&quot;onError&quot;</span>,<br>  <span class="hljs-string">&quot;onPageNotFound&quot;</span>,<br>  <span class="hljs-string">&quot;onThemeChange&quot;</span>,<br>  <span class="hljs-string">&quot;onUnhandledRejection&quot;</span>,<br>];<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">parseBaseApp</span>(<span class="hljs-params">vm, &#123; mocks, initRefs &#125;</span>) &#123;<br>  <span class="hljs-title function_">initEventChannel</span>();<br>  &#123;<br>    <span class="hljs-title function_">initScopedSlotsParams</span>();<br>  &#125;<br>  <span class="hljs-keyword">if</span> (vm.<span class="hljs-property">$options</span>.<span class="hljs-property">store</span>) &#123;<br>    <span class="hljs-title class_">Vue</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">$store</span> = vm.<span class="hljs-property">$options</span>.<span class="hljs-property">store</span>;<span class="hljs-comment">//挂在store</span><br>  &#125;<br><br>  <span class="hljs-title class_">Vue</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">mpHost</span> = <span class="hljs-string">&quot;mp-weixin&quot;</span>;<br><br>  <span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">mixin</span>(&#123;<br>    <span class="hljs-title function_">beforeCreate</span>(<span class="hljs-params"></span>) &#123;<br>      <span class="hljs-keyword">if</span> (!<span class="hljs-variable language_">this</span>.<span class="hljs-property">$options</span>.<span class="hljs-property">mpType</span>) &#123;<br>        <span class="hljs-keyword">return</span>;<br>      &#125;<br><br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">mpType</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">$options</span>.<span class="hljs-property">mpType</span>;<br><br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">$mp</span> = &#123;<br>        <span class="hljs-attr">data</span>: &#123;&#125;,<br>        [<span class="hljs-variable language_">this</span>.<span class="hljs-property">mpType</span>]: <span class="hljs-variable language_">this</span>.<span class="hljs-property">$options</span>.<span class="hljs-property">mpInstance</span>,<br>      &#125;;<br><br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">$scope</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">$options</span>.<span class="hljs-property">mpInstance</span>;<br><br>      <span class="hljs-keyword">delete</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">$options</span>.<span class="hljs-property">mpType</span>;<br>      <span class="hljs-keyword">delete</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">$options</span>.<span class="hljs-property">mpInstance</span>;<br>      <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">mpType</span> === <span class="hljs-string">&quot;page&quot;</span> &amp;&amp; <span class="hljs-keyword">typeof</span> getApp === <span class="hljs-string">&quot;function&quot;</span>) &#123;<br>        <span class="hljs-comment">// hack vue-i18n</span><br>        <span class="hljs-keyword">const</span> app = <span class="hljs-title function_">getApp</span>();<br>        <span class="hljs-keyword">if</span> (app.<span class="hljs-property">$vm</span> &amp;&amp; app.<span class="hljs-property">$vm</span>.<span class="hljs-property">$i18n</span>) &#123;<br>          <span class="hljs-variable language_">this</span>.<span class="hljs-property">_i18n</span> = app.<span class="hljs-property">$vm</span>.<span class="hljs-property">$i18n</span>;<br>        &#125;<br>      &#125;<br>      <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">mpType</span> !== <span class="hljs-string">&quot;app&quot;</span>) &#123;<br>        <span class="hljs-title function_">initRefs</span>(<span class="hljs-variable language_">this</span>);<br>        <span class="hljs-title function_">initMocks</span>(<span class="hljs-variable language_">this</span>, mocks);<br>      &#125;<br>    &#125;,<br>  &#125;);<br><br>  <span class="hljs-keyword">const</span> appOptions = &#123;<br>    <span class="hljs-title function_">onLaunch</span>(<span class="hljs-params">args</span>) &#123;<span class="hljs-comment">//这里定义了onLaunch，其他在hooks中</span><br>      <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">$vm</span>) &#123;<br>        <span class="hljs-comment">// 已经初始化过了，主要是为了百度，百度 onShow 在 onLaunch 之前</span><br>        <span class="hljs-keyword">return</span>;<br>      &#125;<br>      &#123;<br>        <span class="hljs-keyword">if</span> (wx.<span class="hljs-property">canIUse</span> &amp;&amp; !wx.<span class="hljs-title function_">canIUse</span>(<span class="hljs-string">&quot;nextTick&quot;</span>)) &#123;<br>          <span class="hljs-comment">// 事实 上2.2.3 即可，简单使用 2.3.0 的 nextTick 判断</span><br>          <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">error</span>(<br>            <span class="hljs-string">&quot;当前微信基础库版本过低，请将 微信开发者工具-详情-项目设置-调试基础库版本 更换为`2.3.0`以上&quot;</span><br>          );<br>        &#125;<br>      &#125;<br><br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">$vm</span> = vm;<br><br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">$vm</span>.<span class="hljs-property">$mp</span> = &#123;<br>        <span class="hljs-attr">app</span>: <span class="hljs-variable language_">this</span>,<br>      &#125;;<br><br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">$vm</span>.<span class="hljs-property">$scope</span> = <span class="hljs-variable language_">this</span>;<br>      <span class="hljs-comment">// vm 上也挂载 globalData</span><br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">$vm</span>.<span class="hljs-property">globalData</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">globalData</span>;<br><br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">$vm</span>.<span class="hljs-property">_isMounted</span> = <span class="hljs-literal">true</span>;<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">$vm</span>.<span class="hljs-title function_">__call_hook</span>(<span class="hljs-string">&quot;mounted&quot;</span>, args);<br><br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">$vm</span>.<span class="hljs-title function_">__call_hook</span>(<span class="hljs-string">&quot;onLaunch&quot;</span>, args);<br>    &#125;,<br>  &#125;;<br><br>  <span class="hljs-comment">// 兼容旧版本 globalData</span><br>  appOptions.<span class="hljs-property">globalData</span> = vm.<span class="hljs-property">$options</span>.<span class="hljs-property">globalData</span> || &#123;&#125;;<br>  <span class="hljs-comment">// 将 methods 中的方法挂在 getApp() 中</span><br>  <span class="hljs-keyword">const</span> &#123; methods &#125; = vm.<span class="hljs-property">$options</span>;<br>  <span class="hljs-keyword">if</span> (methods) &#123;<br>    <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">keys</span>(methods).<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">name</span>) =&gt;</span> &#123;<br>      appOptions[name] = methods[name];<br>    &#125;);<br>  &#125;<br><br>  <span class="hljs-title function_">initHooks</span>(appOptions, hooks);<br><br>  <span class="hljs-keyword">return</span> appOptions;<br>&#125;<br></code></pre></td></tr></table></figure><!-- flag of hidden posts -->]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>小程序</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>小程序调试技巧</title>
    <link href="/2022/03/10/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E8%B0%83%E8%AF%95%E6%8A%80%E5%B7%A7/"/>
    <url>/2022/03/10/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E8%B0%83%E8%AF%95%E6%8A%80%E5%B7%A7/</url>
    
    <content type="html"><![CDATA[<h5 id="1、在命令行直接进入任何一个页面"><a href="#1、在命令行直接进入任何一个页面" class="headerlink" title="1、在命令行直接进入任何一个页面"></a>1、在命令行直接进入任何一个页面</h5><p><img src="/2022/03/10/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E8%B0%83%E8%AF%95%E6%8A%80%E5%B7%A7/image-20220310172346311.png" alt="image-20220310172346311" loading="lazy" data-src="/2022/03/10/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E8%B0%83%E8%AF%95%E6%8A%80%E5%B7%A7/image-20220310172346311.png"></p><p>好处，可以灵活构造各种参数进入页面进行开发，缺点不支持scene参数传入。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-title function_">getApp</span>().<span class="hljs-property">$vm</span>.$route(<span class="hljs-string">&#x27;navigateTo&#x27;</span>, &#123; <span class="hljs-attr">url</span>: <span class="hljs-string">&#x27;/pages/extra/debug&#x27;</span> &#125;)<br><span class="hljs-title function_">getApp</span>().<span class="hljs-property">$vm</span>.$route(<span class="hljs-string">&#x27;navigateTo&#x27;</span>, &#123; <span class="hljs-attr">url</span>: <span class="hljs-string">&#x27;/pages/home/index&#x27;</span> &#125;)<br></code></pre></td></tr></table></figure><!-- flag of hidden posts -->]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>小程序</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Uni-App的代码生成</title>
    <link href="/2022/03/08/uni-app%E7%9A%84%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90/"/>
    <url>/2022/03/08/uni-app%E7%9A%84%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90/</url>
    
    <content type="html"><![CDATA[<p>在前面一个相关的文章中，已经介绍了uni-app的加载过程，也可以回顾一下大致的过程如下：</p><ol><li>使用yarn start命令，会直接出发vue-cli-service活动起来，然后开始加载vue-cli相关的插件</li><li>其中uni的三个插件会被加载，并依次之心</li><li>同时我们发现，在小程序模式下，hbuilderx插件是不会被执行的</li><li>然后我们发现optimize插件在develop模式下是不会被执行的</li><li>因此我们发现只有vue-cli-plugin-uni这个插件会被执行，这里面做了一些列的准备工作，目的就是为了uni能够有一个编译为小程序的环境，他在执行完插件体之后，最终cli-service会转而调用@dcloudio&#x2F;vue-cli-plugin-uni&#x2F;commands&#x2F;build.js中的build方法，然后build方法在执行的过程中，会到@dcloudio&#x2F;vue-cli-plugin-uni&#x2F;lib&#x2F;mp&#x2F;index.js中执行去手机webpack的一些配置，汇总好继续build的构建。</li></ol><p>我们知道，在commands&#x2F;build.js的build方法最后，是返回了一个Promise，里面直接进来就是开始webpack的构建，传入的参数就是上文梳理的插件中收集到的webpackConfigs。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> &#123;<br>    <span class="hljs-title function_">webpack</span>(webpackConfigs, <span class="hljs-function">(<span class="hljs-params">err, stats</span>) =&gt;</span> &#123;<br>      <span class="hljs-keyword">if</span> (!runByHBuilderX &amp;&amp; !runByAliIde) &#123;<br>        <span class="hljs-title function_">stopSpinner</span>(<span class="hljs-literal">false</span>)<br>      &#125;<br>      <span class="hljs-keyword">if</span> (err) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-title function_">reject</span>(err)<br>      &#125;<br><br>      <span class="hljs-keyword">if</span> (stats.<span class="hljs-title function_">hasErrors</span>()) &#123;<br>        <span class="hljs-comment">/* eslint-disable prefer-promise-reject-errors */</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-title function_">reject</span>(<span class="hljs-string">&#x27;Build failed with errors.&#x27;</span>)<br>      &#125;<br><br>      <span class="hljs-keyword">if</span> (!args.<span class="hljs-property">silent</span> &amp;&amp; (process.<span class="hljs-property">env</span>.<span class="hljs-property">UNI_PLATFORM</span> !== <span class="hljs-string">&#x27;app-plus&#x27;</span> || process.<span class="hljs-property">env</span>.<span class="hljs-property">UNI_AUTOMATOR_WS_ENDPOINT</span>)) &#123;<br>        <span class="hljs-keyword">const</span> targetDirShort = path.<span class="hljs-title function_">relative</span>(<br>          api.<span class="hljs-property">service</span>.<span class="hljs-property">context</span>,<br>          process.<span class="hljs-property">env</span>.<span class="hljs-property">UNI_OUTPUT_DIR</span><br>        )<br><br>        <span class="hljs-keyword">if</span> (!args.<span class="hljs-property">watch</span>) &#123;<br>          <span class="hljs-keyword">const</span> dirMsg = runByHBuilderX ? <span class="hljs-string">&#x27;&#x27;</span><br>            : <span class="hljs-string">`The <span class="hljs-subst">$&#123;chalk.cyan(targetDirShort)&#125;</span> directory is ready to be deployed.`</span><br>          <span class="hljs-title function_">done</span>(<span class="hljs-string">`Build complete. <span class="hljs-subst">$&#123;dirMsg&#125;</span>`</span>)<br><br>          <span class="hljs-keyword">if</span> (process.<span class="hljs-property">env</span>.<span class="hljs-property">UNI_PLATFORM</span> === <span class="hljs-string">&#x27;h5&#x27;</span> &amp;&amp; !isInHBuilderX) &#123;<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>()<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;欢迎将H5站部署到uniCloud前端网页托管平台，高速、免费、安全、省心，详见：&#x27;</span>)<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;https://uniapp.dcloud.io/uniCloud/hosting&#x27;</span>)<br>          &#125;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>          <span class="hljs-keyword">const</span> dirMsg = runByHBuilderX ? <span class="hljs-string">&#x27;&#x27;</span> : <span class="hljs-string">`The <span class="hljs-subst">$&#123;chalk.cyan(targetDirShort)&#125;</span> directory is ready. `</span><br>          <span class="hljs-title function_">done</span>(<span class="hljs-string">`Build complete. <span class="hljs-subst">$&#123;dirMsg&#125;</span>Watching for changes...`</span>)<br>        &#125;<br>      &#125;<br><br>      <span class="hljs-title function_">resolve</span>()<br>    &#125;)<br>  &#125;)<br></code></pre></td></tr></table></figure><p>下面就来分析一下，uni-app是如何处理一个页面的。要了解整个过程，我们不妨对webpack打一个断点。</p><p><img src="/2022/03/08/uni-app%E7%9A%84%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90/image-20220308094639839.png" alt="image-20220308094639839" loading="lazy" data-src="/2022/03/08/uni-app%E7%9A%84%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90/image-20220308094639839.png"></p><p>注意到这里，我们发现如果options是一个数组的话，那么，compiler会被包装成一个MultiCompiler。实际上也确实如此，我们的options就是一个数组。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">if</span> (<span class="hljs-title class_">Array</span>.<span class="hljs-title function_">isArray</span>(options)) &#123;<br>compiler = <span class="hljs-keyword">new</span> <span class="hljs-title class_">MultiCompiler</span>(<br><span class="hljs-title class_">Array</span>.<span class="hljs-title function_">from</span>(options).<span class="hljs-title function_">map</span>(<span class="hljs-function"><span class="hljs-params">options</span> =&gt;</span> <span class="hljs-title function_">webpack</span>(options))<br>);<br>&#125;<br></code></pre></td></tr></table></figure><p>但是递归调用webpack的时候却没有传入callback，仔细看后面会发现</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">if</span> (callback) &#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> callback !== <span class="hljs-string">&quot;function&quot;</span>) &#123;<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">&quot;Invalid argument: callback&quot;</span>);<br>&#125;<br><span class="hljs-keyword">if</span> (<br>options.<span class="hljs-property">watch</span> === <span class="hljs-literal">true</span> ||<br>(<span class="hljs-title class_">Array</span>.<span class="hljs-title function_">isArray</span>(options) &amp;&amp; options.<span class="hljs-title function_">some</span>(<span class="hljs-function"><span class="hljs-params">o</span> =&gt;</span> o.<span class="hljs-property">watch</span>))<br>) &#123;<br><span class="hljs-keyword">const</span> watchOptions = <span class="hljs-title class_">Array</span>.<span class="hljs-title function_">isArray</span>(options)<br>? options.<span class="hljs-title function_">map</span>(<span class="hljs-function"><span class="hljs-params">o</span> =&gt;</span> o.<span class="hljs-property">watchOptions</span> || &#123;&#125;)<br>: options.<span class="hljs-property">watchOptions</span> || &#123;&#125;;<br><span class="hljs-keyword">return</span> compiler.<span class="hljs-title function_">watch</span>(watchOptions, callback);<br>&#125;<br>compiler.<span class="hljs-title function_">run</span>(callback);<br>&#125;<br></code></pre></td></tr></table></figure><p>这说明MultiCompiler的包装过程不会真正的去编译，而是指构造compiler。</p><p>compile构造的过程会加载各种插件，这些插件我们当然可以自定义的加进来。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">if</span> (options.<span class="hljs-property">plugins</span> &amp;&amp; <span class="hljs-title class_">Array</span>.<span class="hljs-title function_">isArray</span>(options.<span class="hljs-property">plugins</span>)) &#123;<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">const</span> plugin <span class="hljs-keyword">of</span> options.<span class="hljs-property">plugins</span>) &#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> plugin === <span class="hljs-string">&quot;function&quot;</span>) &#123;<br>plugin.<span class="hljs-title function_">call</span>(compiler, compiler);<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>plugin.<span class="hljs-title function_">apply</span>(compiler);<br>&#125;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>比如说，这里就有我们的自己定义的插件</p><p><img src="/2022/03/08/uni-app%E7%9A%84%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90/image-20220308100008826.png" alt="image-20220308100008826" loading="lazy" data-src="/2022/03/08/uni-app%E7%9A%84%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90/image-20220308100008826.png"></p><p>ok到此为止，compile总算是构造出来了，从现在开始才进入到真正的编译环节。</p><p>刚刚提到，只有当webpack的callback参数非空的时候，才能进入到正在的编译环节。那么编译有两种方式:</p><ol><li>compiler.watch(watchOptions, callback);</li><li>compiler.run(callback);</li></ol><p>这取决如我们是否传入了watch模式，也就是npm 命令中的 <strong>–watch</strong> 参数，通常我们在开发模式下是会传的，因为，我们改动代码保存之后需要出发自动编译出新产物嘛，不然，难道改动一行代码，就要去手动编译一下吗，这个代价是在是太大了点把。</p><p>webpack的watch方式是这么玩的，构造了一Watching来执行编译，this参数其实就是传入的compiler</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-title function_">watch</span>(<span class="hljs-params">watchOptions, handler</span>) &#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">running</span>) <span class="hljs-keyword">return</span> <span class="hljs-title function_">handler</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">ConcurrentCompilationError</span>());<br><br><span class="hljs-variable language_">this</span>.<span class="hljs-property">running</span> = <span class="hljs-literal">true</span>;<br><span class="hljs-variable language_">this</span>.<span class="hljs-property">watchMode</span> = <span class="hljs-literal">true</span>;<br><span class="hljs-variable language_">this</span>.<span class="hljs-property">fileTimestamps</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Map</span>();<br><span class="hljs-variable language_">this</span>.<span class="hljs-property">contextTimestamps</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Map</span>();<br><span class="hljs-variable language_">this</span>.<span class="hljs-property">removedFiles</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Set</span>();<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Watching</span>(<span class="hljs-variable language_">this</span>, watchOptions, handler);<br>&#125;<br></code></pre></td></tr></table></figure><p>最终是loader</p><p><img src="/2022/03/08/uni-app%E7%9A%84%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90/image-20220308114349787.png" alt="image-20220308114349787" loading="lazy" data-src="/2022/03/08/uni-app%E7%9A%84%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90/image-20220308114349787.png"></p><p>来处理每一个页面文件</p><p>，而uni自己的loader在@cloudio&#x2F;webpack-uni-mp-loader&#x2F;lib&#x2F;main.js，实际上，是main-new.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">callback</span>(<span class="hljs-literal">null</span>,<br>        <span class="hljs-string">`</span><br><span class="hljs-string">import Vue from &#x27;vue&#x27;</span><br><span class="hljs-string">import Page from &#x27;./<span class="hljs-subst">$&#123;normalizePath(params.page)&#125;</span><span class="hljs-subst">$&#123;ext&#125;</span>&#x27;</span><br><span class="hljs-string">createPage(Page)</span><br><span class="hljs-string">`</span>, map)<br>    &#125;<br></code></pre></td></tr></table></figure><p>会经过很多loader的处理,比如中间会生成这样的代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-string">&#x27;import &#x27;</span>uni-pages<span class="hljs-string">&#x27;;</span><br><span class="hljs-string">import Vue from &#x27;</span>vue<span class="hljs-string">&#x27;</span><br><span class="hljs-string">import Page from &#x27;</span>./pages/home/home-list.<span class="hljs-property">vue</span><span class="hljs-string">&#x27;</span><br><span class="hljs-string">createPage(Page)&#x27;</span><br></code></pre></td></tr></table></figure><p>其中createPage是uni的运行时</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br><span class="line">949</span><br><span class="line">950</span><br><span class="line">951</span><br><span class="line">952</span><br><span class="line">953</span><br><span class="line">954</span><br><span class="line">955</span><br><span class="line">956</span><br><span class="line">957</span><br><span class="line">958</span><br><span class="line">959</span><br><span class="line">960</span><br><span class="line">961</span><br><span class="line">962</span><br><span class="line">963</span><br><span class="line">964</span><br><span class="line">965</span><br><span class="line">966</span><br><span class="line">967</span><br><span class="line">968</span><br><span class="line">969</span><br><span class="line">970</span><br><span class="line">971</span><br><span class="line">972</span><br><span class="line">973</span><br><span class="line">974</span><br><span class="line">975</span><br><span class="line">976</span><br><span class="line">977</span><br><span class="line">978</span><br><span class="line">979</span><br><span class="line">980</span><br><span class="line">981</span><br><span class="line">982</span><br><span class="line">983</span><br><span class="line">984</span><br><span class="line">985</span><br><span class="line">986</span><br><span class="line">987</span><br><span class="line">988</span><br><span class="line">989</span><br><span class="line">990</span><br><span class="line">991</span><br><span class="line">992</span><br><span class="line">993</span><br><span class="line">994</span><br><span class="line">995</span><br><span class="line">996</span><br><span class="line">997</span><br><span class="line">998</span><br><span class="line">999</span><br><span class="line">1000</span><br><span class="line">1001</span><br><span class="line">1002</span><br><span class="line">1003</span><br><span class="line">1004</span><br><span class="line">1005</span><br><span class="line">1006</span><br><span class="line">1007</span><br><span class="line">1008</span><br><span class="line">1009</span><br><span class="line">1010</span><br><span class="line">1011</span><br><span class="line">1012</span><br><span class="line">1013</span><br><span class="line">1014</span><br><span class="line">1015</span><br><span class="line">1016</span><br><span class="line">1017</span><br><span class="line">1018</span><br><span class="line">1019</span><br><span class="line">1020</span><br><span class="line">1021</span><br><span class="line">1022</span><br><span class="line">1023</span><br><span class="line">1024</span><br><span class="line">1025</span><br><span class="line">1026</span><br><span class="line">1027</span><br><span class="line">1028</span><br><span class="line">1029</span><br><span class="line">1030</span><br><span class="line">1031</span><br><span class="line">1032</span><br><span class="line">1033</span><br><span class="line">1034</span><br><span class="line">1035</span><br><span class="line">1036</span><br><span class="line">1037</span><br><span class="line">1038</span><br><span class="line">1039</span><br><span class="line">1040</span><br><span class="line">1041</span><br><span class="line">1042</span><br><span class="line">1043</span><br><span class="line">1044</span><br><span class="line">1045</span><br><span class="line">1046</span><br><span class="line">1047</span><br><span class="line">1048</span><br><span class="line">1049</span><br><span class="line">1050</span><br><span class="line">1051</span><br><span class="line">1052</span><br><span class="line">1053</span><br><span class="line">1054</span><br><span class="line">1055</span><br><span class="line">1056</span><br><span class="line">1057</span><br><span class="line">1058</span><br><span class="line">1059</span><br><span class="line">1060</span><br><span class="line">1061</span><br><span class="line">1062</span><br><span class="line">1063</span><br><span class="line">1064</span><br><span class="line">1065</span><br><span class="line">1066</span><br><span class="line">1067</span><br><span class="line">1068</span><br><span class="line">1069</span><br><span class="line">1070</span><br><span class="line">1071</span><br><span class="line">1072</span><br><span class="line">1073</span><br><span class="line">1074</span><br><span class="line">1075</span><br><span class="line">1076</span><br><span class="line">1077</span><br><span class="line">1078</span><br><span class="line">1079</span><br><span class="line">1080</span><br><span class="line">1081</span><br><span class="line">1082</span><br><span class="line">1083</span><br><span class="line">1084</span><br><span class="line">1085</span><br><span class="line">1086</span><br><span class="line">1087</span><br><span class="line">1088</span><br><span class="line">1089</span><br><span class="line">1090</span><br><span class="line">1091</span><br><span class="line">1092</span><br><span class="line">1093</span><br><span class="line">1094</span><br><span class="line">1095</span><br><span class="line">1096</span><br><span class="line">1097</span><br><span class="line">1098</span><br><span class="line">1099</span><br><span class="line">1100</span><br><span class="line">1101</span><br><span class="line">1102</span><br><span class="line">1103</span><br><span class="line">1104</span><br><span class="line">1105</span><br><span class="line">1106</span><br><span class="line">1107</span><br><span class="line">1108</span><br><span class="line">1109</span><br><span class="line">1110</span><br><span class="line">1111</span><br><span class="line">1112</span><br><span class="line">1113</span><br><span class="line">1114</span><br><span class="line">1115</span><br><span class="line">1116</span><br><span class="line">1117</span><br><span class="line">1118</span><br><span class="line">1119</span><br><span class="line">1120</span><br><span class="line">1121</span><br><span class="line">1122</span><br><span class="line">1123</span><br><span class="line">1124</span><br><span class="line">1125</span><br><span class="line">1126</span><br><span class="line">1127</span><br><span class="line">1128</span><br><span class="line">1129</span><br><span class="line">1130</span><br><span class="line">1131</span><br><span class="line">1132</span><br><span class="line">1133</span><br><span class="line">1134</span><br><span class="line">1135</span><br><span class="line">1136</span><br><span class="line">1137</span><br><span class="line">1138</span><br><span class="line">1139</span><br><span class="line">1140</span><br><span class="line">1141</span><br><span class="line">1142</span><br><span class="line">1143</span><br><span class="line">1144</span><br><span class="line">1145</span><br><span class="line">1146</span><br><span class="line">1147</span><br><span class="line">1148</span><br><span class="line">1149</span><br><span class="line">1150</span><br><span class="line">1151</span><br><span class="line">1152</span><br><span class="line">1153</span><br><span class="line">1154</span><br><span class="line">1155</span><br><span class="line">1156</span><br><span class="line">1157</span><br><span class="line">1158</span><br><span class="line">1159</span><br><span class="line">1160</span><br><span class="line">1161</span><br><span class="line">1162</span><br><span class="line">1163</span><br><span class="line">1164</span><br><span class="line">1165</span><br><span class="line">1166</span><br><span class="line">1167</span><br><span class="line">1168</span><br><span class="line">1169</span><br><span class="line">1170</span><br><span class="line">1171</span><br><span class="line">1172</span><br><span class="line">1173</span><br><span class="line">1174</span><br><span class="line">1175</span><br><span class="line">1176</span><br><span class="line">1177</span><br><span class="line">1178</span><br><span class="line">1179</span><br><span class="line">1180</span><br><span class="line">1181</span><br><span class="line">1182</span><br><span class="line">1183</span><br><span class="line">1184</span><br><span class="line">1185</span><br><span class="line">1186</span><br><span class="line">1187</span><br><span class="line">1188</span><br><span class="line">1189</span><br><span class="line">1190</span><br><span class="line">1191</span><br><span class="line">1192</span><br><span class="line">1193</span><br><span class="line">1194</span><br><span class="line">1195</span><br><span class="line">1196</span><br><span class="line">1197</span><br><span class="line">1198</span><br><span class="line">1199</span><br><span class="line">1200</span><br><span class="line">1201</span><br><span class="line">1202</span><br><span class="line">1203</span><br><span class="line">1204</span><br><span class="line">1205</span><br><span class="line">1206</span><br><span class="line">1207</span><br><span class="line">1208</span><br><span class="line">1209</span><br><span class="line">1210</span><br><span class="line">1211</span><br><span class="line">1212</span><br><span class="line">1213</span><br><span class="line">1214</span><br><span class="line">1215</span><br><span class="line">1216</span><br><span class="line">1217</span><br><span class="line">1218</span><br><span class="line">1219</span><br><span class="line">1220</span><br><span class="line">1221</span><br><span class="line">1222</span><br><span class="line">1223</span><br><span class="line">1224</span><br><span class="line">1225</span><br><span class="line">1226</span><br><span class="line">1227</span><br><span class="line">1228</span><br><span class="line">1229</span><br><span class="line">1230</span><br><span class="line">1231</span><br><span class="line">1232</span><br><span class="line">1233</span><br><span class="line">1234</span><br><span class="line">1235</span><br><span class="line">1236</span><br><span class="line">1237</span><br><span class="line">1238</span><br><span class="line">1239</span><br><span class="line">1240</span><br><span class="line">1241</span><br><span class="line">1242</span><br><span class="line">1243</span><br><span class="line">1244</span><br><span class="line">1245</span><br><span class="line">1246</span><br><span class="line">1247</span><br><span class="line">1248</span><br><span class="line">1249</span><br><span class="line">1250</span><br><span class="line">1251</span><br><span class="line">1252</span><br><span class="line">1253</span><br><span class="line">1254</span><br><span class="line">1255</span><br><span class="line">1256</span><br><span class="line">1257</span><br><span class="line">1258</span><br><span class="line">1259</span><br><span class="line">1260</span><br><span class="line">1261</span><br><span class="line">1262</span><br><span class="line">1263</span><br><span class="line">1264</span><br><span class="line">1265</span><br><span class="line">1266</span><br><span class="line">1267</span><br><span class="line">1268</span><br><span class="line">1269</span><br><span class="line">1270</span><br><span class="line">1271</span><br><span class="line">1272</span><br><span class="line">1273</span><br><span class="line">1274</span><br><span class="line">1275</span><br><span class="line">1276</span><br><span class="line">1277</span><br><span class="line">1278</span><br><span class="line">1279</span><br><span class="line">1280</span><br><span class="line">1281</span><br><span class="line">1282</span><br><span class="line">1283</span><br><span class="line">1284</span><br><span class="line">1285</span><br><span class="line">1286</span><br><span class="line">1287</span><br><span class="line">1288</span><br><span class="line">1289</span><br><span class="line">1290</span><br><span class="line">1291</span><br><span class="line">1292</span><br><span class="line">1293</span><br><span class="line">1294</span><br><span class="line">1295</span><br><span class="line">1296</span><br><span class="line">1297</span><br><span class="line">1298</span><br><span class="line">1299</span><br><span class="line">1300</span><br><span class="line">1301</span><br><span class="line">1302</span><br><span class="line">1303</span><br><span class="line">1304</span><br><span class="line">1305</span><br><span class="line">1306</span><br><span class="line">1307</span><br><span class="line">1308</span><br><span class="line">1309</span><br><span class="line">1310</span><br><span class="line">1311</span><br><span class="line">1312</span><br><span class="line">1313</span><br><span class="line">1314</span><br><span class="line">1315</span><br><span class="line">1316</span><br><span class="line">1317</span><br><span class="line">1318</span><br><span class="line">1319</span><br><span class="line">1320</span><br><span class="line">1321</span><br><span class="line">1322</span><br><span class="line">1323</span><br><span class="line">1324</span><br><span class="line">1325</span><br><span class="line">1326</span><br><span class="line">1327</span><br><span class="line">1328</span><br><span class="line">1329</span><br><span class="line">1330</span><br><span class="line">1331</span><br><span class="line">1332</span><br><span class="line">1333</span><br><span class="line">1334</span><br><span class="line">1335</span><br><span class="line">1336</span><br><span class="line">1337</span><br><span class="line">1338</span><br><span class="line">1339</span><br><span class="line">1340</span><br><span class="line">1341</span><br><span class="line">1342</span><br><span class="line">1343</span><br><span class="line">1344</span><br><span class="line">1345</span><br><span class="line">1346</span><br><span class="line">1347</span><br><span class="line">1348</span><br><span class="line">1349</span><br><span class="line">1350</span><br><span class="line">1351</span><br><span class="line">1352</span><br><span class="line">1353</span><br><span class="line">1354</span><br><span class="line">1355</span><br><span class="line">1356</span><br><span class="line">1357</span><br><span class="line">1358</span><br><span class="line">1359</span><br><span class="line">1360</span><br><span class="line">1361</span><br><span class="line">1362</span><br><span class="line">1363</span><br><span class="line">1364</span><br><span class="line">1365</span><br><span class="line">1366</span><br><span class="line">1367</span><br><span class="line">1368</span><br><span class="line">1369</span><br><span class="line">1370</span><br><span class="line">1371</span><br><span class="line">1372</span><br><span class="line">1373</span><br><span class="line">1374</span><br><span class="line">1375</span><br><span class="line">1376</span><br><span class="line">1377</span><br><span class="line">1378</span><br><span class="line">1379</span><br><span class="line">1380</span><br><span class="line">1381</span><br><span class="line">1382</span><br><span class="line">1383</span><br><span class="line">1384</span><br><span class="line">1385</span><br><span class="line">1386</span><br><span class="line">1387</span><br><span class="line">1388</span><br><span class="line">1389</span><br><span class="line">1390</span><br><span class="line">1391</span><br><span class="line">1392</span><br><span class="line">1393</span><br><span class="line">1394</span><br><span class="line">1395</span><br><span class="line">1396</span><br><span class="line">1397</span><br><span class="line">1398</span><br><span class="line">1399</span><br><span class="line">1400</span><br><span class="line">1401</span><br><span class="line">1402</span><br><span class="line">1403</span><br><span class="line">1404</span><br><span class="line">1405</span><br><span class="line">1406</span><br><span class="line">1407</span><br><span class="line">1408</span><br><span class="line">1409</span><br><span class="line">1410</span><br><span class="line">1411</span><br><span class="line">1412</span><br><span class="line">1413</span><br><span class="line">1414</span><br><span class="line">1415</span><br><span class="line">1416</span><br><span class="line">1417</span><br><span class="line">1418</span><br><span class="line">1419</span><br><span class="line">1420</span><br><span class="line">1421</span><br><span class="line">1422</span><br><span class="line">1423</span><br><span class="line">1424</span><br><span class="line">1425</span><br><span class="line">1426</span><br><span class="line">1427</span><br><span class="line">1428</span><br><span class="line">1429</span><br><span class="line">1430</span><br><span class="line">1431</span><br><span class="line">1432</span><br><span class="line">1433</span><br><span class="line">1434</span><br><span class="line">1435</span><br><span class="line">1436</span><br><span class="line">1437</span><br><span class="line">1438</span><br><span class="line">1439</span><br><span class="line">1440</span><br><span class="line">1441</span><br><span class="line">1442</span><br><span class="line">1443</span><br><span class="line">1444</span><br><span class="line">1445</span><br><span class="line">1446</span><br><span class="line">1447</span><br><span class="line">1448</span><br><span class="line">1449</span><br><span class="line">1450</span><br><span class="line">1451</span><br><span class="line">1452</span><br><span class="line">1453</span><br><span class="line">1454</span><br><span class="line">1455</span><br><span class="line">1456</span><br><span class="line">1457</span><br><span class="line">1458</span><br><span class="line">1459</span><br><span class="line">1460</span><br><span class="line">1461</span><br><span class="line">1462</span><br><span class="line">1463</span><br><span class="line">1464</span><br><span class="line">1465</span><br><span class="line">1466</span><br><span class="line">1467</span><br><span class="line">1468</span><br><span class="line">1469</span><br><span class="line">1470</span><br><span class="line">1471</span><br><span class="line">1472</span><br><span class="line">1473</span><br><span class="line">1474</span><br><span class="line">1475</span><br><span class="line">1476</span><br><span class="line">1477</span><br><span class="line">1478</span><br><span class="line">1479</span><br><span class="line">1480</span><br><span class="line">1481</span><br><span class="line">1482</span><br><span class="line">1483</span><br><span class="line">1484</span><br><span class="line">1485</span><br><span class="line">1486</span><br><span class="line">1487</span><br><span class="line">1488</span><br><span class="line">1489</span><br><span class="line">1490</span><br><span class="line">1491</span><br><span class="line">1492</span><br><span class="line">1493</span><br><span class="line">1494</span><br><span class="line">1495</span><br><span class="line">1496</span><br><span class="line">1497</span><br><span class="line">1498</span><br><span class="line">1499</span><br><span class="line">1500</span><br><span class="line">1501</span><br><span class="line">1502</span><br><span class="line">1503</span><br><span class="line">1504</span><br><span class="line">1505</span><br><span class="line">1506</span><br><span class="line">1507</span><br><span class="line">1508</span><br><span class="line">1509</span><br><span class="line">1510</span><br><span class="line">1511</span><br><span class="line">1512</span><br><span class="line">1513</span><br><span class="line">1514</span><br><span class="line">1515</span><br><span class="line">1516</span><br><span class="line">1517</span><br><span class="line">1518</span><br><span class="line">1519</span><br><span class="line">1520</span><br><span class="line">1521</span><br><span class="line">1522</span><br><span class="line">1523</span><br><span class="line">1524</span><br><span class="line">1525</span><br><span class="line">1526</span><br><span class="line">1527</span><br><span class="line">1528</span><br><span class="line">1529</span><br><span class="line">1530</span><br><span class="line">1531</span><br><span class="line">1532</span><br><span class="line">1533</span><br><span class="line">1534</span><br><span class="line">1535</span><br><span class="line">1536</span><br><span class="line">1537</span><br><span class="line">1538</span><br><span class="line">1539</span><br><span class="line">1540</span><br><span class="line">1541</span><br><span class="line">1542</span><br><span class="line">1543</span><br><span class="line">1544</span><br><span class="line">1545</span><br><span class="line">1546</span><br><span class="line">1547</span><br><span class="line">1548</span><br><span class="line">1549</span><br><span class="line">1550</span><br><span class="line">1551</span><br><span class="line">1552</span><br><span class="line">1553</span><br><span class="line">1554</span><br><span class="line">1555</span><br><span class="line">1556</span><br><span class="line">1557</span><br><span class="line">1558</span><br><span class="line">1559</span><br><span class="line">1560</span><br><span class="line">1561</span><br><span class="line">1562</span><br><span class="line">1563</span><br><span class="line">1564</span><br><span class="line">1565</span><br><span class="line">1566</span><br><span class="line">1567</span><br><span class="line">1568</span><br><span class="line">1569</span><br><span class="line">1570</span><br><span class="line">1571</span><br><span class="line">1572</span><br><span class="line">1573</span><br><span class="line">1574</span><br><span class="line">1575</span><br><span class="line">1576</span><br><span class="line">1577</span><br><span class="line">1578</span><br><span class="line">1579</span><br><span class="line">1580</span><br><span class="line">1581</span><br><span class="line">1582</span><br><span class="line">1583</span><br><span class="line">1584</span><br><span class="line">1585</span><br><span class="line">1586</span><br><span class="line">1587</span><br><span class="line">1588</span><br><span class="line">1589</span><br><span class="line">1590</span><br><span class="line">1591</span><br><span class="line">1592</span><br><span class="line">1593</span><br><span class="line">1594</span><br><span class="line">1595</span><br><span class="line">1596</span><br><span class="line">1597</span><br><span class="line">1598</span><br><span class="line">1599</span><br><span class="line">1600</span><br><span class="line">1601</span><br><span class="line">1602</span><br><span class="line">1603</span><br><span class="line">1604</span><br><span class="line">1605</span><br><span class="line">1606</span><br><span class="line">1607</span><br><span class="line">1608</span><br><span class="line">1609</span><br><span class="line">1610</span><br><span class="line">1611</span><br><span class="line">1612</span><br><span class="line">1613</span><br><span class="line">1614</span><br><span class="line">1615</span><br><span class="line">1616</span><br><span class="line">1617</span><br><span class="line">1618</span><br><span class="line">1619</span><br><span class="line">1620</span><br><span class="line">1621</span><br><span class="line">1622</span><br><span class="line">1623</span><br><span class="line">1624</span><br><span class="line">1625</span><br><span class="line">1626</span><br><span class="line">1627</span><br><span class="line">1628</span><br><span class="line">1629</span><br><span class="line">1630</span><br><span class="line">1631</span><br><span class="line">1632</span><br><span class="line">1633</span><br><span class="line">1634</span><br><span class="line">1635</span><br><span class="line">1636</span><br><span class="line">1637</span><br><span class="line">1638</span><br><span class="line">1639</span><br><span class="line">1640</span><br><span class="line">1641</span><br><span class="line">1642</span><br><span class="line">1643</span><br><span class="line">1644</span><br><span class="line">1645</span><br><span class="line">1646</span><br><span class="line">1647</span><br><span class="line">1648</span><br><span class="line">1649</span><br><span class="line">1650</span><br><span class="line">1651</span><br><span class="line">1652</span><br><span class="line">1653</span><br><span class="line">1654</span><br><span class="line">1655</span><br><span class="line">1656</span><br><span class="line">1657</span><br><span class="line">1658</span><br><span class="line">1659</span><br><span class="line">1660</span><br><span class="line">1661</span><br><span class="line">1662</span><br><span class="line">1663</span><br><span class="line">1664</span><br><span class="line">1665</span><br><span class="line">1666</span><br><span class="line">1667</span><br><span class="line">1668</span><br><span class="line">1669</span><br><span class="line">1670</span><br><span class="line">1671</span><br><span class="line">1672</span><br><span class="line">1673</span><br><span class="line">1674</span><br><span class="line">1675</span><br><span class="line">1676</span><br><span class="line">1677</span><br><span class="line">1678</span><br><span class="line">1679</span><br><span class="line">1680</span><br><span class="line">1681</span><br><span class="line">1682</span><br><span class="line">1683</span><br><span class="line">1684</span><br><span class="line">1685</span><br><span class="line">1686</span><br><span class="line">1687</span><br><span class="line">1688</span><br><span class="line">1689</span><br><span class="line">1690</span><br><span class="line">1691</span><br><span class="line">1692</span><br><span class="line">1693</span><br><span class="line">1694</span><br><span class="line">1695</span><br><span class="line">1696</span><br><span class="line">1697</span><br><span class="line">1698</span><br><span class="line">1699</span><br><span class="line">1700</span><br><span class="line">1701</span><br><span class="line">1702</span><br><span class="line">1703</span><br><span class="line">1704</span><br><span class="line">1705</span><br><span class="line">1706</span><br><span class="line">1707</span><br><span class="line">1708</span><br><span class="line">1709</span><br><span class="line">1710</span><br><span class="line">1711</span><br><span class="line">1712</span><br><span class="line">1713</span><br><span class="line">1714</span><br><span class="line">1715</span><br><span class="line">1716</span><br><span class="line">1717</span><br><span class="line">1718</span><br><span class="line">1719</span><br><span class="line">1720</span><br><span class="line">1721</span><br><span class="line">1722</span><br><span class="line">1723</span><br><span class="line">1724</span><br><span class="line">1725</span><br><span class="line">1726</span><br><span class="line">1727</span><br><span class="line">1728</span><br><span class="line">1729</span><br><span class="line">1730</span><br><span class="line">1731</span><br><span class="line">1732</span><br><span class="line">1733</span><br><span class="line">1734</span><br><span class="line">1735</span><br><span class="line">1736</span><br><span class="line">1737</span><br><span class="line">1738</span><br><span class="line">1739</span><br><span class="line">1740</span><br><span class="line">1741</span><br><span class="line">1742</span><br><span class="line">1743</span><br><span class="line">1744</span><br><span class="line">1745</span><br><span class="line">1746</span><br><span class="line">1747</span><br><span class="line">1748</span><br><span class="line">1749</span><br><span class="line">1750</span><br><span class="line">1751</span><br><span class="line">1752</span><br><span class="line">1753</span><br><span class="line">1754</span><br><span class="line">1755</span><br><span class="line">1756</span><br><span class="line">1757</span><br><span class="line">1758</span><br><span class="line">1759</span><br><span class="line">1760</span><br><span class="line">1761</span><br><span class="line">1762</span><br><span class="line">1763</span><br><span class="line">1764</span><br><span class="line">1765</span><br><span class="line">1766</span><br><span class="line">1767</span><br><span class="line">1768</span><br><span class="line">1769</span><br><span class="line">1770</span><br><span class="line">1771</span><br><span class="line">1772</span><br><span class="line">1773</span><br><span class="line">1774</span><br><span class="line">1775</span><br><span class="line">1776</span><br><span class="line">1777</span><br><span class="line">1778</span><br><span class="line">1779</span><br><span class="line">1780</span><br><span class="line">1781</span><br><span class="line">1782</span><br><span class="line">1783</span><br><span class="line">1784</span><br><span class="line">1785</span><br><span class="line">1786</span><br><span class="line">1787</span><br><span class="line">1788</span><br><span class="line">1789</span><br><span class="line">1790</span><br><span class="line">1791</span><br><span class="line">1792</span><br><span class="line">1793</span><br><span class="line">1794</span><br><span class="line">1795</span><br><span class="line">1796</span><br><span class="line">1797</span><br><span class="line">1798</span><br><span class="line">1799</span><br><span class="line">1800</span><br><span class="line">1801</span><br><span class="line">1802</span><br><span class="line">1803</span><br><span class="line">1804</span><br><span class="line">1805</span><br><span class="line">1806</span><br><span class="line">1807</span><br><span class="line">1808</span><br><span class="line">1809</span><br><span class="line">1810</span><br><span class="line">1811</span><br><span class="line">1812</span><br><span class="line">1813</span><br><span class="line">1814</span><br><span class="line">1815</span><br><span class="line">1816</span><br><span class="line">1817</span><br><span class="line">1818</span><br><span class="line">1819</span><br><span class="line">1820</span><br><span class="line">1821</span><br><span class="line">1822</span><br><span class="line">1823</span><br><span class="line">1824</span><br><span class="line">1825</span><br><span class="line">1826</span><br><span class="line">1827</span><br><span class="line">1828</span><br><span class="line">1829</span><br><span class="line">1830</span><br><span class="line">1831</span><br><span class="line">1832</span><br><span class="line">1833</span><br><span class="line">1834</span><br><span class="line">1835</span><br><span class="line">1836</span><br><span class="line">1837</span><br><span class="line">1838</span><br><span class="line">1839</span><br><span class="line">1840</span><br><span class="line">1841</span><br><span class="line">1842</span><br><span class="line">1843</span><br><span class="line">1844</span><br><span class="line">1845</span><br><span class="line">1846</span><br><span class="line">1847</span><br><span class="line">1848</span><br><span class="line">1849</span><br><span class="line">1850</span><br><span class="line">1851</span><br><span class="line">1852</span><br><span class="line">1853</span><br><span class="line">1854</span><br><span class="line">1855</span><br><span class="line">1856</span><br><span class="line">1857</span><br><span class="line">1858</span><br><span class="line">1859</span><br><span class="line">1860</span><br><span class="line">1861</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> <span class="hljs-title class_">Vue</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;<br><br><span class="hljs-keyword">const</span> _toString = <span class="hljs-title class_">Object</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">toString</span>;<br><span class="hljs-keyword">const</span> hasOwnProperty = <span class="hljs-title class_">Object</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">hasOwnProperty</span>;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">isFn</span> (fn) &#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-keyword">typeof</span> fn === <span class="hljs-string">&#x27;function&#x27;</span><br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">isStr</span> (str) &#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-keyword">typeof</span> str === <span class="hljs-string">&#x27;string&#x27;</span><br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">isPlainObject</span> (obj) &#123;<br>  <span class="hljs-keyword">return</span> _toString.<span class="hljs-title function_">call</span>(obj) === <span class="hljs-string">&#x27;[object Object]&#x27;</span><br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">hasOwn</span> (obj, key) &#123;<br>  <span class="hljs-keyword">return</span> hasOwnProperty.<span class="hljs-title function_">call</span>(obj, key)<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">noop</span> () &#123;&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Create a cached version of a pure function.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">cached</span> (fn) &#123;<br>  <span class="hljs-keyword">const</span> cache = <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">create</span>(<span class="hljs-literal">null</span>);<br>  <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">cachedFn</span> (str) &#123;<br>    <span class="hljs-keyword">const</span> hit = cache[str];<br>    <span class="hljs-keyword">return</span> hit || (cache[str] = <span class="hljs-title function_">fn</span>(str))<br>  &#125;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Camelize a hyphen-delimited string.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">const</span> camelizeRE = <span class="hljs-regexp">/-(\w)/g</span>;<br><span class="hljs-keyword">const</span> camelize = <span class="hljs-title function_">cached</span>(<span class="hljs-function">(<span class="hljs-params">str</span>) =&gt;</span> &#123;<br>  <span class="hljs-keyword">return</span> str.<span class="hljs-title function_">replace</span>(camelizeRE, <span class="hljs-function">(<span class="hljs-params">_, c</span>) =&gt;</span> c ? c.<span class="hljs-title function_">toUpperCase</span>() : <span class="hljs-string">&#x27;&#x27;</span>)<br>&#125;);<br><br><span class="hljs-keyword">const</span> <span class="hljs-variable constant_">HOOKS</span> = [<br>  <span class="hljs-string">&#x27;invoke&#x27;</span>,<br>  <span class="hljs-string">&#x27;success&#x27;</span>,<br>  <span class="hljs-string">&#x27;fail&#x27;</span>,<br>  <span class="hljs-string">&#x27;complete&#x27;</span>,<br>  <span class="hljs-string">&#x27;returnValue&#x27;</span><br>];<br><br><span class="hljs-keyword">const</span> globalInterceptors = &#123;&#125;;<br><span class="hljs-keyword">const</span> scopedInterceptors = &#123;&#125;;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">mergeHook</span> (parentVal, childVal) &#123;<br>  <span class="hljs-keyword">const</span> res = childVal<br>    ? parentVal<br>      ? parentVal.<span class="hljs-title function_">concat</span>(childVal)<br>      : <span class="hljs-title class_">Array</span>.<span class="hljs-title function_">isArray</span>(childVal)<br>        ? childVal : [childVal]<br>    : parentVal;<br>  <span class="hljs-keyword">return</span> res<br>    ? <span class="hljs-title function_">dedupeHooks</span>(res)<br>    : res<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">dedupeHooks</span> (hooks) &#123;<br>  <span class="hljs-keyword">const</span> res = [];<br>  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; hooks.<span class="hljs-property">length</span>; i++) &#123;<br>    <span class="hljs-keyword">if</span> (res.<span class="hljs-title function_">indexOf</span>(hooks[i]) === -<span class="hljs-number">1</span>) &#123;<br>      res.<span class="hljs-title function_">push</span>(hooks[i]);<br>    &#125;<br>  &#125;<br>  <span class="hljs-keyword">return</span> res<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">removeHook</span> (hooks, hook) &#123;<br>  <span class="hljs-keyword">const</span> index = hooks.<span class="hljs-title function_">indexOf</span>(hook);<br>  <span class="hljs-keyword">if</span> (index !== -<span class="hljs-number">1</span>) &#123;<br>    hooks.<span class="hljs-title function_">splice</span>(index, <span class="hljs-number">1</span>);<br>  &#125;<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">mergeInterceptorHook</span> (interceptor, option) &#123;<br>  <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">keys</span>(option).<span class="hljs-title function_">forEach</span>(<span class="hljs-function"><span class="hljs-params">hook</span> =&gt;</span> &#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-variable constant_">HOOKS</span>.<span class="hljs-title function_">indexOf</span>(hook) !== -<span class="hljs-number">1</span> &amp;&amp; <span class="hljs-title function_">isFn</span>(option[hook])) &#123;<br>      interceptor[hook] = <span class="hljs-title function_">mergeHook</span>(interceptor[hook], option[hook]);<br>    &#125;<br>  &#125;);<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">removeInterceptorHook</span> (interceptor, option) &#123;<br>  <span class="hljs-keyword">if</span> (!interceptor || !option) &#123;<br>    <span class="hljs-keyword">return</span><br>  &#125;<br>  <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">keys</span>(option).<span class="hljs-title function_">forEach</span>(<span class="hljs-function"><span class="hljs-params">hook</span> =&gt;</span> &#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-variable constant_">HOOKS</span>.<span class="hljs-title function_">indexOf</span>(hook) !== -<span class="hljs-number">1</span> &amp;&amp; <span class="hljs-title function_">isFn</span>(option[hook])) &#123;<br>      <span class="hljs-title function_">removeHook</span>(interceptor[hook], option[hook]);<br>    &#125;<br>  &#125;);<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">addInterceptor</span> (method, option) &#123;<br>  <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> method === <span class="hljs-string">&#x27;string&#x27;</span> &amp;&amp; <span class="hljs-title function_">isPlainObject</span>(option)) &#123;<br>    <span class="hljs-title function_">mergeInterceptorHook</span>(scopedInterceptors[method] || (scopedInterceptors[method] = &#123;&#125;), option);<br>  &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-title function_">isPlainObject</span>(method)) &#123;<br>    <span class="hljs-title function_">mergeInterceptorHook</span>(globalInterceptors, method);<br>  &#125;<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">removeInterceptor</span> (method, option) &#123;<br>  <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> method === <span class="hljs-string">&#x27;string&#x27;</span>) &#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-title function_">isPlainObject</span>(option)) &#123;<br>      <span class="hljs-title function_">removeInterceptorHook</span>(scopedInterceptors[method], option);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      <span class="hljs-keyword">delete</span> scopedInterceptors[method];<br>    &#125;<br>  &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-title function_">isPlainObject</span>(method)) &#123;<br>    <span class="hljs-title function_">removeInterceptorHook</span>(globalInterceptors, method);<br>  &#125;<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">wrapperHook</span> (hook) &#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">data</span>) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">hook</span>(data) || data<br>  &#125;<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">isPromise</span> (obj) &#123;<br>  <span class="hljs-keyword">return</span> !!obj &amp;&amp; (<span class="hljs-keyword">typeof</span> obj === <span class="hljs-string">&#x27;object&#x27;</span> || <span class="hljs-keyword">typeof</span> obj === <span class="hljs-string">&#x27;function&#x27;</span>) &amp;&amp; <span class="hljs-keyword">typeof</span> obj.<span class="hljs-property">then</span> === <span class="hljs-string">&#x27;function&#x27;</span><br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">queue</span> (hooks, data) &#123;<br>  <span class="hljs-keyword">let</span> promise = <span class="hljs-literal">false</span>;<br>  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; hooks.<span class="hljs-property">length</span>; i++) &#123;<br>    <span class="hljs-keyword">const</span> hook = hooks[i];<br>    <span class="hljs-keyword">if</span> (promise) &#123;<br>      promise = <span class="hljs-title class_">Promise</span>.<span class="hljs-title function_">resolve</span>(<span class="hljs-title function_">wrapperHook</span>(hook));<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      <span class="hljs-keyword">const</span> res = <span class="hljs-title function_">hook</span>(data);<br>      <span class="hljs-keyword">if</span> (<span class="hljs-title function_">isPromise</span>(res)) &#123;<br>        promise = <span class="hljs-title class_">Promise</span>.<span class="hljs-title function_">resolve</span>(res);<br>      &#125;<br>      <span class="hljs-keyword">if</span> (res === <span class="hljs-literal">false</span>) &#123;<br>        <span class="hljs-keyword">return</span> &#123;<br>          then () &#123;&#125;<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>  <span class="hljs-keyword">return</span> promise || &#123;<br>    then (callback) &#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-title function_">callback</span>(data)<br>    &#125;<br>  &#125;<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">wrapperOptions</span> (interceptor, options = &#123;&#125;) &#123;<br>  [<span class="hljs-string">&#x27;success&#x27;</span>, <span class="hljs-string">&#x27;fail&#x27;</span>, <span class="hljs-string">&#x27;complete&#x27;</span>].<span class="hljs-title function_">forEach</span>(<span class="hljs-function"><span class="hljs-params">name</span> =&gt;</span> &#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-title class_">Array</span>.<span class="hljs-title function_">isArray</span>(interceptor[name])) &#123;<br>      <span class="hljs-keyword">const</span> oldCallback = options[name];<br>      options[name] = <span class="hljs-keyword">function</span> <span class="hljs-title function_">callbackInterceptor</span> (res) &#123;<br>        <span class="hljs-title function_">queue</span>(interceptor[name], res).<span class="hljs-title function_">then</span>(<span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;<br>          <span class="hljs-comment">/* eslint-disable no-mixed-operators */</span><br>          <span class="hljs-keyword">return</span> <span class="hljs-title function_">isFn</span>(oldCallback) &amp;&amp; <span class="hljs-title function_">oldCallback</span>(res) || res<br>        &#125;);<br>      &#125;;<br>    &#125;<br>  &#125;);<br>  <span class="hljs-keyword">return</span> options<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">wrapperReturnValue</span> (method, returnValue) &#123;<br>  <span class="hljs-keyword">const</span> returnValueHooks = [];<br>  <span class="hljs-keyword">if</span> (<span class="hljs-title class_">Array</span>.<span class="hljs-title function_">isArray</span>(globalInterceptors.<span class="hljs-property">returnValue</span>)) &#123;<br>    returnValueHooks.<span class="hljs-title function_">push</span>(...globalInterceptors.<span class="hljs-property">returnValue</span>);<br>  &#125;<br>  <span class="hljs-keyword">const</span> interceptor = scopedInterceptors[method];<br>  <span class="hljs-keyword">if</span> (interceptor &amp;&amp; <span class="hljs-title class_">Array</span>.<span class="hljs-title function_">isArray</span>(interceptor.<span class="hljs-property">returnValue</span>)) &#123;<br>    returnValueHooks.<span class="hljs-title function_">push</span>(...interceptor.<span class="hljs-property">returnValue</span>);<br>  &#125;<br>  returnValueHooks.<span class="hljs-title function_">forEach</span>(<span class="hljs-function"><span class="hljs-params">hook</span> =&gt;</span> &#123;<br>    returnValue = <span class="hljs-title function_">hook</span>(returnValue) || returnValue;<br>  &#125;);<br>  <span class="hljs-keyword">return</span> returnValue<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">getApiInterceptorHooks</span> (method) &#123;<br>  <span class="hljs-keyword">const</span> interceptor = <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">create</span>(<span class="hljs-literal">null</span>);<br>  <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">keys</span>(globalInterceptors).<span class="hljs-title function_">forEach</span>(<span class="hljs-function"><span class="hljs-params">hook</span> =&gt;</span> &#123;<br>    <span class="hljs-keyword">if</span> (hook !== <span class="hljs-string">&#x27;returnValue&#x27;</span>) &#123;<br>      interceptor[hook] = globalInterceptors[hook].<span class="hljs-title function_">slice</span>();<br>    &#125;<br>  &#125;);<br>  <span class="hljs-keyword">const</span> scopedInterceptor = scopedInterceptors[method];<br>  <span class="hljs-keyword">if</span> (scopedInterceptor) &#123;<br>    <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">keys</span>(scopedInterceptor).<span class="hljs-title function_">forEach</span>(<span class="hljs-function"><span class="hljs-params">hook</span> =&gt;</span> &#123;<br>      <span class="hljs-keyword">if</span> (hook !== <span class="hljs-string">&#x27;returnValue&#x27;</span>) &#123;<br>        interceptor[hook] = (interceptor[hook] || []).<span class="hljs-title function_">concat</span>(scopedInterceptor[hook]);<br>      &#125;<br>    &#125;);<br>  &#125;<br>  <span class="hljs-keyword">return</span> interceptor<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">invokeApi</span> (method, api, options, ...params) &#123;<br>  <span class="hljs-keyword">const</span> interceptor = <span class="hljs-title function_">getApiInterceptorHooks</span>(method);<br>  <span class="hljs-keyword">if</span> (interceptor &amp;&amp; <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">keys</span>(interceptor).<span class="hljs-property">length</span>) &#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-title class_">Array</span>.<span class="hljs-title function_">isArray</span>(interceptor.<span class="hljs-property">invoke</span>)) &#123;<br>      <span class="hljs-keyword">const</span> res = <span class="hljs-title function_">queue</span>(interceptor.<span class="hljs-property">invoke</span>, options);<br>      <span class="hljs-keyword">return</span> res.<span class="hljs-title function_">then</span>(<span class="hljs-function">(<span class="hljs-params">options</span>) =&gt;</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-title function_">api</span>(<span class="hljs-title function_">wrapperOptions</span>(interceptor, options), ...params)<br>      &#125;)<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-title function_">api</span>(<span class="hljs-title function_">wrapperOptions</span>(interceptor, options), ...params)<br>    &#125;<br>  &#125;<br>  <span class="hljs-keyword">return</span> <span class="hljs-title function_">api</span>(options, ...params)<br>&#125;<br><br><span class="hljs-keyword">const</span> promiseInterceptor = &#123;<br>  returnValue (res) &#123;<br>    <span class="hljs-keyword">if</span> (!<span class="hljs-title function_">isPromise</span>(res)) &#123;<br>      <span class="hljs-keyword">return</span> res<br>    &#125;<br>    <span class="hljs-keyword">return</span> res.<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123;<br>      <span class="hljs-keyword">return</span> res[<span class="hljs-number">1</span>]<br>    &#125;).<span class="hljs-title function_">catch</span>(<span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123;<br>      <span class="hljs-keyword">return</span> res[<span class="hljs-number">0</span>]<br>    &#125;)<br>  &#125;<br>&#125;;<br><br><span class="hljs-keyword">const</span> <span class="hljs-variable constant_">SYNC_API_RE</span> =<br>  <span class="hljs-regexp">/^\$|Window$|WindowStyle$|sendNativeEvent|restoreGlobal|getCurrentSubNVue|getMenuButtonBoundingClientRect|^report|interceptors|Interceptor$|getSubNVueById|requireNativePlugin|upx2px|hideKeyboard|canIUse|^create|Sync$|Manager$|base64ToArrayBuffer|arrayBufferToBase64/</span>;<br><br><span class="hljs-keyword">const</span> <span class="hljs-variable constant_">CONTEXT_API_RE</span> = <span class="hljs-regexp">/^create|Manager$/</span>;<br><br><span class="hljs-comment">// Context例外情况</span><br><span class="hljs-keyword">const</span> <span class="hljs-variable constant_">CONTEXT_API_RE_EXC</span> = [<span class="hljs-string">&#x27;createBLEConnection&#x27;</span>];<br><br><span class="hljs-comment">// 同步例外情况</span><br><span class="hljs-keyword">const</span> <span class="hljs-variable constant_">ASYNC_API</span> = [<span class="hljs-string">&#x27;createBLEConnection&#x27;</span>];<br><br><span class="hljs-keyword">const</span> <span class="hljs-variable constant_">CALLBACK_API_RE</span> = <span class="hljs-regexp">/^on|^off/</span>;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">isContextApi</span> (name) &#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-variable constant_">CONTEXT_API_RE</span>.<span class="hljs-title function_">test</span>(name) &amp;&amp; <span class="hljs-variable constant_">CONTEXT_API_RE_EXC</span>.<span class="hljs-title function_">indexOf</span>(name) === -<span class="hljs-number">1</span><br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">isSyncApi</span> (name) &#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-variable constant_">SYNC_API_RE</span>.<span class="hljs-title function_">test</span>(name) &amp;&amp; <span class="hljs-variable constant_">ASYNC_API</span>.<span class="hljs-title function_">indexOf</span>(name) === -<span class="hljs-number">1</span><br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">isCallbackApi</span> (name) &#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-variable constant_">CALLBACK_API_RE</span>.<span class="hljs-title function_">test</span>(name) &amp;&amp; name !== <span class="hljs-string">&#x27;onPush&#x27;</span><br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">handlePromise</span> (promise) &#123;<br>  <span class="hljs-keyword">return</span> promise.<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">data</span> =&gt;</span> &#123;<br>    <span class="hljs-keyword">return</span> [<span class="hljs-literal">null</span>, data]<br>  &#125;)<br>    .<span class="hljs-title function_">catch</span>(<span class="hljs-function"><span class="hljs-params">err</span> =&gt;</span> [err])<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">shouldPromise</span> (name) &#123;<br>  <span class="hljs-keyword">if</span> (<br>    <span class="hljs-title function_">isContextApi</span>(name) ||<br>    <span class="hljs-title function_">isSyncApi</span>(name) ||<br>    <span class="hljs-title function_">isCallbackApi</span>(name)<br>  ) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span><br>  &#125;<br>  <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span><br>&#125;<br><br><span class="hljs-comment">/* eslint-disable no-extend-native */</span><br><span class="hljs-keyword">if</span> (!<span class="hljs-title class_">Promise</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">finally</span>) &#123;<br>  <span class="hljs-title class_">Promise</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">finally</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params">callback</span>) &#123;<br>    <span class="hljs-keyword">const</span> promise = <span class="hljs-variable language_">this</span>.<span class="hljs-property">constructor</span>;<br>    <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">then</span>(<br>      <span class="hljs-function"><span class="hljs-params">value</span> =&gt;</span> promise.<span class="hljs-title function_">resolve</span>(<span class="hljs-title function_">callback</span>()).<span class="hljs-title function_">then</span>(<span class="hljs-function">() =&gt;</span> value),<br>      <span class="hljs-function"><span class="hljs-params">reason</span> =&gt;</span> promise.<span class="hljs-title function_">resolve</span>(<span class="hljs-title function_">callback</span>()).<span class="hljs-title function_">then</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>        <span class="hljs-keyword">throw</span> reason<br>      &#125;)<br>    )<br>  &#125;;<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">promisify</span> (name, api) &#123;<br>  <span class="hljs-keyword">if</span> (!<span class="hljs-title function_">shouldPromise</span>(name)) &#123;<br>    <span class="hljs-keyword">return</span> api<br>  &#125;<br>  <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">promiseApi</span> (options = &#123;&#125;, ...params) &#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-title function_">isFn</span>(options.<span class="hljs-property">success</span>) || <span class="hljs-title function_">isFn</span>(options.<span class="hljs-property">fail</span>) || <span class="hljs-title function_">isFn</span>(options.<span class="hljs-property">complete</span>)) &#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-title function_">wrapperReturnValue</span>(name, <span class="hljs-title function_">invokeApi</span>(name, api, options, ...params))<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">wrapperReturnValue</span>(name, <span class="hljs-title function_">handlePromise</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> &#123;<br>      <span class="hljs-title function_">invokeApi</span>(name, api, <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">assign</span>(&#123;&#125;, options, &#123;<br>        <span class="hljs-attr">success</span>: resolve,<br>        <span class="hljs-attr">fail</span>: reject<br>      &#125;), ...params);<br>    &#125;)))<br>  &#125;<br>&#125;<br><br><span class="hljs-keyword">const</span> <span class="hljs-variable constant_">EPS</span> = <span class="hljs-number">1e-4</span>;<br><span class="hljs-keyword">const</span> <span class="hljs-variable constant_">BASE_DEVICE_WIDTH</span> = <span class="hljs-number">750</span>;<br><span class="hljs-keyword">let</span> isIOS = <span class="hljs-literal">false</span>;<br><span class="hljs-keyword">let</span> deviceWidth = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">let</span> deviceDPR = <span class="hljs-number">0</span>;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">checkDeviceWidth</span> () &#123;<br>  <span class="hljs-keyword">const</span> &#123;<br>    platform,<br>    pixelRatio,<br>    windowWidth<br>  &#125; = wx.<span class="hljs-title function_">getSystemInfoSync</span>(); <span class="hljs-comment">// uni=&gt;wx runtime 编译目标是 uni 对象，内部不允许直接使用 uni</span><br><br>  deviceWidth = windowWidth;<br>  deviceDPR = pixelRatio;<br>  isIOS = platform === <span class="hljs-string">&#x27;ios&#x27;</span>;<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">upx2px</span> (number, newDeviceWidth) &#123;<br>  <span class="hljs-keyword">if</span> (deviceWidth === <span class="hljs-number">0</span>) &#123;<br>    <span class="hljs-title function_">checkDeviceWidth</span>();<br>  &#125;<br><br>  number = <span class="hljs-title class_">Number</span>(number);<br>  <span class="hljs-keyword">if</span> (number === <span class="hljs-number">0</span>) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span><br>  &#125;<br>  <span class="hljs-keyword">let</span> result = (number / <span class="hljs-variable constant_">BASE_DEVICE_WIDTH</span>) * (newDeviceWidth || deviceWidth);<br>  <span class="hljs-keyword">if</span> (result &lt; <span class="hljs-number">0</span>) &#123;<br>    result = -result;<br>  &#125;<br>  result = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(result + <span class="hljs-variable constant_">EPS</span>);<br>  <span class="hljs-keyword">if</span> (result === <span class="hljs-number">0</span>) &#123;<br>    <span class="hljs-keyword">if</span> (deviceDPR === <span class="hljs-number">1</span> || !isIOS) &#123;<br>      result = <span class="hljs-number">1</span>;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      result = <span class="hljs-number">0.5</span>;<br>    &#125;<br>  &#125;<br>  <span class="hljs-keyword">return</span> number &lt; <span class="hljs-number">0</span> ? -result : result<br>&#125;<br><br><span class="hljs-keyword">const</span> interceptors = &#123;<br>  promiseInterceptor<br>&#125;;<br><br><span class="hljs-keyword">var</span> baseApi = <span class="hljs-comment">/*#__PURE__*/</span><span class="hljs-title class_">Object</span>.<span class="hljs-title function_">freeze</span>(&#123;<br>  <span class="hljs-attr">__proto__</span>: <span class="hljs-literal">null</span>,<br>  <span class="hljs-attr">upx2px</span>: upx2px,<br>  <span class="hljs-attr">addInterceptor</span>: addInterceptor,<br>  <span class="hljs-attr">removeInterceptor</span>: removeInterceptor,<br>  <span class="hljs-attr">interceptors</span>: interceptors<br>&#125;);<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">findExistsPageIndex</span> (url) &#123;<br>  <span class="hljs-keyword">const</span> pages = <span class="hljs-title function_">getCurrentPages</span>();<br>  <span class="hljs-keyword">let</span> len = pages.<span class="hljs-property">length</span>;<br>  <span class="hljs-keyword">while</span> (len--) &#123;<br>    <span class="hljs-keyword">const</span> page = pages[len];<br>    <span class="hljs-keyword">if</span> (page.<span class="hljs-property">$page</span> &amp;&amp; page.<span class="hljs-property">$page</span>.<span class="hljs-property">fullPath</span> === url) &#123;<br>      <span class="hljs-keyword">return</span> len<br>    &#125;<br>  &#125;<br>  <span class="hljs-keyword">return</span> -<span class="hljs-number">1</span><br>&#125;<br><br><span class="hljs-keyword">var</span> redirectTo = &#123;<br>  name (fromArgs) &#123;<br>    <span class="hljs-keyword">if</span> (fromArgs.<span class="hljs-property">exists</span> === <span class="hljs-string">&#x27;back&#x27;</span> &amp;&amp; fromArgs.<span class="hljs-property">delta</span>) &#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;navigateBack&#x27;</span><br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;redirectTo&#x27;</span><br>  &#125;,<br>  args (fromArgs) &#123;<br>    <span class="hljs-keyword">if</span> (fromArgs.<span class="hljs-property">exists</span> === <span class="hljs-string">&#x27;back&#x27;</span> &amp;&amp; fromArgs.<span class="hljs-property">url</span>) &#123;<br>      <span class="hljs-keyword">const</span> existsPageIndex = <span class="hljs-title function_">findExistsPageIndex</span>(fromArgs.<span class="hljs-property">url</span>);<br>      <span class="hljs-keyword">if</span> (existsPageIndex !== -<span class="hljs-number">1</span>) &#123;<br>        <span class="hljs-keyword">const</span> delta = <span class="hljs-title function_">getCurrentPages</span>().<span class="hljs-property">length</span> - <span class="hljs-number">1</span> - existsPageIndex;<br>        <span class="hljs-keyword">if</span> (delta &gt; <span class="hljs-number">0</span>) &#123;<br>          fromArgs.<span class="hljs-property">delta</span> = delta;<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;;<br><br><span class="hljs-keyword">var</span> previewImage = &#123;<br>  args (fromArgs) &#123;<br>    <span class="hljs-keyword">let</span> currentIndex = <span class="hljs-built_in">parseInt</span>(fromArgs.<span class="hljs-property">current</span>);<br>    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">isNaN</span>(currentIndex)) &#123;<br>      <span class="hljs-keyword">return</span><br>    &#125;<br>    <span class="hljs-keyword">const</span> urls = fromArgs.<span class="hljs-property">urls</span>;<br>    <span class="hljs-keyword">if</span> (!<span class="hljs-title class_">Array</span>.<span class="hljs-title function_">isArray</span>(urls)) &#123;<br>      <span class="hljs-keyword">return</span><br>    &#125;<br>    <span class="hljs-keyword">const</span> len = urls.<span class="hljs-property">length</span>;<br>    <span class="hljs-keyword">if</span> (!len) &#123;<br>      <span class="hljs-keyword">return</span><br>    &#125;<br>    <span class="hljs-keyword">if</span> (currentIndex &lt; <span class="hljs-number">0</span>) &#123;<br>      currentIndex = <span class="hljs-number">0</span>;<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (currentIndex &gt;= len) &#123;<br>      currentIndex = len - <span class="hljs-number">1</span>;<br>    &#125;<br>    <span class="hljs-keyword">if</span> (currentIndex &gt; <span class="hljs-number">0</span>) &#123;<br>      fromArgs.<span class="hljs-property">current</span> = urls[currentIndex];<br>      fromArgs.<span class="hljs-property">urls</span> = urls.<span class="hljs-title function_">filter</span>(<br>        <span class="hljs-function">(<span class="hljs-params">item, index</span>) =&gt;</span> index &lt; currentIndex ? item !== urls[currentIndex] : <span class="hljs-literal">true</span><br>      );<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      fromArgs.<span class="hljs-property">current</span> = urls[<span class="hljs-number">0</span>];<br>    &#125;<br>    <span class="hljs-keyword">return</span> &#123;<br>      <span class="hljs-attr">indicator</span>: <span class="hljs-literal">false</span>,<br>      <span class="hljs-attr">loop</span>: <span class="hljs-literal">false</span><br>    &#125;<br>  &#125;<br>&#125;;<br><br><span class="hljs-keyword">const</span> <span class="hljs-variable constant_">UUID_KEY</span> = <span class="hljs-string">&#x27;__DC_STAT_UUID&#x27;</span>;<br><span class="hljs-keyword">let</span> deviceId;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">addUuid</span> (result) &#123;<br>  deviceId = deviceId || wx.<span class="hljs-title function_">getStorageSync</span>(<span class="hljs-variable constant_">UUID_KEY</span>);<br>  <span class="hljs-keyword">if</span> (!deviceId) &#123;<br>    deviceId = <span class="hljs-title class_">Date</span>.<span class="hljs-title function_">now</span>() + <span class="hljs-string">&#x27;&#x27;</span> + <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>() * <span class="hljs-number">1e7</span>);<br>    wx.<span class="hljs-title function_">setStorage</span>(&#123;<br>      <span class="hljs-attr">key</span>: <span class="hljs-variable constant_">UUID_KEY</span>,<br>      <span class="hljs-attr">data</span>: deviceId<br>    &#125;);<br>  &#125;<br>  result.<span class="hljs-property">deviceId</span> = deviceId;<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">addSafeAreaInsets</span> (result) &#123;<br>  <span class="hljs-keyword">if</span> (result.<span class="hljs-property">safeArea</span>) &#123;<br>    <span class="hljs-keyword">const</span> safeArea = result.<span class="hljs-property">safeArea</span>;<br>    result.<span class="hljs-property">safeAreaInsets</span> = &#123;<br>      <span class="hljs-attr">top</span>: safeArea.<span class="hljs-property">top</span>,<br>      <span class="hljs-attr">left</span>: safeArea.<span class="hljs-property">left</span>,<br>      <span class="hljs-attr">right</span>: result.<span class="hljs-property">windowWidth</span> - safeArea.<span class="hljs-property">right</span>,<br>      <span class="hljs-attr">bottom</span>: result.<span class="hljs-property">windowHeight</span> - safeArea.<span class="hljs-property">bottom</span><br>    &#125;;<br>  &#125;<br>&#125;<br><br><span class="hljs-keyword">var</span> getSystemInfo = &#123;<br>  <span class="hljs-attr">returnValue</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">result</span>) &#123;<br>    <span class="hljs-title function_">addUuid</span>(result);<br>    <span class="hljs-title function_">addSafeAreaInsets</span>(result);<br>  &#125;<br>&#125;;<br><br><span class="hljs-comment">// import navigateTo from &#x27;uni-helpers/navigate-to&#x27;</span><br><br><span class="hljs-keyword">const</span> protocols = &#123;<br>  redirectTo,<br>  <span class="hljs-comment">// navigateTo,  // 由于在微信开发者工具的页面参数，会显示__id__参数，因此暂时关闭mp-weixin对于navigateTo的AOP</span><br>  previewImage,<br>  getSystemInfo,<br>  <span class="hljs-attr">getSystemInfoSync</span>: getSystemInfo<br>&#125;;<br><span class="hljs-keyword">const</span> todos = [<br>  <span class="hljs-string">&#x27;vibrate&#x27;</span>,<br>  <span class="hljs-string">&#x27;preloadPage&#x27;</span>,<br>  <span class="hljs-string">&#x27;unPreloadPage&#x27;</span>,<br>  <span class="hljs-string">&#x27;loadSubPackage&#x27;</span><br>];<br><span class="hljs-keyword">const</span> canIUses = [];<br><br><span class="hljs-keyword">const</span> <span class="hljs-variable constant_">CALLBACKS</span> = [<span class="hljs-string">&#x27;success&#x27;</span>, <span class="hljs-string">&#x27;fail&#x27;</span>, <span class="hljs-string">&#x27;cancel&#x27;</span>, <span class="hljs-string">&#x27;complete&#x27;</span>];<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">processCallback</span> (methodName, method, returnValue) &#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">res</span>) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">method</span>(<span class="hljs-title function_">processReturnValue</span>(methodName, res, returnValue))<br>  &#125;<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">processArgs</span> (methodName, fromArgs, argsOption = &#123;&#125;, returnValue = &#123;&#125;, keepFromArgs = <span class="hljs-literal">false</span>) &#123;<br>  <span class="hljs-keyword">if</span> (<span class="hljs-title function_">isPlainObject</span>(fromArgs)) &#123; <span class="hljs-comment">// 一般 api 的参数解析</span><br>    <span class="hljs-keyword">const</span> toArgs = keepFromArgs === <span class="hljs-literal">true</span> ? fromArgs : &#123;&#125;; <span class="hljs-comment">// returnValue 为 false 时，说明是格式化返回值，直接在返回值对象上修改赋值</span><br>    <span class="hljs-keyword">if</span> (<span class="hljs-title function_">isFn</span>(argsOption)) &#123;<br>      argsOption = <span class="hljs-title function_">argsOption</span>(fromArgs, toArgs) || &#123;&#125;;<br>    &#125;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">const</span> key <span class="hljs-keyword">in</span> fromArgs) &#123;<br>      <span class="hljs-keyword">if</span> (<span class="hljs-title function_">hasOwn</span>(argsOption, key)) &#123;<br>        <span class="hljs-keyword">let</span> keyOption = argsOption[key];<br>        <span class="hljs-keyword">if</span> (<span class="hljs-title function_">isFn</span>(keyOption)) &#123;<br>          keyOption = <span class="hljs-title function_">keyOption</span>(fromArgs[key], fromArgs, toArgs);<br>        &#125;<br>        <span class="hljs-keyword">if</span> (!keyOption) &#123; <span class="hljs-comment">// 不支持的参数</span><br>          <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">warn</span>(<span class="hljs-string">`The &#x27;<span class="hljs-subst">$&#123;methodName&#125;</span>&#x27; method of platform &#x27;微信小程序&#x27; does not support option &#x27;<span class="hljs-subst">$&#123;key&#125;</span>&#x27;`</span>);<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-title function_">isStr</span>(keyOption)) &#123; <span class="hljs-comment">// 重写参数 key</span><br>          toArgs[keyOption] = fromArgs[key];<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-title function_">isPlainObject</span>(keyOption)) &#123; <span class="hljs-comment">// &#123;name:newName,value:value&#125;可重新指定参数 key:value</span><br>          toArgs[keyOption.<span class="hljs-property">name</span> ? keyOption.<span class="hljs-property">name</span> : key] = keyOption.<span class="hljs-property">value</span>;<br>        &#125;<br>      &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-variable constant_">CALLBACKS</span>.<span class="hljs-title function_">indexOf</span>(key) !== -<span class="hljs-number">1</span>) &#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-title function_">isFn</span>(fromArgs[key])) &#123;<br>          toArgs[key] = <span class="hljs-title function_">processCallback</span>(methodName, fromArgs[key], returnValue);<br>        &#125;<br>      &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">if</span> (!keepFromArgs) &#123;<br>          toArgs[key] = fromArgs[key];<br>        &#125;<br>      &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> toArgs<br>  &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-title function_">isFn</span>(fromArgs)) &#123;<br>    fromArgs = <span class="hljs-title function_">processCallback</span>(methodName, fromArgs, returnValue);<br>  &#125;<br>  <span class="hljs-keyword">return</span> fromArgs<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">processReturnValue</span> (methodName, res, returnValue, keepReturnValue = <span class="hljs-literal">false</span>) &#123;<br>  <span class="hljs-keyword">if</span> (<span class="hljs-title function_">isFn</span>(protocols.<span class="hljs-property">returnValue</span>)) &#123; <span class="hljs-comment">// 处理通用 returnValue</span><br>    res = protocols.<span class="hljs-title function_">returnValue</span>(methodName, res);<br>  &#125;<br>  <span class="hljs-keyword">return</span> <span class="hljs-title function_">processArgs</span>(methodName, res, returnValue, &#123;&#125;, keepReturnValue)<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">wrapper</span> (methodName, method) &#123;<br>  <span class="hljs-keyword">if</span> (<span class="hljs-title function_">hasOwn</span>(protocols, methodName)) &#123;<br>    <span class="hljs-keyword">const</span> protocol = protocols[methodName];<br>    <span class="hljs-keyword">if</span> (!protocol) &#123; <span class="hljs-comment">// 暂不支持的 api</span><br>      <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">error</span>(<span class="hljs-string">`Platform &#x27;微信小程序&#x27; does not support &#x27;<span class="hljs-subst">$&#123;methodName&#125;</span>&#x27;.`</span>);<br>      &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">arg1, arg2</span>) &#123; <span class="hljs-comment">// 目前 api 最多两个参数</span><br>      <span class="hljs-keyword">let</span> options = protocol;<br>      <span class="hljs-keyword">if</span> (<span class="hljs-title function_">isFn</span>(protocol)) &#123;<br>        options = <span class="hljs-title function_">protocol</span>(arg1);<br>      &#125;<br><br>      arg1 = <span class="hljs-title function_">processArgs</span>(methodName, arg1, options.<span class="hljs-property">args</span>, options.<span class="hljs-property">returnValue</span>);<br><br>      <span class="hljs-keyword">const</span> args = [arg1];<br>      <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> arg2 !== <span class="hljs-string">&#x27;undefined&#x27;</span>) &#123;<br>        args.<span class="hljs-title function_">push</span>(arg2);<br>      &#125;<br>      <span class="hljs-keyword">if</span> (<span class="hljs-title function_">isFn</span>(options.<span class="hljs-property">name</span>)) &#123;<br>        methodName = options.<span class="hljs-title function_">name</span>(arg1);<br>      &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-title function_">isStr</span>(options.<span class="hljs-property">name</span>)) &#123;<br>        methodName = options.<span class="hljs-property">name</span>;<br>      &#125;<br>      <span class="hljs-keyword">const</span> returnValue = wx[methodName].<span class="hljs-title function_">apply</span>(wx, args);<br>      <span class="hljs-keyword">if</span> (<span class="hljs-title function_">isSyncApi</span>(methodName)) &#123; <span class="hljs-comment">// 同步 api</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-title function_">processReturnValue</span>(methodName, returnValue, options.<span class="hljs-property">returnValue</span>, <span class="hljs-title function_">isContextApi</span>(methodName))<br>      &#125;<br>      <span class="hljs-keyword">return</span> returnValue<br>    &#125;<br>  &#125;<br>  <span class="hljs-keyword">return</span> method<br>&#125;<br><br><span class="hljs-keyword">const</span> todoApis = <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">create</span>(<span class="hljs-literal">null</span>);<br><br><span class="hljs-keyword">const</span> <span class="hljs-variable constant_">TODOS</span> = [<br>  <span class="hljs-string">&#x27;onTabBarMidButtonTap&#x27;</span>,<br>  <span class="hljs-string">&#x27;subscribePush&#x27;</span>,<br>  <span class="hljs-string">&#x27;unsubscribePush&#x27;</span>,<br>  <span class="hljs-string">&#x27;onPush&#x27;</span>,<br>  <span class="hljs-string">&#x27;offPush&#x27;</span>,<br>  <span class="hljs-string">&#x27;share&#x27;</span><br>];<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">createTodoApi</span> (name) &#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">todoApi</span> (&#123;<br>    fail,<br>    complete<br>  &#125;) &#123;<br>    <span class="hljs-keyword">const</span> res = &#123;<br>      <span class="hljs-attr">errMsg</span>: <span class="hljs-string">`<span class="hljs-subst">$&#123;name&#125;</span>:fail method &#x27;<span class="hljs-subst">$&#123;name&#125;</span>&#x27; not supported`</span><br>    &#125;;<br>    <span class="hljs-title function_">isFn</span>(fail) &amp;&amp; <span class="hljs-title function_">fail</span>(res);<br>    <span class="hljs-title function_">isFn</span>(complete) &amp;&amp; <span class="hljs-title function_">complete</span>(res);<br>  &#125;<br>&#125;<br><br><span class="hljs-variable constant_">TODOS</span>.<span class="hljs-title function_">forEach</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">name</span>) &#123;<br>  todoApis[name] = <span class="hljs-title function_">createTodoApi</span>(name);<br>&#125;);<br><br><span class="hljs-keyword">var</span> providers = &#123;<br>  <span class="hljs-attr">oauth</span>: [<span class="hljs-string">&#x27;weixin&#x27;</span>],<br>  <span class="hljs-attr">share</span>: [<span class="hljs-string">&#x27;weixin&#x27;</span>],<br>  <span class="hljs-attr">payment</span>: [<span class="hljs-string">&#x27;wxpay&#x27;</span>],<br>  <span class="hljs-attr">push</span>: [<span class="hljs-string">&#x27;weixin&#x27;</span>]<br>&#125;;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">getProvider</span> (&#123;<br>  service,<br>  success,<br>  fail,<br>  complete<br>&#125;) &#123;<br>  <span class="hljs-keyword">let</span> res = <span class="hljs-literal">false</span>;<br>  <span class="hljs-keyword">if</span> (providers[service]) &#123;<br>    res = &#123;<br>      <span class="hljs-attr">errMsg</span>: <span class="hljs-string">&#x27;getProvider:ok&#x27;</span>,<br>      service,<br>      <span class="hljs-attr">provider</span>: providers[service]<br>    &#125;;<br>    <span class="hljs-title function_">isFn</span>(success) &amp;&amp; <span class="hljs-title function_">success</span>(res);<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    res = &#123;<br>      <span class="hljs-attr">errMsg</span>: <span class="hljs-string">&#x27;getProvider:fail service not found&#x27;</span><br>    &#125;;<br>    <span class="hljs-title function_">isFn</span>(fail) &amp;&amp; <span class="hljs-title function_">fail</span>(res);<br>  &#125;<br>  <span class="hljs-title function_">isFn</span>(complete) &amp;&amp; <span class="hljs-title function_">complete</span>(res);<br>&#125;<br><br><span class="hljs-keyword">var</span> extraApi = <span class="hljs-comment">/*#__PURE__*/</span><span class="hljs-title class_">Object</span>.<span class="hljs-title function_">freeze</span>(&#123;<br>  <span class="hljs-attr">__proto__</span>: <span class="hljs-literal">null</span>,<br>  <span class="hljs-attr">getProvider</span>: getProvider<br>&#125;);<br><br><span class="hljs-keyword">const</span> getEmitter = (<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-keyword">let</span> <span class="hljs-title class_">Emitter</span>;<br>  <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">getUniEmitter</span> () &#123;<br>    <span class="hljs-keyword">if</span> (!<span class="hljs-title class_">Emitter</span>) &#123;<br>      <span class="hljs-title class_">Emitter</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title class_">Emitter</span><br>  &#125;<br>&#125;)();<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">apply</span> (ctx, method, args) &#123;<br>  <span class="hljs-keyword">return</span> ctx[method].<span class="hljs-title function_">apply</span>(ctx, args)<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">$on</span> () &#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-title function_">apply</span>(<span class="hljs-title function_">getEmitter</span>(), <span class="hljs-string">&#x27;$on&#x27;</span>, [...<span class="hljs-variable language_">arguments</span>])<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">$off</span> () &#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-title function_">apply</span>(<span class="hljs-title function_">getEmitter</span>(), <span class="hljs-string">&#x27;$off&#x27;</span>, [...<span class="hljs-variable language_">arguments</span>])<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">$once</span> () &#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-title function_">apply</span>(<span class="hljs-title function_">getEmitter</span>(), <span class="hljs-string">&#x27;$once&#x27;</span>, [...<span class="hljs-variable language_">arguments</span>])<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">$emit</span> () &#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-title function_">apply</span>(<span class="hljs-title function_">getEmitter</span>(), <span class="hljs-string">&#x27;$emit&#x27;</span>, [...<span class="hljs-variable language_">arguments</span>])<br>&#125;<br><br><span class="hljs-keyword">var</span> eventApi = <span class="hljs-comment">/*#__PURE__*/</span><span class="hljs-title class_">Object</span>.<span class="hljs-title function_">freeze</span>(&#123;<br>  <span class="hljs-attr">__proto__</span>: <span class="hljs-literal">null</span>,<br>  <span class="hljs-attr">$on</span>: $on,<br>  <span class="hljs-attr">$off</span>: $off,<br>  <span class="hljs-attr">$once</span>: $once,<br>  <span class="hljs-attr">$emit</span>: $emit<br>&#125;);<br><br><span class="hljs-keyword">var</span> api = <span class="hljs-comment">/*#__PURE__*/</span><span class="hljs-title class_">Object</span>.<span class="hljs-title function_">freeze</span>(&#123;<br>  <span class="hljs-attr">__proto__</span>: <span class="hljs-literal">null</span><br>&#125;);<br><br><span class="hljs-keyword">const</span> <span class="hljs-title class_">MPPage</span> = <span class="hljs-title class_">Page</span>;<br><span class="hljs-keyword">const</span> <span class="hljs-title class_">MPComponent</span> = <span class="hljs-title class_">Component</span>;<br><br><span class="hljs-keyword">const</span> customizeRE = <span class="hljs-regexp">/:/g</span>;<br><br><span class="hljs-keyword">const</span> customize = <span class="hljs-title function_">cached</span>(<span class="hljs-function">(<span class="hljs-params">str</span>) =&gt;</span> &#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-title function_">camelize</span>(str.<span class="hljs-title function_">replace</span>(customizeRE, <span class="hljs-string">&#x27;-&#x27;</span>))<br>&#125;);<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">initTriggerEvent</span> (mpInstance) &#123;<br>  &#123;<br>    <span class="hljs-keyword">if</span> (!wx.<span class="hljs-property">canIUse</span> || !wx.<span class="hljs-title function_">canIUse</span>(<span class="hljs-string">&#x27;nextTick&#x27;</span>)) &#123;<br>      <span class="hljs-keyword">return</span><br>    &#125;<br>  &#125;<br>  <span class="hljs-keyword">const</span> oldTriggerEvent = mpInstance.<span class="hljs-property">triggerEvent</span>;<br>  mpInstance.<span class="hljs-property">triggerEvent</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params">event, ...args</span>) &#123;<br>    <span class="hljs-keyword">return</span> oldTriggerEvent.<span class="hljs-title function_">apply</span>(mpInstance, [<span class="hljs-title function_">customize</span>(event), ...args])<br>  &#125;;<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">initHook</span> (name, options) &#123;<br>  <span class="hljs-keyword">const</span> oldHook = options[name];<br>  <span class="hljs-keyword">if</span> (!oldHook) &#123;<br>    options[name] = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>      <span class="hljs-title function_">initTriggerEvent</span>(<span class="hljs-variable language_">this</span>);<br>    &#125;;<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    options[name] = <span class="hljs-keyword">function</span> (<span class="hljs-params">...args</span>) &#123;<br>      <span class="hljs-title function_">initTriggerEvent</span>(<span class="hljs-variable language_">this</span>);<br>      <span class="hljs-keyword">return</span> oldHook.<span class="hljs-title function_">apply</span>(<span class="hljs-variable language_">this</span>, args)<br>    &#125;;<br>  &#125;<br>&#125;<br><span class="hljs-keyword">if</span> (!<span class="hljs-title class_">MPPage</span>.<span class="hljs-property">__$wrappered</span>) &#123;<br>  <span class="hljs-title class_">MPPage</span>.<span class="hljs-property">__$wrappered</span> = <span class="hljs-literal">true</span>;<br>  <span class="hljs-title class_">Page</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params">options = &#123;&#125;</span>) &#123;<br>    <span class="hljs-title function_">initHook</span>(<span class="hljs-string">&#x27;onLoad&#x27;</span>, options);<br>    <span class="hljs-keyword">return</span> <span class="hljs-title class_">MPPage</span>(options)<br>  &#125;;<br>  <span class="hljs-title class_">Page</span>.<span class="hljs-property">after</span> = <span class="hljs-title class_">MPPage</span>.<span class="hljs-property">after</span>;<br><br>  <span class="hljs-title class_">Component</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params">options = &#123;&#125;</span>) &#123;<br>    <span class="hljs-title function_">initHook</span>(<span class="hljs-string">&#x27;created&#x27;</span>, options);<br>    <span class="hljs-keyword">return</span> <span class="hljs-title class_">MPComponent</span>(options)<br>  &#125;;<br>&#125;<br><br><span class="hljs-keyword">const</span> <span class="hljs-variable constant_">PAGE_EVENT_HOOKS</span> = [<br>  <span class="hljs-string">&#x27;onPullDownRefresh&#x27;</span>,<br>  <span class="hljs-string">&#x27;onReachBottom&#x27;</span>,<br>  <span class="hljs-string">&#x27;onAddToFavorites&#x27;</span>,<br>  <span class="hljs-string">&#x27;onShareTimeline&#x27;</span>,<br>  <span class="hljs-string">&#x27;onShareAppMessage&#x27;</span>,<br>  <span class="hljs-string">&#x27;onPageScroll&#x27;</span>,<br>  <span class="hljs-string">&#x27;onResize&#x27;</span>,<br>  <span class="hljs-string">&#x27;onTabItemTap&#x27;</span><br>];<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">initMocks</span> (vm, mocks) &#123;<br>  <span class="hljs-keyword">const</span> mpInstance = vm.<span class="hljs-property">$mp</span>[vm.<span class="hljs-property">mpType</span>];<br>  mocks.<span class="hljs-title function_">forEach</span>(<span class="hljs-function"><span class="hljs-params">mock</span> =&gt;</span> &#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-title function_">hasOwn</span>(mpInstance, mock)) &#123;<br>      vm[mock] = mpInstance[mock];<br>    &#125;<br>  &#125;);<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">hasHook</span> (hook, vueOptions) &#123;<br>  <span class="hljs-keyword">if</span> (!vueOptions) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span><br>  &#125;<br><br>  <span class="hljs-keyword">if</span> (<span class="hljs-title class_">Vue</span>.<span class="hljs-property">options</span> &amp;&amp; <span class="hljs-title class_">Array</span>.<span class="hljs-title function_">isArray</span>(<span class="hljs-title class_">Vue</span>.<span class="hljs-property">options</span>[hook])) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span><br>  &#125;<br><br>  vueOptions = vueOptions.<span class="hljs-property">default</span> || vueOptions;<br><br>  <span class="hljs-keyword">if</span> (<span class="hljs-title function_">isFn</span>(vueOptions)) &#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-title function_">isFn</span>(vueOptions.<span class="hljs-property">extendOptions</span>[hook])) &#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span><br>    &#125;<br>    <span class="hljs-keyword">if</span> (vueOptions.<span class="hljs-property">super</span> &amp;&amp;<br>      vueOptions.<span class="hljs-property">super</span>.<span class="hljs-property">options</span> &amp;&amp;<br>      <span class="hljs-title class_">Array</span>.<span class="hljs-title function_">isArray</span>(vueOptions.<span class="hljs-property">super</span>.<span class="hljs-property">options</span>[hook])) &#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span><br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span><br>  &#125;<br><br>  <span class="hljs-keyword">if</span> (<span class="hljs-title function_">isFn</span>(vueOptions[hook])) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span><br>  &#125;<br>  <span class="hljs-keyword">const</span> mixins = vueOptions.<span class="hljs-property">mixins</span>;<br>  <span class="hljs-keyword">if</span> (<span class="hljs-title class_">Array</span>.<span class="hljs-title function_">isArray</span>(mixins)) &#123;<br>    <span class="hljs-keyword">return</span> !!mixins.<span class="hljs-title function_">find</span>(<span class="hljs-function"><span class="hljs-params">mixin</span> =&gt;</span> <span class="hljs-title function_">hasHook</span>(hook, mixin))<br>  &#125;<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">initHooks</span> (mpOptions, hooks, vueOptions) &#123;<br>  hooks.<span class="hljs-title function_">forEach</span>(<span class="hljs-function"><span class="hljs-params">hook</span> =&gt;</span> &#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-title function_">hasHook</span>(hook, vueOptions)) &#123;<br>      mpOptions[hook] = <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">$vm</span> &amp;&amp; <span class="hljs-variable language_">this</span>.<span class="hljs-property">$vm</span>.<span class="hljs-title function_">__call_hook</span>(hook, args)<br>      &#125;;<br>    &#125;<br>  &#125;);<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">initVueComponent</span> (<span class="hljs-title class_">Vue</span>, vueOptions) &#123;<br>  vueOptions = vueOptions.<span class="hljs-property">default</span> || vueOptions;<br>  <span class="hljs-keyword">let</span> <span class="hljs-title class_">VueComponent</span>;<br>  <span class="hljs-keyword">if</span> (<span class="hljs-title function_">isFn</span>(vueOptions)) &#123;<br>    <span class="hljs-title class_">VueComponent</span> = vueOptions;<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-title class_">VueComponent</span> = <span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">extend</span>(vueOptions);<br>  &#125;<br>  vueOptions = <span class="hljs-title class_">VueComponent</span>.<span class="hljs-property">options</span>;<br>  <span class="hljs-keyword">return</span> [<span class="hljs-title class_">VueComponent</span>, vueOptions]<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">initSlots</span> (vm, vueSlots) &#123;<br>  <span class="hljs-keyword">if</span> (<span class="hljs-title class_">Array</span>.<span class="hljs-title function_">isArray</span>(vueSlots) &amp;&amp; vueSlots.<span class="hljs-property">length</span>) &#123;<br>    <span class="hljs-keyword">const</span> $slots = <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">create</span>(<span class="hljs-literal">null</span>);<br>    vueSlots.<span class="hljs-title function_">forEach</span>(<span class="hljs-function"><span class="hljs-params">slotName</span> =&gt;</span> &#123;<br>      $slots[slotName] = <span class="hljs-literal">true</span>;<br>    &#125;);<br>    vm.<span class="hljs-property">$scopedSlots</span> = vm.<span class="hljs-property">$slots</span> = $slots;<br>  &#125;<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">initVueIds</span> (vueIds, mpInstance) &#123;<br>  vueIds = (vueIds || <span class="hljs-string">&#x27;&#x27;</span>).<span class="hljs-title function_">split</span>(<span class="hljs-string">&#x27;,&#x27;</span>);<br>  <span class="hljs-keyword">const</span> len = vueIds.<span class="hljs-property">length</span>;<br><br>  <span class="hljs-keyword">if</span> (len === <span class="hljs-number">1</span>) &#123;<br>    mpInstance.<span class="hljs-property">_$vueId</span> = vueIds[<span class="hljs-number">0</span>];<br>  &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (len === <span class="hljs-number">2</span>) &#123;<br>    mpInstance.<span class="hljs-property">_$vueId</span> = vueIds[<span class="hljs-number">0</span>];<br>    mpInstance.<span class="hljs-property">_$vuePid</span> = vueIds[<span class="hljs-number">1</span>];<br>  &#125;<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">initData</span> (vueOptions, context) &#123;<br>  <span class="hljs-keyword">let</span> data = vueOptions.<span class="hljs-property">data</span> || &#123;&#125;;<br>  <span class="hljs-keyword">const</span> methods = vueOptions.<span class="hljs-property">methods</span> || &#123;&#125;;<br><br>  <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> data === <span class="hljs-string">&#x27;function&#x27;</span>) &#123;<br>    <span class="hljs-keyword">try</span> &#123;<br>      data = data.<span class="hljs-title function_">call</span>(context); <span class="hljs-comment">// 支持 Vue.prototype 上挂的数据</span><br>    &#125; <span class="hljs-keyword">catch</span> (e) &#123;<br>      <span class="hljs-keyword">if</span> (process.<span class="hljs-property">env</span>.<span class="hljs-property">VUE_APP_DEBUG</span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">warn</span>(<span class="hljs-string">&#x27;根据 Vue 的 data 函数初始化小程序 data 失败，请尽量确保 data 函数中不访问 vm 对象，否则可能影响首次数据渲染速度。&#x27;</span>, data);<br>      &#125;<br>    &#125;<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-keyword">try</span> &#123;<br>      <span class="hljs-comment">// 对 data 格式化</span><br>      data = <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">parse</span>(<span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(data));<br>    &#125; <span class="hljs-keyword">catch</span> (e) &#123;&#125;<br>  &#125;<br><br>  <span class="hljs-keyword">if</span> (!<span class="hljs-title function_">isPlainObject</span>(data)) &#123;<br>    data = &#123;&#125;;<br>  &#125;<br><br>  <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">keys</span>(methods).<span class="hljs-title function_">forEach</span>(<span class="hljs-function"><span class="hljs-params">methodName</span> =&gt;</span> &#123;<br>    <span class="hljs-keyword">if</span> (context.<span class="hljs-property">__lifecycle_hooks__</span>.<span class="hljs-title function_">indexOf</span>(methodName) === -<span class="hljs-number">1</span> &amp;&amp; !<span class="hljs-title function_">hasOwn</span>(data, methodName)) &#123;<br>      data[methodName] = methods[methodName];<br>    &#125;<br>  &#125;);<br><br>  <span class="hljs-keyword">return</span> data<br>&#125;<br><br><span class="hljs-keyword">const</span> <span class="hljs-variable constant_">PROP_TYPES</span> = [<span class="hljs-title class_">String</span>, <span class="hljs-title class_">Number</span>, <span class="hljs-title class_">Boolean</span>, <span class="hljs-title class_">Object</span>, <span class="hljs-title class_">Array</span>, <span class="hljs-literal">null</span>];<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">createObserver</span> (name) &#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">observer</span> (newVal, oldVal) &#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">$vm</span>) &#123;<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">$vm</span>[name] = newVal; <span class="hljs-comment">// 为了触发其他非 render watcher</span><br>    &#125;<br>  &#125;<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">initBehaviors</span> (vueOptions, initBehavior) &#123;<br>  <span class="hljs-keyword">const</span> vueBehaviors = vueOptions.<span class="hljs-property">behaviors</span>;<br>  <span class="hljs-keyword">const</span> vueExtends = vueOptions.<span class="hljs-property">extends</span>;<br>  <span class="hljs-keyword">const</span> vueMixins = vueOptions.<span class="hljs-property">mixins</span>;<br><br>  <span class="hljs-keyword">let</span> vueProps = vueOptions.<span class="hljs-property">props</span>;<br><br>  <span class="hljs-keyword">if</span> (!vueProps) &#123;<br>    vueOptions.<span class="hljs-property">props</span> = vueProps = [];<br>  &#125;<br><br>  <span class="hljs-keyword">const</span> behaviors = [];<br>  <span class="hljs-keyword">if</span> (<span class="hljs-title class_">Array</span>.<span class="hljs-title function_">isArray</span>(vueBehaviors)) &#123;<br>    vueBehaviors.<span class="hljs-title function_">forEach</span>(<span class="hljs-function"><span class="hljs-params">behavior</span> =&gt;</span> &#123;<br>      behaviors.<span class="hljs-title function_">push</span>(behavior.<span class="hljs-title function_">replace</span>(<span class="hljs-string">&#x27;uni://&#x27;</span>, <span class="hljs-string">`<span class="hljs-subst">$&#123;<span class="hljs-string">&quot;wx&quot;</span>&#125;</span>://`</span>));<br>      <span class="hljs-keyword">if</span> (behavior === <span class="hljs-string">&#x27;uni://form-field&#x27;</span>) &#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-title class_">Array</span>.<span class="hljs-title function_">isArray</span>(vueProps)) &#123;<br>          vueProps.<span class="hljs-title function_">push</span>(<span class="hljs-string">&#x27;name&#x27;</span>);<br>          vueProps.<span class="hljs-title function_">push</span>(<span class="hljs-string">&#x27;value&#x27;</span>);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>          vueProps.<span class="hljs-property">name</span> = &#123;<br>            <span class="hljs-attr">type</span>: <span class="hljs-title class_">String</span>,<br>            <span class="hljs-attr">default</span>: <span class="hljs-string">&#x27;&#x27;</span><br>          &#125;;<br>          vueProps.<span class="hljs-property">value</span> = &#123;<br>            <span class="hljs-attr">type</span>: [<span class="hljs-title class_">String</span>, <span class="hljs-title class_">Number</span>, <span class="hljs-title class_">Boolean</span>, <span class="hljs-title class_">Array</span>, <span class="hljs-title class_">Object</span>, <span class="hljs-title class_">Date</span>],<br>            <span class="hljs-attr">default</span>: <span class="hljs-string">&#x27;&#x27;</span><br>          &#125;;<br>        &#125;<br>      &#125;<br>    &#125;);<br>  &#125;<br>  <span class="hljs-keyword">if</span> (<span class="hljs-title function_">isPlainObject</span>(vueExtends) &amp;&amp; vueExtends.<span class="hljs-property">props</span>) &#123;<br>    behaviors.<span class="hljs-title function_">push</span>(<br>      <span class="hljs-title function_">initBehavior</span>(&#123;<br>        <span class="hljs-attr">properties</span>: <span class="hljs-title function_">initProperties</span>(vueExtends.<span class="hljs-property">props</span>, <span class="hljs-literal">true</span>)<br>      &#125;)<br>    );<br>  &#125;<br>  <span class="hljs-keyword">if</span> (<span class="hljs-title class_">Array</span>.<span class="hljs-title function_">isArray</span>(vueMixins)) &#123;<br>    vueMixins.<span class="hljs-title function_">forEach</span>(<span class="hljs-function"><span class="hljs-params">vueMixin</span> =&gt;</span> &#123;<br>      <span class="hljs-keyword">if</span> (<span class="hljs-title function_">isPlainObject</span>(vueMixin) &amp;&amp; vueMixin.<span class="hljs-property">props</span>) &#123;<br>        behaviors.<span class="hljs-title function_">push</span>(<br>          <span class="hljs-title function_">initBehavior</span>(&#123;<br>            <span class="hljs-attr">properties</span>: <span class="hljs-title function_">initProperties</span>(vueMixin.<span class="hljs-property">props</span>, <span class="hljs-literal">true</span>)<br>          &#125;)<br>        );<br>      &#125;<br>    &#125;);<br>  &#125;<br>  <span class="hljs-keyword">return</span> behaviors<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">parsePropType</span> (key, type, defaultValue, file) &#123;<br>  <span class="hljs-comment">// [String]=&gt;String</span><br>  <span class="hljs-keyword">if</span> (<span class="hljs-title class_">Array</span>.<span class="hljs-title function_">isArray</span>(type) &amp;&amp; type.<span class="hljs-property">length</span> === <span class="hljs-number">1</span>) &#123;<br>    <span class="hljs-keyword">return</span> type[<span class="hljs-number">0</span>]<br>  &#125;<br>  <span class="hljs-keyword">return</span> type<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">initProperties</span> (props, isBehavior = <span class="hljs-literal">false</span>, file = <span class="hljs-string">&#x27;&#x27;</span>) &#123;<br>  <span class="hljs-keyword">const</span> properties = &#123;&#125;;<br>  <span class="hljs-keyword">if</span> (!isBehavior) &#123;<br>    properties.<span class="hljs-property">vueId</span> = &#123;<br>      <span class="hljs-attr">type</span>: <span class="hljs-title class_">String</span>,<br>      <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;&#x27;</span><br>    &#125;;<br>    <span class="hljs-comment">// 用于字节跳动小程序模拟抽象节点</span><br>    properties.<span class="hljs-property">generic</span> = &#123;<br>      <span class="hljs-attr">type</span>: <span class="hljs-title class_">Object</span>,<br>      <span class="hljs-attr">value</span>: <span class="hljs-literal">null</span><br>    &#125;;<br>    properties.<span class="hljs-property">vueSlots</span> = &#123; <span class="hljs-comment">// 小程序不能直接定义 $slots 的 props，所以通过 vueSlots 转换到 $slots</span><br>      <span class="hljs-attr">type</span>: <span class="hljs-literal">null</span>,<br>      <span class="hljs-attr">value</span>: [],<br>      <span class="hljs-attr">observer</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">newVal, oldVal</span>) &#123;<br>        <span class="hljs-keyword">const</span> $slots = <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">create</span>(<span class="hljs-literal">null</span>);<br>        newVal.<span class="hljs-title function_">forEach</span>(<span class="hljs-function"><span class="hljs-params">slotName</span> =&gt;</span> &#123;<br>          $slots[slotName] = <span class="hljs-literal">true</span>;<br>        &#125;);<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">setData</span>(&#123;<br>          $slots<br>        &#125;);<br>      &#125;<br>    &#125;;<br>  &#125;<br>  <span class="hljs-keyword">if</span> (<span class="hljs-title class_">Array</span>.<span class="hljs-title function_">isArray</span>(props)) &#123; <span class="hljs-comment">// [&#x27;title&#x27;]</span><br>    props.<span class="hljs-title function_">forEach</span>(<span class="hljs-function"><span class="hljs-params">key</span> =&gt;</span> &#123;<br>      properties[key] = &#123;<br>        <span class="hljs-attr">type</span>: <span class="hljs-literal">null</span>,<br>        <span class="hljs-attr">observer</span>: <span class="hljs-title function_">createObserver</span>(key)<br>      &#125;;<br>    &#125;);<br>  &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-title function_">isPlainObject</span>(props)) &#123; <span class="hljs-comment">// &#123;title:&#123;type:String,default:&#x27;&#x27;&#125;,content:String&#125;</span><br>    <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">keys</span>(props).<span class="hljs-title function_">forEach</span>(<span class="hljs-function"><span class="hljs-params">key</span> =&gt;</span> &#123;<br>      <span class="hljs-keyword">const</span> opts = props[key];<br>      <span class="hljs-keyword">if</span> (<span class="hljs-title function_">isPlainObject</span>(opts)) &#123; <span class="hljs-comment">// title:&#123;type:String,default:&#x27;&#x27;&#125;</span><br>        <span class="hljs-keyword">let</span> value = opts.<span class="hljs-property">default</span>;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-title function_">isFn</span>(value)) &#123;<br>          value = <span class="hljs-title function_">value</span>();<br>        &#125;<br><br>        opts.<span class="hljs-property">type</span> = <span class="hljs-title function_">parsePropType</span>(key, opts.<span class="hljs-property">type</span>);<br><br>        properties[key] = &#123;<br>          <span class="hljs-attr">type</span>: <span class="hljs-variable constant_">PROP_TYPES</span>.<span class="hljs-title function_">indexOf</span>(opts.<span class="hljs-property">type</span>) !== -<span class="hljs-number">1</span> ? opts.<span class="hljs-property">type</span> : <span class="hljs-literal">null</span>,<br>          value,<br>          <span class="hljs-attr">observer</span>: <span class="hljs-title function_">createObserver</span>(key)<br>        &#125;;<br>      &#125; <span class="hljs-keyword">else</span> &#123; <span class="hljs-comment">// content:String</span><br>        <span class="hljs-keyword">const</span> type = <span class="hljs-title function_">parsePropType</span>(key, opts);<br>        properties[key] = &#123;<br>          <span class="hljs-attr">type</span>: <span class="hljs-variable constant_">PROP_TYPES</span>.<span class="hljs-title function_">indexOf</span>(type) !== -<span class="hljs-number">1</span> ? type : <span class="hljs-literal">null</span>,<br>          <span class="hljs-attr">observer</span>: <span class="hljs-title function_">createObserver</span>(key)<br>        &#125;;<br>      &#125;<br>    &#125;);<br>  &#125;<br>  <span class="hljs-keyword">return</span> properties<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">wrapper$1</span> (event) &#123;<br>  <span class="hljs-comment">// TODO 又得兼容 mpvue 的 mp 对象</span><br>  <span class="hljs-keyword">try</span> &#123;<br>    event.<span class="hljs-property">mp</span> = <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">parse</span>(<span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(event));<br>  &#125; <span class="hljs-keyword">catch</span> (e) &#123;&#125;<br><br>  event.<span class="hljs-property">stopPropagation</span> = noop;<br>  event.<span class="hljs-property">preventDefault</span> = noop;<br><br>  event.<span class="hljs-property">target</span> = event.<span class="hljs-property">target</span> || &#123;&#125;;<br><br>  <span class="hljs-keyword">if</span> (!<span class="hljs-title function_">hasOwn</span>(event, <span class="hljs-string">&#x27;detail&#x27;</span>)) &#123;<br>    event.<span class="hljs-property">detail</span> = &#123;&#125;;<br>  &#125;<br><br>  <span class="hljs-keyword">if</span> (<span class="hljs-title function_">hasOwn</span>(event, <span class="hljs-string">&#x27;markerId&#x27;</span>)) &#123;<br>    event.<span class="hljs-property">detail</span> = <span class="hljs-keyword">typeof</span> event.<span class="hljs-property">detail</span> === <span class="hljs-string">&#x27;object&#x27;</span> ? event.<span class="hljs-property">detail</span> : &#123;&#125;;<br>    event.<span class="hljs-property">detail</span>.<span class="hljs-property">markerId</span> = event.<span class="hljs-property">markerId</span>;<br>  &#125;<br><br>  <span class="hljs-keyword">if</span> (<span class="hljs-title function_">isPlainObject</span>(event.<span class="hljs-property">detail</span>)) &#123;<br>    event.<span class="hljs-property">target</span> = <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">assign</span>(&#123;&#125;, event.<span class="hljs-property">target</span>, event.<span class="hljs-property">detail</span>);<br>  &#125;<br><br>  <span class="hljs-keyword">return</span> event<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">getExtraValue</span> (vm, dataPathsArray) &#123;<br>  <span class="hljs-keyword">let</span> context = vm;<br>  dataPathsArray.<span class="hljs-title function_">forEach</span>(<span class="hljs-function"><span class="hljs-params">dataPathArray</span> =&gt;</span> &#123;<br>    <span class="hljs-keyword">const</span> dataPath = dataPathArray[<span class="hljs-number">0</span>];<br>    <span class="hljs-keyword">const</span> value = dataPathArray[<span class="hljs-number">2</span>];<br>    <span class="hljs-keyword">if</span> (dataPath || <span class="hljs-keyword">typeof</span> value !== <span class="hljs-string">&#x27;undefined&#x27;</span>) &#123; <span class="hljs-comment">// [&#x27;&#x27;,&#x27;&#x27;,index,&#x27;disable&#x27;]</span><br>      <span class="hljs-keyword">const</span> propPath = dataPathArray[<span class="hljs-number">1</span>];<br>      <span class="hljs-keyword">const</span> valuePath = dataPathArray[<span class="hljs-number">3</span>];<br><br>      <span class="hljs-keyword">let</span> vFor;<br>      <span class="hljs-keyword">if</span> (<span class="hljs-title class_">Number</span>.<span class="hljs-title function_">isInteger</span>(dataPath)) &#123;<br>        vFor = dataPath;<br>      &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (!dataPath) &#123;<br>        vFor = context;<br>      &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> dataPath === <span class="hljs-string">&#x27;string&#x27;</span> &amp;&amp; dataPath) &#123;<br>        <span class="hljs-keyword">if</span> (dataPath.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&#x27;#s#&#x27;</span>) === <span class="hljs-number">0</span>) &#123;<br>          vFor = dataPath.<span class="hljs-title function_">substr</span>(<span class="hljs-number">3</span>);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>          vFor = vm.<span class="hljs-title function_">__get_value</span>(dataPath, context);<br>        &#125;<br>      &#125;<br><br>      <span class="hljs-keyword">if</span> (<span class="hljs-title class_">Number</span>.<span class="hljs-title function_">isInteger</span>(vFor)) &#123;<br>        context = value;<br>      &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (!propPath) &#123;<br>        context = vFor[value];<br>      &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-title class_">Array</span>.<span class="hljs-title function_">isArray</span>(vFor)) &#123;<br>          context = vFor.<span class="hljs-title function_">find</span>(<span class="hljs-function"><span class="hljs-params">vForItem</span> =&gt;</span> &#123;<br>            <span class="hljs-keyword">return</span> vm.<span class="hljs-title function_">__get_value</span>(propPath, vForItem) === value<br>          &#125;);<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-title function_">isPlainObject</span>(vFor)) &#123;<br>          context = <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">keys</span>(vFor).<span class="hljs-title function_">find</span>(<span class="hljs-function"><span class="hljs-params">vForKey</span> =&gt;</span> &#123;<br>            <span class="hljs-keyword">return</span> vm.<span class="hljs-title function_">__get_value</span>(propPath, vFor[vForKey]) === value<br>          &#125;);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>          <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;v-for 暂不支持循环数据：&#x27;</span>, vFor);<br>        &#125;<br>      &#125;<br><br>      <span class="hljs-keyword">if</span> (valuePath) &#123;<br>        context = vm.<span class="hljs-title function_">__get_value</span>(valuePath, context);<br>      &#125;<br>    &#125;<br>  &#125;);<br>  <span class="hljs-keyword">return</span> context<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">processEventExtra</span> (vm, extra, event) &#123;<br>  <span class="hljs-keyword">const</span> extraObj = &#123;&#125;;<br><br>  <span class="hljs-keyword">if</span> (<span class="hljs-title class_">Array</span>.<span class="hljs-title function_">isArray</span>(extra) &amp;&amp; extra.<span class="hljs-property">length</span>) &#123;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     *[</span><br><span class="hljs-comment">     *    [&#x27;data.items&#x27;, &#x27;data.id&#x27;, item.data.id],</span><br><span class="hljs-comment">     *    [&#x27;metas&#x27;, &#x27;id&#x27;, meta.id]</span><br><span class="hljs-comment">     *],</span><br><span class="hljs-comment">     *[</span><br><span class="hljs-comment">     *    [&#x27;data.items&#x27;, &#x27;data.id&#x27;, item.data.id],</span><br><span class="hljs-comment">     *    [&#x27;metas&#x27;, &#x27;id&#x27;, meta.id]</span><br><span class="hljs-comment">     *],</span><br><span class="hljs-comment">     *&#x27;test&#x27;</span><br><span class="hljs-comment">     */</span><br>    extra.<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">dataPath, index</span>) =&gt;</span> &#123;<br>      <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> dataPath === <span class="hljs-string">&#x27;string&#x27;</span>) &#123;<br>        <span class="hljs-keyword">if</span> (!dataPath) &#123; <span class="hljs-comment">// model,prop.sync</span><br>          extraObj[<span class="hljs-string">&#x27;$&#x27;</span> + index] = vm;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>          <span class="hljs-keyword">if</span> (dataPath === <span class="hljs-string">&#x27;$event&#x27;</span>) &#123; <span class="hljs-comment">// $event</span><br>            extraObj[<span class="hljs-string">&#x27;$&#x27;</span> + index] = event;<br>          &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (dataPath === <span class="hljs-string">&#x27;arguments&#x27;</span>) &#123;<br>            <span class="hljs-keyword">if</span> (event.<span class="hljs-property">detail</span> &amp;&amp; event.<span class="hljs-property">detail</span>.<span class="hljs-property">__args__</span>) &#123;<br>              extraObj[<span class="hljs-string">&#x27;$&#x27;</span> + index] = event.<span class="hljs-property">detail</span>.<span class="hljs-property">__args__</span>;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>              extraObj[<span class="hljs-string">&#x27;$&#x27;</span> + index] = [event];<br>            &#125;<br>          &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (dataPath.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&#x27;$event.&#x27;</span>) === <span class="hljs-number">0</span>) &#123; <span class="hljs-comment">// $event.target.value</span><br>            extraObj[<span class="hljs-string">&#x27;$&#x27;</span> + index] = vm.<span class="hljs-title function_">__get_value</span>(dataPath.<span class="hljs-title function_">replace</span>(<span class="hljs-string">&#x27;$event.&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>), event);<br>          &#125; <span class="hljs-keyword">else</span> &#123;<br>            extraObj[<span class="hljs-string">&#x27;$&#x27;</span> + index] = vm.<span class="hljs-title function_">__get_value</span>(dataPath);<br>          &#125;<br>        &#125;<br>      &#125; <span class="hljs-keyword">else</span> &#123;<br>        extraObj[<span class="hljs-string">&#x27;$&#x27;</span> + index] = <span class="hljs-title function_">getExtraValue</span>(vm, dataPath);<br>      &#125;<br>    &#125;);<br>  &#125;<br><br>  <span class="hljs-keyword">return</span> extraObj<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">getObjByArray</span> (arr) &#123;<br>  <span class="hljs-keyword">const</span> obj = &#123;&#125;;<br>  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">1</span>; i &lt; arr.<span class="hljs-property">length</span>; i++) &#123;<br>    <span class="hljs-keyword">const</span> element = arr[i];<br>    obj[element[<span class="hljs-number">0</span>]] = element[<span class="hljs-number">1</span>];<br>  &#125;<br>  <span class="hljs-keyword">return</span> obj<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">processEventArgs</span> (vm, event, args = [], extra = [], isCustom, methodName) &#123;<br>  <span class="hljs-keyword">let</span> isCustomMPEvent = <span class="hljs-literal">false</span>; <span class="hljs-comment">// wxcomponent 组件，传递原始 event 对象</span><br>  <span class="hljs-keyword">if</span> (isCustom) &#123; <span class="hljs-comment">// 自定义事件</span><br>    isCustomMPEvent = event.<span class="hljs-property">currentTarget</span> &amp;&amp;<br>      event.<span class="hljs-property">currentTarget</span>.<span class="hljs-property">dataset</span> &amp;&amp;<br>      event.<span class="hljs-property">currentTarget</span>.<span class="hljs-property">dataset</span>.<span class="hljs-property">comType</span> === <span class="hljs-string">&#x27;wx&#x27;</span>;<br>    <span class="hljs-keyword">if</span> (!args.<span class="hljs-property">length</span>) &#123; <span class="hljs-comment">// 无参数，直接传入 event 或 detail 数组</span><br>      <span class="hljs-keyword">if</span> (isCustomMPEvent) &#123;<br>        <span class="hljs-keyword">return</span> [event]<br>      &#125;<br>      <span class="hljs-keyword">return</span> event.<span class="hljs-property">detail</span>.<span class="hljs-property">__args__</span> || event.<span class="hljs-property">detail</span><br>    &#125;<br>  &#125;<br><br>  <span class="hljs-keyword">const</span> extraObj = <span class="hljs-title function_">processEventExtra</span>(vm, extra, event);<br><br>  <span class="hljs-keyword">const</span> ret = [];<br>  args.<span class="hljs-title function_">forEach</span>(<span class="hljs-function"><span class="hljs-params">arg</span> =&gt;</span> &#123;<br>    <span class="hljs-keyword">if</span> (arg === <span class="hljs-string">&#x27;$event&#x27;</span>) &#123;<br>      <span class="hljs-keyword">if</span> (methodName === <span class="hljs-string">&#x27;__set_model&#x27;</span> &amp;&amp; !isCustom) &#123; <span class="hljs-comment">// input v-model value</span><br>        ret.<span class="hljs-title function_">push</span>(event.<span class="hljs-property">target</span>.<span class="hljs-property">value</span>);<br>      &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">if</span> (isCustom &amp;&amp; !isCustomMPEvent) &#123;<br>          ret.<span class="hljs-title function_">push</span>(event.<span class="hljs-property">detail</span>.<span class="hljs-property">__args__</span>[<span class="hljs-number">0</span>]);<br>        &#125; <span class="hljs-keyword">else</span> &#123; <span class="hljs-comment">// wxcomponent 组件或内置组件</span><br>          ret.<span class="hljs-title function_">push</span>(event);<br>        &#125;<br>      &#125;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      <span class="hljs-keyword">if</span> (<span class="hljs-title class_">Array</span>.<span class="hljs-title function_">isArray</span>(arg) &amp;&amp; arg[<span class="hljs-number">0</span>] === <span class="hljs-string">&#x27;o&#x27;</span>) &#123;<br>        ret.<span class="hljs-title function_">push</span>(<span class="hljs-title function_">getObjByArray</span>(arg));<br>      &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> arg === <span class="hljs-string">&#x27;string&#x27;</span> &amp;&amp; <span class="hljs-title function_">hasOwn</span>(extraObj, arg)) &#123;<br>        ret.<span class="hljs-title function_">push</span>(extraObj[arg]);<br>      &#125; <span class="hljs-keyword">else</span> &#123;<br>        ret.<span class="hljs-title function_">push</span>(arg);<br>      &#125;<br>    &#125;<br>  &#125;);<br><br>  <span class="hljs-keyword">return</span> ret<br>&#125;<br><br><span class="hljs-keyword">const</span> <span class="hljs-variable constant_">ONCE</span> = <span class="hljs-string">&#x27;~&#x27;</span>;<br><span class="hljs-keyword">const</span> <span class="hljs-variable constant_">CUSTOM</span> = <span class="hljs-string">&#x27;^&#x27;</span>;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">isMatchEventType</span> (eventType, optType) &#123;<br>  <span class="hljs-keyword">return</span> (eventType === optType) ||<br>    (<br>      optType === <span class="hljs-string">&#x27;regionchange&#x27;</span> &amp;&amp;<br>      (<br>        eventType === <span class="hljs-string">&#x27;begin&#x27;</span> ||<br>        eventType === <span class="hljs-string">&#x27;end&#x27;</span><br>      )<br>    )<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">getContextVm</span> (vm) &#123;<br>  <span class="hljs-keyword">let</span> $parent = vm.<span class="hljs-property">$parent</span>;<br>  <span class="hljs-comment">// 父组件是 scoped slots 或者其他自定义组件时继续查找</span><br>  <span class="hljs-keyword">while</span> ($parent &amp;&amp; $parent.<span class="hljs-property">$parent</span> &amp;&amp; ($parent.<span class="hljs-property">$options</span>.<span class="hljs-property">generic</span> || $parent.<span class="hljs-property">$parent</span>.<span class="hljs-property">$options</span>.<span class="hljs-property">generic</span> || $parent.<span class="hljs-property">$scope</span>.<span class="hljs-property">_$vuePid</span>)) &#123;<br>    $parent = $parent.<span class="hljs-property">$parent</span>;<br>  &#125;<br>  <span class="hljs-keyword">return</span> $parent &amp;&amp; $parent.<span class="hljs-property">$parent</span><br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">handleEvent</span> (event) &#123;<br>  event = <span class="hljs-title function_">wrapper$1</span>(event);<br><br>  <span class="hljs-comment">// [[&#x27;tap&#x27;,[[&#x27;handle&#x27;,[1,2,a]],[&#x27;handle1&#x27;,[1,2,a]]]]]</span><br>  <span class="hljs-keyword">const</span> dataset = (event.<span class="hljs-property">currentTarget</span> || event.<span class="hljs-property">target</span>).<span class="hljs-property">dataset</span>;<br>  <span class="hljs-keyword">if</span> (!dataset) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">warn</span>(<span class="hljs-string">&#x27;事件信息不存在&#x27;</span>)<br>  &#125;<br>  <span class="hljs-keyword">const</span> eventOpts = dataset.<span class="hljs-property">eventOpts</span> || dataset[<span class="hljs-string">&#x27;event-opts&#x27;</span>]; <span class="hljs-comment">// 支付宝 web-view 组件 dataset 非驼峰</span><br>  <span class="hljs-keyword">if</span> (!eventOpts) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">warn</span>(<span class="hljs-string">&#x27;事件信息不存在&#x27;</span>)<br>  &#125;<br><br>  <span class="hljs-comment">// [[&#x27;handle&#x27;,[1,2,a]],[&#x27;handle1&#x27;,[1,2,a]]]</span><br>  <span class="hljs-keyword">const</span> eventType = event.<span class="hljs-property">type</span>;<br><br>  <span class="hljs-keyword">const</span> ret = [];<br><br>  eventOpts.<span class="hljs-title function_">forEach</span>(<span class="hljs-function"><span class="hljs-params">eventOpt</span> =&gt;</span> &#123;<br>    <span class="hljs-keyword">let</span> type = eventOpt[<span class="hljs-number">0</span>];<br>    <span class="hljs-keyword">const</span> eventsArray = eventOpt[<span class="hljs-number">1</span>];<br><br>    <span class="hljs-keyword">const</span> isCustom = type.<span class="hljs-title function_">charAt</span>(<span class="hljs-number">0</span>) === <span class="hljs-variable constant_">CUSTOM</span>;<br>    type = isCustom ? type.<span class="hljs-title function_">slice</span>(<span class="hljs-number">1</span>) : type;<br>    <span class="hljs-keyword">const</span> isOnce = type.<span class="hljs-title function_">charAt</span>(<span class="hljs-number">0</span>) === <span class="hljs-variable constant_">ONCE</span>;<br>    type = isOnce ? type.<span class="hljs-title function_">slice</span>(<span class="hljs-number">1</span>) : type;<br><br>    <span class="hljs-keyword">if</span> (eventsArray &amp;&amp; <span class="hljs-title function_">isMatchEventType</span>(eventType, type)) &#123;<br>      eventsArray.<span class="hljs-title function_">forEach</span>(<span class="hljs-function"><span class="hljs-params">eventArray</span> =&gt;</span> &#123;<br>        <span class="hljs-keyword">const</span> methodName = eventArray[<span class="hljs-number">0</span>];<br>        <span class="hljs-keyword">if</span> (methodName) &#123;<br>          <span class="hljs-keyword">let</span> handlerCtx = <span class="hljs-variable language_">this</span>.<span class="hljs-property">$vm</span>;<br>          <span class="hljs-keyword">if</span> (handlerCtx.<span class="hljs-property">$options</span>.<span class="hljs-property">generic</span>) &#123; <span class="hljs-comment">// mp-weixin,mp-toutiao 抽象节点模拟 scoped slots</span><br>            handlerCtx = <span class="hljs-title function_">getContextVm</span>(handlerCtx) || handlerCtx;<br>          &#125;<br>          <span class="hljs-keyword">if</span> (methodName === <span class="hljs-string">&#x27;$emit&#x27;</span>) &#123;<br>            handlerCtx.<span class="hljs-property">$emit</span>.<span class="hljs-title function_">apply</span>(handlerCtx,<br>              <span class="hljs-title function_">processEventArgs</span>(<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">$vm</span>,<br>                event,<br>                eventArray[<span class="hljs-number">1</span>],<br>                eventArray[<span class="hljs-number">2</span>],<br>                isCustom,<br>                methodName<br>              ));<br>            <span class="hljs-keyword">return</span><br>          &#125;<br>          <span class="hljs-keyword">const</span> handler = handlerCtx[methodName];<br>          <span class="hljs-keyword">if</span> (!<span class="hljs-title function_">isFn</span>(handler)) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">` _vm.<span class="hljs-subst">$&#123;methodName&#125;</span> is not a function`</span>)<br>          &#125;<br>          <span class="hljs-keyword">if</span> (isOnce) &#123;<br>            <span class="hljs-keyword">if</span> (handler.<span class="hljs-property">once</span>) &#123;<br>              <span class="hljs-keyword">return</span><br>            &#125;<br>            handler.<span class="hljs-property">once</span> = <span class="hljs-literal">true</span>;<br>          &#125;<br>          <span class="hljs-keyword">let</span> params = <span class="hljs-title function_">processEventArgs</span>(<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">$vm</span>,<br>            event,<br>            eventArray[<span class="hljs-number">1</span>],<br>            eventArray[<span class="hljs-number">2</span>],<br>            isCustom,<br>            methodName<br>          );<br>          params = <span class="hljs-title class_">Array</span>.<span class="hljs-title function_">isArray</span>(params) ? params : [];<br>          <span class="hljs-comment">// 参数尾部增加原始事件对象用于复杂表达式内获取额外数据</span><br>          <span class="hljs-keyword">if</span> (<span class="hljs-regexp">/=\s*\S+\.eventParams\s*\|\|\s*\S+\[[&#x27;&quot;]event-params[&#x27;&quot;]\]/</span>.<span class="hljs-title function_">test</span>(handler.<span class="hljs-title function_">toString</span>())) &#123;<br>            <span class="hljs-comment">// eslint-disable-next-line no-sparse-arrays</span><br>            params = params.<span class="hljs-title function_">concat</span>([, , , , , , , , , , event]);<br>          &#125;<br>          ret.<span class="hljs-title function_">push</span>(handler.<span class="hljs-title function_">apply</span>(handlerCtx, params));<br>        &#125;<br>      &#125;);<br>    &#125;<br>  &#125;);<br><br>  <span class="hljs-keyword">if</span> (<br>    eventType === <span class="hljs-string">&#x27;input&#x27;</span> &amp;&amp;<br>    ret.<span class="hljs-property">length</span> === <span class="hljs-number">1</span> &amp;&amp;<br>    <span class="hljs-keyword">typeof</span> ret[<span class="hljs-number">0</span>] !== <span class="hljs-string">&#x27;undefined&#x27;</span><br>  ) &#123;<br>    <span class="hljs-keyword">return</span> ret[<span class="hljs-number">0</span>]<br>  &#125;<br>&#125;<br><br><span class="hljs-keyword">const</span> eventChannels = &#123;&#125;;<br><br><span class="hljs-keyword">const</span> eventChannelStack = [];<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">getEventChannel</span> (id) &#123;<br>  <span class="hljs-keyword">if</span> (id) &#123;<br>    <span class="hljs-keyword">const</span> eventChannel = eventChannels[id];<br>    <span class="hljs-keyword">delete</span> eventChannels[id];<br>    <span class="hljs-keyword">return</span> eventChannel<br>  &#125;<br>  <span class="hljs-keyword">return</span> eventChannelStack.<span class="hljs-title function_">shift</span>()<br>&#125;<br><br><span class="hljs-keyword">const</span> hooks = [<br>  <span class="hljs-string">&#x27;onShow&#x27;</span>,<br>  <span class="hljs-string">&#x27;onHide&#x27;</span>,<br>  <span class="hljs-string">&#x27;onError&#x27;</span>,<br>  <span class="hljs-string">&#x27;onPageNotFound&#x27;</span>,<br>  <span class="hljs-string">&#x27;onThemeChange&#x27;</span>,<br>  <span class="hljs-string">&#x27;onUnhandledRejection&#x27;</span><br>];<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">initEventChannel</span> () &#123;<br>  <span class="hljs-title class_">Vue</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">getOpenerEventChannel</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-comment">// 微信小程序使用自身getOpenerEventChannel</span><br>    &#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">$scope</span>.<span class="hljs-title function_">getOpenerEventChannel</span>()<br>    &#125;<br>  &#125;;<br>  <span class="hljs-keyword">const</span> callHook = <span class="hljs-title class_">Vue</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">__call_hook</span>;<br>  <span class="hljs-title class_">Vue</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">__call_hook</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params">hook, args</span>) &#123;<br>    <span class="hljs-keyword">if</span> (hook === <span class="hljs-string">&#x27;onLoad&#x27;</span> &amp;&amp; args &amp;&amp; args.<span class="hljs-property">__id__</span>) &#123;<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">__eventChannel__</span> = <span class="hljs-title function_">getEventChannel</span>(args.<span class="hljs-property">__id__</span>);<br>      <span class="hljs-keyword">delete</span> args.<span class="hljs-property">__id__</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> callHook.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>, hook, args)<br>  &#125;;<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">initScopedSlotsParams</span> () &#123;<br>  <span class="hljs-keyword">const</span> center = &#123;&#125;;<br>  <span class="hljs-keyword">const</span> parents = &#123;&#125;;<br><br>  <span class="hljs-title class_">Vue</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">$hasScopedSlotsParams</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params">vueId</span>) &#123;<br>    <span class="hljs-keyword">const</span> has = center[vueId];<br>    <span class="hljs-keyword">if</span> (!has) &#123;<br>      parents[vueId] = <span class="hljs-variable language_">this</span>;<br>      <span class="hljs-variable language_">this</span>.$on(<span class="hljs-string">&#x27;hook:destory&#x27;</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>        <span class="hljs-keyword">delete</span> parents[vueId];<br>      &#125;);<br>    &#125;<br>    <span class="hljs-keyword">return</span> has<br>  &#125;;<br><br>  <span class="hljs-title class_">Vue</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">$getScopedSlotsParams</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params">vueId, name, key</span>) &#123;<br>    <span class="hljs-keyword">const</span> data = center[vueId];<br>    <span class="hljs-keyword">if</span> (data) &#123;<br>      <span class="hljs-keyword">const</span> object = data[name] || &#123;&#125;;<br>      <span class="hljs-keyword">return</span> key ? object[key] : object<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      parents[vueId] = <span class="hljs-variable language_">this</span>;<br>      <span class="hljs-variable language_">this</span>.$on(<span class="hljs-string">&#x27;hook:destory&#x27;</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>        <span class="hljs-keyword">delete</span> parents[vueId];<br>      &#125;);<br>    &#125;<br>  &#125;;<br><br>  <span class="hljs-title class_">Vue</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">$setScopedSlotsParams</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params">name, value</span>) &#123;<br>    <span class="hljs-keyword">const</span> vueId = <span class="hljs-variable language_">this</span>.<span class="hljs-property">$options</span>.<span class="hljs-property">propsData</span>.<span class="hljs-property">vueId</span>;<br>    <span class="hljs-keyword">const</span> object = center[vueId] = center[vueId] || &#123;&#125;;<br>    object[name] = value;<br>    <span class="hljs-keyword">if</span> (parents[vueId]) &#123;<br>      parents[vueId].$forceUpdate();<br>    &#125;<br>  &#125;;<br><br>  <span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">mixin</span>(&#123;<br>    destroyed () &#123;<br>      <span class="hljs-keyword">const</span> propsData = <span class="hljs-variable language_">this</span>.<span class="hljs-property">$options</span>.<span class="hljs-property">propsData</span>;<br>      <span class="hljs-keyword">const</span> vueId = propsData &amp;&amp; propsData.<span class="hljs-property">vueId</span>;<br>      <span class="hljs-keyword">if</span> (vueId) &#123;<br>        <span class="hljs-keyword">delete</span> center[vueId];<br>        <span class="hljs-keyword">delete</span> parents[vueId];<br>      &#125;<br>    &#125;<br>  &#125;);<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">parseBaseApp</span> (vm, &#123;<br>  mocks,<br>  initRefs<br>&#125;) &#123;<br>  <span class="hljs-title function_">initEventChannel</span>();<br>  &#123;<br>    <span class="hljs-title function_">initScopedSlotsParams</span>();<br>  &#125;<br>  <span class="hljs-keyword">if</span> (vm.<span class="hljs-property">$options</span>.<span class="hljs-property">store</span>) &#123;<br>    <span class="hljs-title class_">Vue</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">$store</span> = vm.<span class="hljs-property">$options</span>.<span class="hljs-property">store</span>;<br>  &#125;<br><br>  <span class="hljs-title class_">Vue</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">mpHost</span> = <span class="hljs-string">&quot;mp-weixin&quot;</span>;<br><br>  <span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">mixin</span>(&#123;<br>    beforeCreate () &#123;<br>      <span class="hljs-keyword">if</span> (!<span class="hljs-variable language_">this</span>.<span class="hljs-property">$options</span>.<span class="hljs-property">mpType</span>) &#123;<br>        <span class="hljs-keyword">return</span><br>      &#125;<br><br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">mpType</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">$options</span>.<span class="hljs-property">mpType</span>;<br><br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">$mp</span> = &#123;<br>        <span class="hljs-attr">data</span>: &#123;&#125;,<br>        [<span class="hljs-variable language_">this</span>.<span class="hljs-property">mpType</span>]: <span class="hljs-variable language_">this</span>.<span class="hljs-property">$options</span>.<span class="hljs-property">mpInstance</span><br>      &#125;;<br><br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">$scope</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">$options</span>.<span class="hljs-property">mpInstance</span>;<br><br>      <span class="hljs-keyword">delete</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">$options</span>.<span class="hljs-property">mpType</span>;<br>      <span class="hljs-keyword">delete</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">$options</span>.<span class="hljs-property">mpInstance</span>;<br>      <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">mpType</span> === <span class="hljs-string">&#x27;page&#x27;</span> &amp;&amp; <span class="hljs-keyword">typeof</span> getApp === <span class="hljs-string">&#x27;function&#x27;</span>) &#123; <span class="hljs-comment">// hack vue-i18n</span><br>        <span class="hljs-keyword">const</span> app = <span class="hljs-title function_">getApp</span>();<br>        <span class="hljs-keyword">if</span> (app.<span class="hljs-property">$vm</span> &amp;&amp; app.<span class="hljs-property">$vm</span>.<span class="hljs-property">$i18n</span>) &#123;<br>          <span class="hljs-variable language_">this</span>.<span class="hljs-property">_i18n</span> = app.<span class="hljs-property">$vm</span>.<span class="hljs-property">$i18n</span>;<br>        &#125;<br>      &#125;<br>      <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">mpType</span> !== <span class="hljs-string">&#x27;app&#x27;</span>) &#123;<br>        <span class="hljs-title function_">initRefs</span>(<span class="hljs-variable language_">this</span>);<br>        <span class="hljs-title function_">initMocks</span>(<span class="hljs-variable language_">this</span>, mocks);<br>      &#125;<br>    &#125;<br>  &#125;);<br><br>  <span class="hljs-keyword">const</span> appOptions = &#123;<br>    onLaunch (args) &#123;<br>      <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">$vm</span>) &#123; <span class="hljs-comment">// 已经初始化过了，主要是为了百度，百度 onShow 在 onLaunch 之前</span><br>        <span class="hljs-keyword">return</span><br>      &#125;<br>      &#123;<br>        <span class="hljs-keyword">if</span> (wx.<span class="hljs-property">canIUse</span> &amp;&amp; !wx.<span class="hljs-title function_">canIUse</span>(<span class="hljs-string">&#x27;nextTick&#x27;</span>)) &#123; <span class="hljs-comment">// 事实 上2.2.3 即可，简单使用 2.3.0 的 nextTick 判断</span><br>          <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;当前微信基础库版本过低，请将 微信开发者工具-详情-项目设置-调试基础库版本 更换为`2.3.0`以上&#x27;</span>);<br>        &#125;<br>      &#125;<br><br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">$vm</span> = vm;<br><br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">$vm</span>.<span class="hljs-property">$mp</span> = &#123;<br>        <span class="hljs-attr">app</span>: <span class="hljs-variable language_">this</span><br>      &#125;;<br><br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">$vm</span>.<span class="hljs-property">$scope</span> = <span class="hljs-variable language_">this</span>;<br>      <span class="hljs-comment">// vm 上也挂载 globalData</span><br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">$vm</span>.<span class="hljs-property">globalData</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">globalData</span>;<br><br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">$vm</span>.<span class="hljs-property">_isMounted</span> = <span class="hljs-literal">true</span>;<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">$vm</span>.<span class="hljs-title function_">__call_hook</span>(<span class="hljs-string">&#x27;mounted&#x27;</span>, args);<br><br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">$vm</span>.<span class="hljs-title function_">__call_hook</span>(<span class="hljs-string">&#x27;onLaunch&#x27;</span>, args);<br>    &#125;<br>  &#125;;<br><br>  <span class="hljs-comment">// 兼容旧版本 globalData</span><br>  appOptions.<span class="hljs-property">globalData</span> = vm.<span class="hljs-property">$options</span>.<span class="hljs-property">globalData</span> || &#123;&#125;;<br>  <span class="hljs-comment">// 将 methods 中的方法挂在 getApp() 中</span><br>  <span class="hljs-keyword">const</span> methods = vm.<span class="hljs-property">$options</span>.<span class="hljs-property">methods</span>;<br>  <span class="hljs-keyword">if</span> (methods) &#123;<br>    <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">keys</span>(methods).<span class="hljs-title function_">forEach</span>(<span class="hljs-function"><span class="hljs-params">name</span> =&gt;</span> &#123;<br>      appOptions[name] = methods[name];<br>    &#125;);<br>  &#125;<br><br>  <span class="hljs-title function_">initHooks</span>(appOptions, hooks);<br><br>  <span class="hljs-keyword">return</span> appOptions<br>&#125;<br><br><span class="hljs-keyword">const</span> mocks = [<span class="hljs-string">&#x27;__route__&#x27;</span>, <span class="hljs-string">&#x27;__wxExparserNodeId__&#x27;</span>, <span class="hljs-string">&#x27;__wxWebviewId__&#x27;</span>];<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">findVmByVueId</span> (vm, vuePid) &#123;<br>  <span class="hljs-keyword">const</span> $children = vm.<span class="hljs-property">$children</span>;<br>  <span class="hljs-comment">// 优先查找直属(反向查找:https://github.com/dcloudio/uni-app/issues/1200)</span><br>  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = $children.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>; i &gt;= <span class="hljs-number">0</span>; i--) &#123;<br>    <span class="hljs-keyword">const</span> childVm = $children[i];<br>    <span class="hljs-keyword">if</span> (childVm.<span class="hljs-property">$scope</span>.<span class="hljs-property">_$vueId</span> === vuePid) &#123;<br>      <span class="hljs-keyword">return</span> childVm<br>    &#125;<br>  &#125;<br>  <span class="hljs-comment">// 反向递归查找</span><br>  <span class="hljs-keyword">let</span> parentVm;<br>  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = $children.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>; i &gt;= <span class="hljs-number">0</span>; i--) &#123;<br>    parentVm = <span class="hljs-title function_">findVmByVueId</span>($children[i], vuePid);<br>    <span class="hljs-keyword">if</span> (parentVm) &#123;<br>      <span class="hljs-keyword">return</span> parentVm<br>    &#125;<br>  &#125;<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">initBehavior</span> (options) &#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-title class_">Behavior</span>(options)<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">isPage</span> () &#123;<br>  <span class="hljs-keyword">return</span> !!<span class="hljs-variable language_">this</span>.<span class="hljs-property">route</span><br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">initRelation</span> (detail) &#123;<br>  <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">triggerEvent</span>(<span class="hljs-string">&#x27;__l&#x27;</span>, detail);<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">selectAllComponents</span> (mpInstance, selector, $refs) &#123;<br>  <span class="hljs-keyword">const</span> components = mpInstance.<span class="hljs-title function_">selectAllComponents</span>(selector);<br>  components.<span class="hljs-title function_">forEach</span>(<span class="hljs-function"><span class="hljs-params">component</span> =&gt;</span> &#123;<br>    <span class="hljs-keyword">const</span> ref = component.<span class="hljs-property">dataset</span>.<span class="hljs-property">ref</span>;<br>    $refs[ref] = component.<span class="hljs-property">$vm</span> || component;<br>    &#123;<br>      <span class="hljs-keyword">if</span> (component.<span class="hljs-property">dataset</span>.<span class="hljs-property">vueGeneric</span> === <span class="hljs-string">&#x27;scoped&#x27;</span>) &#123;<br>        component.<span class="hljs-title function_">selectAllComponents</span>(<span class="hljs-string">&#x27;.scoped-ref&#x27;</span>).<span class="hljs-title function_">forEach</span>(<span class="hljs-function"><span class="hljs-params">scopedComponent</span> =&gt;</span> &#123;<br>          <span class="hljs-title function_">selectAllComponents</span>(scopedComponent, selector, $refs);<br>        &#125;);<br>      &#125;<br>    &#125;<br>  &#125;);<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">initRefs</span> (vm) &#123;<br>  <span class="hljs-keyword">const</span> mpInstance = vm.<span class="hljs-property">$scope</span>;<br>  <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">defineProperty</span>(vm, <span class="hljs-string">&#x27;$refs&#x27;</span>, &#123;<br>    get () &#123;<br>      <span class="hljs-keyword">const</span> $refs = &#123;&#125;;<br>      <span class="hljs-title function_">selectAllComponents</span>(mpInstance, <span class="hljs-string">&#x27;.vue-ref&#x27;</span>, $refs);<br>      <span class="hljs-comment">// TODO 暂不考虑 for 中的 scoped</span><br>      <span class="hljs-keyword">const</span> forComponents = mpInstance.<span class="hljs-title function_">selectAllComponents</span>(<span class="hljs-string">&#x27;.vue-ref-in-for&#x27;</span>);<br>      forComponents.<span class="hljs-title function_">forEach</span>(<span class="hljs-function"><span class="hljs-params">component</span> =&gt;</span> &#123;<br>        <span class="hljs-keyword">const</span> ref = component.<span class="hljs-property">dataset</span>.<span class="hljs-property">ref</span>;<br>        <span class="hljs-keyword">if</span> (!$refs[ref]) &#123;<br>          $refs[ref] = [];<br>        &#125;<br>        $refs[ref].<span class="hljs-title function_">push</span>(component.<span class="hljs-property">$vm</span> || component);<br>      &#125;);<br>      <span class="hljs-keyword">return</span> $refs<br>    &#125;<br>  &#125;);<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">handleLink</span> (event) &#123;<br>  <span class="hljs-keyword">const</span> &#123;<br>    vuePid,<br>    vueOptions<br>  &#125; = event.<span class="hljs-property">detail</span> || event.<span class="hljs-property">value</span>; <span class="hljs-comment">// detail 是微信,value 是百度(dipatch)</span><br><br>  <span class="hljs-keyword">let</span> parentVm;<br><br>  <span class="hljs-keyword">if</span> (vuePid) &#123;<br>    parentVm = <span class="hljs-title function_">findVmByVueId</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">$vm</span>, vuePid);<br>  &#125;<br><br>  <span class="hljs-keyword">if</span> (!parentVm) &#123;<br>    parentVm = <span class="hljs-variable language_">this</span>.<span class="hljs-property">$vm</span>;<br>  &#125;<br><br>  vueOptions.<span class="hljs-property">parent</span> = parentVm;<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">parseApp</span> (vm) &#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-title function_">parseBaseApp</span>(vm, &#123;<br>    mocks,<br>    initRefs<br>  &#125;)<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">createApp</span> (vm) &#123;<br>  <span class="hljs-title class_">App</span>(<span class="hljs-title function_">parseApp</span>(vm));<br>  <span class="hljs-keyword">return</span> vm<br>&#125;<br><br><span class="hljs-keyword">const</span> encodeReserveRE = <span class="hljs-regexp">/[!&#x27;()*]/g</span>;<br><span class="hljs-keyword">const</span> <span class="hljs-title function_">encodeReserveReplacer</span> = c =&gt; <span class="hljs-string">&#x27;%&#x27;</span> + c.<span class="hljs-title function_">charCodeAt</span>(<span class="hljs-number">0</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>);<br><span class="hljs-keyword">const</span> commaRE = <span class="hljs-regexp">/%2C/g</span>;<br><br><span class="hljs-comment">// fixed encodeURIComponent which is more conformant to RFC3986:</span><br><span class="hljs-comment">// - escapes [!&#x27;()*]</span><br><span class="hljs-comment">// - preserve commas</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">encode</span> = str =&gt; <span class="hljs-built_in">encodeURIComponent</span>(str)<br>  .<span class="hljs-title function_">replace</span>(encodeReserveRE, encodeReserveReplacer)<br>  .<span class="hljs-title function_">replace</span>(commaRE, <span class="hljs-string">&#x27;,&#x27;</span>);<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">stringifyQuery</span> (obj, encodeStr = encode) &#123;<br>  <span class="hljs-keyword">const</span> res = obj ? <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">keys</span>(obj).<span class="hljs-title function_">map</span>(<span class="hljs-function"><span class="hljs-params">key</span> =&gt;</span> &#123;<br>    <span class="hljs-keyword">const</span> val = obj[key];<br><br>    <span class="hljs-keyword">if</span> (val === <span class="hljs-literal">undefined</span>) &#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;&#x27;</span><br>    &#125;<br><br>    <span class="hljs-keyword">if</span> (val === <span class="hljs-literal">null</span>) &#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-title function_">encodeStr</span>(key)<br>    &#125;<br><br>    <span class="hljs-keyword">if</span> (<span class="hljs-title class_">Array</span>.<span class="hljs-title function_">isArray</span>(val)) &#123;<br>      <span class="hljs-keyword">const</span> result = [];<br>      val.<span class="hljs-title function_">forEach</span>(<span class="hljs-function"><span class="hljs-params">val2</span> =&gt;</span> &#123;<br>        <span class="hljs-keyword">if</span> (val2 === <span class="hljs-literal">undefined</span>) &#123;<br>          <span class="hljs-keyword">return</span><br>        &#125;<br>        <span class="hljs-keyword">if</span> (val2 === <span class="hljs-literal">null</span>) &#123;<br>          result.<span class="hljs-title function_">push</span>(<span class="hljs-title function_">encodeStr</span>(key));<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>          result.<span class="hljs-title function_">push</span>(<span class="hljs-title function_">encodeStr</span>(key) + <span class="hljs-string">&#x27;=&#x27;</span> + <span class="hljs-title function_">encodeStr</span>(val2));<br>        &#125;<br>      &#125;);<br>      <span class="hljs-keyword">return</span> result.<span class="hljs-title function_">join</span>(<span class="hljs-string">&#x27;&amp;&#x27;</span>)<br>    &#125;<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">encodeStr</span>(key) + <span class="hljs-string">&#x27;=&#x27;</span> + <span class="hljs-title function_">encodeStr</span>(val)<br>  &#125;).<span class="hljs-title function_">filter</span>(<span class="hljs-function"><span class="hljs-params">x</span> =&gt;</span> x.<span class="hljs-property">length</span> &gt; <span class="hljs-number">0</span>).<span class="hljs-title function_">join</span>(<span class="hljs-string">&#x27;&amp;&#x27;</span>) : <span class="hljs-literal">null</span>;<br>  <span class="hljs-keyword">return</span> res ? <span class="hljs-string">`?<span class="hljs-subst">$&#123;res&#125;</span>`</span> : <span class="hljs-string">&#x27;&#x27;</span><br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">parseBaseComponent</span> (vueComponentOptions, &#123;<br>  isPage,<br>  initRelation<br>&#125; = &#123;&#125;) &#123;<br>  <span class="hljs-keyword">const</span> [<span class="hljs-title class_">VueComponent</span>, vueOptions] = <span class="hljs-title function_">initVueComponent</span>(<span class="hljs-title class_">Vue</span>, vueComponentOptions);<br><br>  <span class="hljs-keyword">const</span> options = &#123;<br>    <span class="hljs-attr">multipleSlots</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-attr">addGlobalClass</span>: <span class="hljs-literal">true</span>,<br>    ...(vueOptions.<span class="hljs-property">options</span> || &#123;&#125;)<br>  &#125;;<br><br>  &#123;<br>    <span class="hljs-comment">// 微信 multipleSlots 部分情况有 bug，导致内容顺序错乱 如 u-list，提供覆盖选项</span><br>    <span class="hljs-keyword">if</span> (vueOptions[<span class="hljs-string">&#x27;mp-weixin&#x27;</span>] &amp;&amp; vueOptions[<span class="hljs-string">&#x27;mp-weixin&#x27;</span>].<span class="hljs-property">options</span>) &#123;<br>      <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">assign</span>(options, vueOptions[<span class="hljs-string">&#x27;mp-weixin&#x27;</span>].<span class="hljs-property">options</span>);<br>    &#125;<br>  &#125;<br><br>  <span class="hljs-keyword">const</span> componentOptions = &#123;<br>    options,<br>    <span class="hljs-attr">data</span>: <span class="hljs-title function_">initData</span>(vueOptions, <span class="hljs-title class_">Vue</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>),<br>    <span class="hljs-attr">behaviors</span>: <span class="hljs-title function_">initBehaviors</span>(vueOptions, initBehavior),<br>    <span class="hljs-attr">properties</span>: <span class="hljs-title function_">initProperties</span>(vueOptions.<span class="hljs-property">props</span>, <span class="hljs-literal">false</span>, vueOptions.<span class="hljs-property">__file</span>),<br>    <span class="hljs-attr">lifetimes</span>: &#123;<br>      attached () &#123;<br>        <span class="hljs-keyword">const</span> properties = <span class="hljs-variable language_">this</span>.<span class="hljs-property">properties</span>;<br><br>        <span class="hljs-keyword">const</span> options = &#123;<br>          <span class="hljs-attr">mpType</span>: isPage.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>) ? <span class="hljs-string">&#x27;page&#x27;</span> : <span class="hljs-string">&#x27;component&#x27;</span>,<br>          <span class="hljs-attr">mpInstance</span>: <span class="hljs-variable language_">this</span>,<br>          <span class="hljs-attr">propsData</span>: properties<br>        &#125;;<br><br>        <span class="hljs-title function_">initVueIds</span>(properties.<span class="hljs-property">vueId</span>, <span class="hljs-variable language_">this</span>);<br><br>        <span class="hljs-comment">// 处理父子关系</span><br>        initRelation.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>, &#123;<br>          <span class="hljs-attr">vuePid</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">_$vuePid</span>,<br>          <span class="hljs-attr">vueOptions</span>: options<br>        &#125;);<br><br>        <span class="hljs-comment">// 初始化 vue 实例</span><br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">$vm</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">VueComponent</span>(options);<br><br>        <span class="hljs-comment">// 处理$slots,$scopedSlots（暂不支持动态变化$slots）</span><br>        <span class="hljs-title function_">initSlots</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">$vm</span>, properties.<span class="hljs-property">vueSlots</span>);<br><br>        <span class="hljs-comment">// 触发首次 setData</span><br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">$vm</span>.$mount();<br>      &#125;,<br>      ready () &#123;<br>        <span class="hljs-comment">// 当组件 props 默认值为 true，初始化时传入 false 会导致 created,ready 触发, 但 attached 不触发</span><br>        <span class="hljs-comment">// https://developers.weixin.qq.com/community/develop/doc/00066ae2844cc0f8eb883e2a557800</span><br>        <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">$vm</span>) &#123;<br>          <span class="hljs-variable language_">this</span>.<span class="hljs-property">$vm</span>.<span class="hljs-property">_isMounted</span> = <span class="hljs-literal">true</span>;<br>          <span class="hljs-variable language_">this</span>.<span class="hljs-property">$vm</span>.<span class="hljs-title function_">__call_hook</span>(<span class="hljs-string">&#x27;mounted&#x27;</span>);<br>          <span class="hljs-variable language_">this</span>.<span class="hljs-property">$vm</span>.<span class="hljs-title function_">__call_hook</span>(<span class="hljs-string">&#x27;onReady&#x27;</span>);<br>        &#125;<br>      &#125;,<br>      detached () &#123;<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">$vm</span> &amp;&amp; <span class="hljs-variable language_">this</span>.<span class="hljs-property">$vm</span>.$destroy();<br>      &#125;<br>    &#125;,<br>    <span class="hljs-attr">pageLifetimes</span>: &#123;<br>      show (args) &#123;<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">$vm</span> &amp;&amp; <span class="hljs-variable language_">this</span>.<span class="hljs-property">$vm</span>.<span class="hljs-title function_">__call_hook</span>(<span class="hljs-string">&#x27;onPageShow&#x27;</span>, args);<br>      &#125;,<br>      hide () &#123;<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">$vm</span> &amp;&amp; <span class="hljs-variable language_">this</span>.<span class="hljs-property">$vm</span>.<span class="hljs-title function_">__call_hook</span>(<span class="hljs-string">&#x27;onPageHide&#x27;</span>);<br>      &#125;,<br>      resize (size) &#123;<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">$vm</span> &amp;&amp; <span class="hljs-variable language_">this</span>.<span class="hljs-property">$vm</span>.<span class="hljs-title function_">__call_hook</span>(<span class="hljs-string">&#x27;onPageResize&#x27;</span>, size);<br>      &#125;<br>    &#125;,<br>    <span class="hljs-attr">methods</span>: &#123;<br>      <span class="hljs-attr">__l</span>: handleLink,<br>      <span class="hljs-attr">__e</span>: handleEvent<br>    &#125;<br>  &#125;;<br>  <span class="hljs-comment">// externalClasses</span><br>  <span class="hljs-keyword">if</span> (vueOptions.<span class="hljs-property">externalClasses</span>) &#123;<br>    componentOptions.<span class="hljs-property">externalClasses</span> = vueOptions.<span class="hljs-property">externalClasses</span>;<br>  &#125;<br><br>  <span class="hljs-keyword">if</span> (<span class="hljs-title class_">Array</span>.<span class="hljs-title function_">isArray</span>(vueOptions.<span class="hljs-property">wxsCallMethods</span>)) &#123;<br>    vueOptions.<span class="hljs-property">wxsCallMethods</span>.<span class="hljs-title function_">forEach</span>(<span class="hljs-function"><span class="hljs-params">callMethod</span> =&gt;</span> &#123;<br>      componentOptions.<span class="hljs-property">methods</span>[callMethod] = <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">$vm</span>[callMethod](args)<br>      &#125;;<br>    &#125;);<br>  &#125;<br><br>  <span class="hljs-keyword">if</span> (isPage) &#123;<br>    <span class="hljs-keyword">return</span> componentOptions<br>  &#125;<br>  <span class="hljs-keyword">return</span> [componentOptions, <span class="hljs-title class_">VueComponent</span>]<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">parseComponent</span> (vueComponentOptions) &#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-title function_">parseBaseComponent</span>(vueComponentOptions, &#123;<br>    isPage,<br>    initRelation<br>  &#125;)<br>&#125;<br><br><span class="hljs-keyword">const</span> hooks$1 = [<br>  <span class="hljs-string">&#x27;onShow&#x27;</span>,<br>  <span class="hljs-string">&#x27;onHide&#x27;</span>,<br>  <span class="hljs-string">&#x27;onUnload&#x27;</span><br>];<br><br>hooks$1.<span class="hljs-title function_">push</span>(...<span class="hljs-variable constant_">PAGE_EVENT_HOOKS</span>);<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">parseBasePage</span> (vuePageOptions, &#123;<br>  isPage,<br>  initRelation<br>&#125;) &#123;<br>  <span class="hljs-keyword">const</span> pageOptions = <span class="hljs-title function_">parseComponent</span>(vuePageOptions);<br><br>  <span class="hljs-title function_">initHooks</span>(pageOptions.<span class="hljs-property">methods</span>, hooks$1, vuePageOptions);<br><br>  pageOptions.<span class="hljs-property">methods</span>.<span class="hljs-property">onLoad</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params">query</span>) &#123;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">options</span> = query;<br>    <span class="hljs-keyword">const</span> copyQuery = <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">assign</span>(&#123;&#125;, query);<br>    <span class="hljs-keyword">delete</span> copyQuery.<span class="hljs-property">__id__</span>;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">$page</span> = &#123;<br>      <span class="hljs-attr">fullPath</span>: <span class="hljs-string">&#x27;/&#x27;</span> + (<span class="hljs-variable language_">this</span>.<span class="hljs-property">route</span> || <span class="hljs-variable language_">this</span>.<span class="hljs-property">is</span>) + <span class="hljs-title function_">stringifyQuery</span>(copyQuery)<br>    &#125;;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">$vm</span>.<span class="hljs-property">$mp</span>.<span class="hljs-property">query</span> = query; <span class="hljs-comment">// 兼容 mpvue</span><br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">$vm</span>.<span class="hljs-title function_">__call_hook</span>(<span class="hljs-string">&#x27;onLoad&#x27;</span>, query);<br>  &#125;;<br><br>  <span class="hljs-keyword">return</span> pageOptions<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">parsePage</span> (vuePageOptions) &#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-title function_">parseBasePage</span>(vuePageOptions, &#123;<br>    isPage,<br>    initRelation<br>  &#125;)<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">createPage</span> (vuePageOptions) &#123;<br>  &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title class_">Component</span>(<span class="hljs-title function_">parsePage</span>(vuePageOptions))<br>  &#125;<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">createComponent</span> (vueOptions) &#123;<br>  &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title class_">Component</span>(<span class="hljs-title function_">parseComponent</span>(vueOptions))<br>  &#125;<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">createSubpackageApp</span> (vm) &#123;<br>  <span class="hljs-keyword">const</span> appOptions = <span class="hljs-title function_">parseApp</span>(vm);<br>  <span class="hljs-keyword">const</span> app = <span class="hljs-title function_">getApp</span>(&#123;<br>    <span class="hljs-attr">allowDefault</span>: <span class="hljs-literal">true</span><br>  &#125;);<br>  <span class="hljs-keyword">const</span> globalData = app.<span class="hljs-property">globalData</span>;<br>  <span class="hljs-keyword">if</span> (globalData) &#123;<br>    <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">keys</span>(appOptions.<span class="hljs-property">globalData</span>).<span class="hljs-title function_">forEach</span>(<span class="hljs-function"><span class="hljs-params">name</span> =&gt;</span> &#123;<br>      <span class="hljs-keyword">if</span> (!<span class="hljs-title function_">hasOwn</span>(globalData, name)) &#123;<br>        globalData[name] = appOptions.<span class="hljs-property">globalData</span>[name];<br>      &#125;<br>    &#125;);<br>  &#125;<br>  <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">keys</span>(appOptions).<span class="hljs-title function_">forEach</span>(<span class="hljs-function"><span class="hljs-params">name</span> =&gt;</span> &#123;<br>    <span class="hljs-keyword">if</span> (!<span class="hljs-title function_">hasOwn</span>(app, name)) &#123;<br>      app[name] = appOptions[name];<br>    &#125;<br>  &#125;);<br>  <span class="hljs-keyword">if</span> (<span class="hljs-title function_">isFn</span>(appOptions.<span class="hljs-property">onShow</span>) &amp;&amp; wx.<span class="hljs-property">onAppShow</span>) &#123;<br>    wx.<span class="hljs-title function_">onAppShow</span>(<span class="hljs-function">(<span class="hljs-params">...args</span>) =&gt;</span> &#123;<br>      appOptions.<span class="hljs-property">onShow</span>.<span class="hljs-title function_">apply</span>(app, args);<br>    &#125;);<br>  &#125;<br>  <span class="hljs-keyword">if</span> (<span class="hljs-title function_">isFn</span>(appOptions.<span class="hljs-property">onHide</span>) &amp;&amp; wx.<span class="hljs-property">onAppHide</span>) &#123;<br>    wx.<span class="hljs-title function_">onAppHide</span>(<span class="hljs-function">(<span class="hljs-params">...args</span>) =&gt;</span> &#123;<br>      appOptions.<span class="hljs-property">onHide</span>.<span class="hljs-title function_">apply</span>(app, args);<br>    &#125;);<br>  &#125;<br>  <span class="hljs-keyword">if</span> (<span class="hljs-title function_">isFn</span>(appOptions.<span class="hljs-property">onLaunch</span>)) &#123;<br>    <span class="hljs-keyword">const</span> args = wx.<span class="hljs-property">getLaunchOptionsSync</span> &amp;&amp; wx.<span class="hljs-title function_">getLaunchOptionsSync</span>();<br>    appOptions.<span class="hljs-property">onLaunch</span>.<span class="hljs-title function_">call</span>(app, args);<br>  &#125;<br>  <span class="hljs-keyword">return</span> vm<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">createPlugin</span> (vm) &#123;<br>  <span class="hljs-keyword">const</span> appOptions = <span class="hljs-title function_">parseApp</span>(vm);<br>  <span class="hljs-keyword">if</span> (<span class="hljs-title function_">isFn</span>(appOptions.<span class="hljs-property">onShow</span>) &amp;&amp; wx.<span class="hljs-property">onAppShow</span>) &#123;<br>    wx.<span class="hljs-title function_">onAppShow</span>(<span class="hljs-function">(<span class="hljs-params">...args</span>) =&gt;</span> &#123;<br>      appOptions.<span class="hljs-property">onShow</span>.<span class="hljs-title function_">apply</span>(vm, args);<br>    &#125;);<br>  &#125;<br>  <span class="hljs-keyword">if</span> (<span class="hljs-title function_">isFn</span>(appOptions.<span class="hljs-property">onHide</span>) &amp;&amp; wx.<span class="hljs-property">onAppHide</span>) &#123;<br>    wx.<span class="hljs-title function_">onAppHide</span>(<span class="hljs-function">(<span class="hljs-params">...args</span>) =&gt;</span> &#123;<br>      appOptions.<span class="hljs-property">onHide</span>.<span class="hljs-title function_">apply</span>(vm, args);<br>    &#125;);<br>  &#125;<br>  <span class="hljs-keyword">if</span> (<span class="hljs-title function_">isFn</span>(appOptions.<span class="hljs-property">onLaunch</span>)) &#123;<br>    <span class="hljs-keyword">const</span> args = wx.<span class="hljs-property">getLaunchOptionsSync</span> &amp;&amp; wx.<span class="hljs-title function_">getLaunchOptionsSync</span>();<br>    appOptions.<span class="hljs-property">onLaunch</span>.<span class="hljs-title function_">call</span>(vm, args);<br>  &#125;<br>  <span class="hljs-keyword">return</span> vm<br>&#125;<br><br>todos.<span class="hljs-title function_">forEach</span>(<span class="hljs-function"><span class="hljs-params">todoApi</span> =&gt;</span> &#123;<br>  protocols[todoApi] = <span class="hljs-literal">false</span>;<br>&#125;);<br><br>canIUses.<span class="hljs-title function_">forEach</span>(<span class="hljs-function"><span class="hljs-params">canIUseApi</span> =&gt;</span> &#123;<br>  <span class="hljs-keyword">const</span> apiName = protocols[canIUseApi] &amp;&amp; protocols[canIUseApi].<span class="hljs-property">name</span> ? protocols[canIUseApi].<span class="hljs-property">name</span><br>    : canIUseApi;<br>  <span class="hljs-keyword">if</span> (!wx.<span class="hljs-title function_">canIUse</span>(apiName)) &#123;<br>    protocols[canIUseApi] = <span class="hljs-literal">false</span>;<br>  &#125;<br>&#125;);<br><br><span class="hljs-keyword">let</span> uni = &#123;&#125;;<br><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> <span class="hljs-title class_">Proxy</span> !== <span class="hljs-string">&#x27;undefined&#x27;</span> &amp;&amp; <span class="hljs-string">&quot;mp-weixin&quot;</span> !== <span class="hljs-string">&#x27;app-plus&#x27;</span>) &#123;<br>  uni = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Proxy</span>(&#123;&#125;, &#123;<br>    get (target, name) &#123;<br>      <span class="hljs-keyword">if</span> (<span class="hljs-title function_">hasOwn</span>(target, name)) &#123;<br>        <span class="hljs-keyword">return</span> target[name]<br>      &#125;<br>      <span class="hljs-keyword">if</span> (baseApi[name]) &#123;<br>        <span class="hljs-keyword">return</span> baseApi[name]<br>      &#125;<br>      <span class="hljs-keyword">if</span> (api[name]) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-title function_">promisify</span>(name, api[name])<br>      &#125;<br>      &#123;<br>        <span class="hljs-keyword">if</span> (extraApi[name]) &#123;<br>          <span class="hljs-keyword">return</span> <span class="hljs-title function_">promisify</span>(name, extraApi[name])<br>        &#125;<br>        <span class="hljs-keyword">if</span> (todoApis[name]) &#123;<br>          <span class="hljs-keyword">return</span> <span class="hljs-title function_">promisify</span>(name, todoApis[name])<br>        &#125;<br>      &#125;<br>      <span class="hljs-keyword">if</span> (eventApi[name]) &#123;<br>        <span class="hljs-keyword">return</span> eventApi[name]<br>      &#125;<br>      <span class="hljs-keyword">if</span> (!<span class="hljs-title function_">hasOwn</span>(wx, name) &amp;&amp; !<span class="hljs-title function_">hasOwn</span>(protocols, name)) &#123;<br>        <span class="hljs-keyword">return</span><br>      &#125;<br>      <span class="hljs-keyword">return</span> <span class="hljs-title function_">promisify</span>(name, <span class="hljs-title function_">wrapper</span>(name, wx[name]))<br>    &#125;,<br>    set (target, name, value) &#123;<br>      target[name] = value;<br>      <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span><br>    &#125;<br>  &#125;);<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>  <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">keys</span>(baseApi).<span class="hljs-title function_">forEach</span>(<span class="hljs-function"><span class="hljs-params">name</span> =&gt;</span> &#123;<br>    uni[name] = baseApi[name];<br>  &#125;);<br><br>  &#123;<br>    <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">keys</span>(todoApis).<span class="hljs-title function_">forEach</span>(<span class="hljs-function"><span class="hljs-params">name</span> =&gt;</span> &#123;<br>      uni[name] = <span class="hljs-title function_">promisify</span>(name, todoApis[name]);<br>    &#125;);<br>    <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">keys</span>(extraApi).<span class="hljs-title function_">forEach</span>(<span class="hljs-function"><span class="hljs-params">name</span> =&gt;</span> &#123;<br>      uni[name] = <span class="hljs-title function_">promisify</span>(name, todoApis[name]);<br>    &#125;);<br>  &#125;<br><br>  <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">keys</span>(eventApi).<span class="hljs-title function_">forEach</span>(<span class="hljs-function"><span class="hljs-params">name</span> =&gt;</span> &#123;<br>    uni[name] = eventApi[name];<br>  &#125;);<br><br>  <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">keys</span>(api).<span class="hljs-title function_">forEach</span>(<span class="hljs-function"><span class="hljs-params">name</span> =&gt;</span> &#123;<br>    uni[name] = <span class="hljs-title function_">promisify</span>(name, api[name]);<br>  &#125;);<br><br>  <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">keys</span>(wx).<span class="hljs-title function_">forEach</span>(<span class="hljs-function"><span class="hljs-params">name</span> =&gt;</span> &#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-title function_">hasOwn</span>(wx, name) || <span class="hljs-title function_">hasOwn</span>(protocols, name)) &#123;<br>      uni[name] = <span class="hljs-title function_">promisify</span>(name, <span class="hljs-title function_">wrapper</span>(name, wx[name]));<br>    &#125;<br>  &#125;);<br>&#125;<br><br>wx.<span class="hljs-property">createApp</span> = createApp;<br>wx.<span class="hljs-property">createPage</span> = createPage;<br>wx.<span class="hljs-property">createComponent</span> = createComponent;<br>wx.<span class="hljs-property">createSubpackageApp</span> = createSubpackageApp;<br>wx.<span class="hljs-property">createPlugin</span> = createPlugin;<br><br><span class="hljs-keyword">var</span> uni$1 = uni;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> uni$1;<br><span class="hljs-keyword">export</span> &#123; createApp, createComponent, createPage, createPlugin, createSubpackageApp &#125;;<br><br></code></pre></td></tr></table></figure><p>事实上，从生成的产物文件中来看，也是可以找到的。</p><p><img src="/2022/03/08/uni-app%E7%9A%84%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90/image-20220308143533022.png" alt="image-20220308143533022" loading="lazy" data-src="/2022/03/08/uni-app%E7%9A%84%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90/image-20220308143533022.png"></p><!-- flag of hidden posts -->]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>小程序</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>浅析Uni-App的加载过程</title>
    <link href="/2022/03/07/%E6%B5%85%E6%9E%90uni-app%E7%9A%84%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B/"/>
    <url>/2022/03/07/%E6%B5%85%E6%9E%90uni-app%E7%9A%84%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<p>因为项目使用的<a href="https://github.com/dcloudio/uni-app">uni-app</a>来做小程序，所以，不得不去研究下uni-app对小程序打包的整个过程，众所周知，最简单的办法是去github官网去看看他的readme文件，介绍，无奈没发现什么有价值的介绍，只能自己单步调试一下打包的过程了。</p><h3 id="step1、在vscode中配置调试启动配置"><a href="#step1、在vscode中配置调试启动配置" class="headerlink" title="step1、在vscode中配置调试启动配置"></a>step1、在vscode中配置调试启动配置</h3><p>在launch.json中添加这一项就ok，这样就可以已调试的方式启动  yarn 命令，我这里是start。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-comment">// A launch configuration that compiles the extension and then opens it inside a new window</span><br><span class="hljs-comment">// Use IntelliSense to learn about possible attributes.</span><br><span class="hljs-comment">// Hover to view descriptions of existing attributes.</span><br><span class="hljs-comment">// For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387</span><br><span class="hljs-punctuation">&#123;</span><br><span class="hljs-attr">&quot;version&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;0.2.0&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;configurations&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br><span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;node&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;request&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;launch&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;yarn&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;runtimeExecutable&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;yarn&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;runtimeArgs&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>        <span class="hljs-string">&quot;start&quot;</span><br>      <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;port&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">5858</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;cwd&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;$&#123;workspaceRoot&#125;&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;timeout&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">10000</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>....<br><span class="hljs-punctuation">&#125;</span><br><br></code></pre></td></tr></table></figure><p>然后就是启动调试了，当然可以在适当的位置先配置一个断点，比如在这个文件中</p><p><code>./node_modules/@dcloudio/vue-cli-plugin-uni/lib/env.js</code>增加一个断点</p><p><img src="/2022/03/07/%E6%B5%85%E6%9E%90uni-app%E7%9A%84%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B/image-20220307185142192.png" alt="image-20220307185142192" loading="lazy" data-src="/2022/03/07/%E6%B5%85%E6%9E%90uni-app%E7%9A%84%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B/image-20220307185142192.png"></p><p>断掉断到之后，可以发现，栈底是在执行这个文件的代码<code>/internal/main/run_main_module.js</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-meta">&#x27;use strict&#x27;</span>;<br><br><span class="hljs-keyword">const</span> &#123;<br>  prepareMainThreadExecution<br>&#125; = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;internal/bootstrap/pre_execution&#x27;</span>);<br><br><span class="hljs-title function_">prepareMainThreadExecution</span>(<span class="hljs-literal">true</span>);<br><br><span class="hljs-keyword">const</span> <span class="hljs-title class_">CJSModule</span> = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;internal/modules/cjs/loader&#x27;</span>);<br><br><span class="hljs-title function_">markBootstrapComplete</span>();<br><br><span class="hljs-comment">// Note: this actually tries to run the module as a ESM first if</span><br><span class="hljs-comment">// --experimental-modules is on.</span><br><span class="hljs-comment">// TODO(joyeecheung): can we move that logic to here? Note that this</span><br><span class="hljs-comment">// is an undocumented method available via `require(&#x27;module&#x27;).runMain`</span><br><span class="hljs-title class_">CJSModule</span>.<span class="hljs-title function_">runMain</span>();<br></code></pre></td></tr></table></figure><p>所以，我们发现了一个点，整个构建的开始就是从CJSModule.runMain();这句话开始的。</p><h3 id="step2、分析uni的打包过程中加载了哪些文件"><a href="#step2、分析uni的打包过程中加载了哪些文件" class="headerlink" title="step2、分析uni的打包过程中加载了哪些文件"></a>step2、分析uni的打包过程中加载了哪些文件</h3><p><img src="/2022/03/07/%E6%B5%85%E6%9E%90uni-app%E7%9A%84%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B/image-20220307190611229.png" alt="image-20220307190611229" loading="lazy" data-src="/2022/03/07/%E6%B5%85%E6%9E%90uni-app%E7%9A%84%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B/image-20220307190611229.png"></p><p>这里应该就是解析参数，准备开始执行yarn命令了，我们看一看我们的yarn命令，</p><p><code>UNI_PLATFORM=mp-weixin vue-cli-service uni-build --watch</code>，所以，第一个加载的模块应该就是</p><p>@vue&#x2F;cli-service&#x2F;bin&#x2F;vue-cli-service.js</p><p><img src="/2022/03/07/%E6%B5%85%E6%9E%90uni-app%E7%9A%84%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B/image-20220307190027189.png" alt="image-20220307190027189" loading="lazy" data-src="/2022/03/07/%E6%B5%85%E6%9E%90uni-app%E7%9A%84%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B/image-20220307190027189.png"></p><p>随后的过程记录粗粒度一点点，后面vue-cli-service会加载各种plugin，具体怎么判断是否是一个plugin，有一定的规则命名;</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> pluginRE = <span class="hljs-regexp">/^(@vue\/|vue-|@[\w-]+(\.)?[\w-]+\/vue-)cli-plugin-/</span><br><span class="hljs-keyword">const</span> scopeRE = <span class="hljs-regexp">/^@[\w-]+(\.)?[\w-]+\//</span><br><span class="hljs-keyword">const</span> officialRE = <span class="hljs-regexp">/^@vue\//</span><br><br><span class="hljs-keyword">const</span> officialPlugins = [<br>  <span class="hljs-string">&#x27;babel&#x27;</span>,<br>  <span class="hljs-string">&#x27;e2e-cypress&#x27;</span>,<br>  <span class="hljs-string">&#x27;e2e-nightwatch&#x27;</span>,<br>  <span class="hljs-string">&#x27;e2e-webdriverio&#x27;</span>,<br>  <span class="hljs-string">&#x27;eslint&#x27;</span>,<br>  <span class="hljs-string">&#x27;pwa&#x27;</span>,<br>  <span class="hljs-string">&#x27;router&#x27;</span>,<br>  <span class="hljs-string">&#x27;typescript&#x27;</span>,<br>  <span class="hljs-string">&#x27;unit-jest&#x27;</span>,<br>  <span class="hljs-string">&#x27;unit-mocha&#x27;</span>,<br>  <span class="hljs-string">&#x27;vuex&#x27;</span><br>]<br><span class="hljs-built_in">exports</span>.<span class="hljs-property">isPlugin</span> = <span class="hljs-function"><span class="hljs-params">id</span> =&gt;</span> pluginRE.<span class="hljs-title function_">test</span>(id)<br></code></pre></td></tr></table></figure><p>然后从项目的package.json的依赖中解析出来了三个需要加载的插件</p><p><img src="/2022/03/07/%E6%B5%85%E6%9E%90uni-app%E7%9A%84%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B/image-20220307193648564.png" alt="image-20220307193648564" loading="lazy" data-src="/2022/03/07/%E6%B5%85%E6%9E%90uni-app%E7%9A%84%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B/image-20220307193648564.png"></p><p>很显然第一个加载并执行的插件就是这个vue-cli-plugin-hbuilderx插件。接着依次去加载其他两个，我们先看第一个插件吧。</p><h4 id="加载vue-cli-plugin-uni插件"><a href="#加载vue-cli-plugin-uni插件" class="headerlink" title="加载vue-cli-plugin-uni插件"></a>加载vue-cli-plugin-uni插件</h4><p>进入一看，他直接退出了，原因是只处理 app-plus相关的逻辑，而我们编译的是mp-weixin</p><p><img src="/2022/03/07/%E6%B5%85%E6%9E%90uni-app%E7%9A%84%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B/image-20220307194446009.png" loading="lazy" data-src="/2022/03/07/%E6%B5%85%E6%9E%90uni-app%E7%9A%84%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B/image-20220307194446009.png"></p><p>所以，忽略，直接进入下面一个 vue-cli-plugin-uni的加载，这个文件先加载了一个.env.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 初始化全局插件对象</span><br><span class="hljs-variable language_">global</span>.<span class="hljs-property">uniPlugin</span> = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;@dcloudio/uni-cli-shared/lib/plugin&#x27;</span>).<span class="hljs-title function_">init</span>()<br></code></pre></td></tr></table></figure><p>这个里面就初始化了全局插件对象，然后它的init操作中去加载了对应平台的插件，也就是说，编译什么平台就加载什么平台的插件。</p><p><img src="/2022/03/07/%E6%B5%85%E6%9E%90uni-app%E7%9A%84%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B/image-20220307213703832.png" alt="image-20220307213703832" loading="lazy" data-src="/2022/03/07/%E6%B5%85%E6%9E%90uni-app%E7%9A%84%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B/image-20220307213703832.png"></p><p>我们编译的是小程序的，所以加载的是@dcloudio&#x2F;uni-mp-weixin。</p><p>这里在外后走就是初始化预处理器，<strong>然后发现Plugin.platforms中居然有一个h5，暂时不知道为什么编译小程序平台需要h5，难道h5是必须的嘛</strong>？这个问题先放一放</p><p><img src="/2022/03/07/%E6%B5%85%E6%9E%90uni-app%E7%9A%84%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B/image-20220307214847221.png" alt="image-20220307214847221" loading="lazy" data-src="/2022/03/07/%E6%B5%85%E6%9E%90uni-app%E7%9A%84%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B/image-20220307214847221.png"></p><p>知道env.js执行完，就可以知道，他做了一下几件事情：</p><ol><li>初始化了全局插件，读取了一些webpack配置，特别是copyWebpackOptions</li><li>以及一些全局的options，如cssVars，extNames，subPackages等<ol><li><img src="/2022/03/07/%E6%B5%85%E6%9E%90uni-app%E7%9A%84%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B/image-20220307220428348.png" alt="image-20220307220428348" loading="lazy" data-src="/2022/03/07/%E6%B5%85%E6%9E%90uni-app%E7%9A%84%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B/image-20220307220428348.png"></li></ol></li><li>设置了一堆的环境变量<ol><li>process.env.UNI_PLATFORM</li><li>process.env.VUE_APP_PLATFORM</li><li>process.env.UNI_OUTPUT_DIR</li></ol></li><li>确定了build后产物的路径process.env.UNI_OUTPUT_DIR</li><li>对分包subPackages的处理</li><li>process.env.VUE_APP_DEBUG 开关</li><li>增加了一堆的hack操作，把vue相关的库指向了uni自己的包装过的<ol><li><img src="/2022/03/07/%E6%B5%85%E6%9E%90uni-app%E7%9A%84%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B/image-20220307221717949.png" alt="image-20220307221717949" loading="lazy" data-src="/2022/03/07/%E6%B5%85%E6%9E%90uni-app%E7%9A%84%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B/image-20220307221717949.png"></li></ol></li></ol><p>插件加载之后，下一步 就是要执行插件，执行操作设计到对vue代码转换为小程序语法的过程，这部分内容，我觉得还是单独开一篇比较合适。</p><h4 id="加载vue-cli-plugin-uni-optimize插件"><a href="#加载vue-cli-plugin-uni-optimize插件" class="headerlink" title="加载vue-cli-plugin-uni-optimize插件"></a>加载vue-cli-plugin-uni-optimize插件</h4><p>这个插件主要是做了一些代码优化，代码也不是很多，很直观就可以看明白</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> path = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;path&#x27;</span>)<br><br><span class="hljs-keyword">const</span> webpack = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;webpack&#x27;</span>)<br><br><span class="hljs-keyword">const</span> <span class="hljs-title class_">WebpackOptimizePlugin</span> = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;./packages/webpack-optimize-plugin&#x27;</span>)<br><br><span class="hljs-keyword">const</span> &#123;<br>  src,<br>  lib<br>&#125; = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;@dcloudio/uni-h5/path&#x27;</span>)<br><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">resolve</span> = dir =&gt; path.<span class="hljs-title function_">resolve</span>(__dirname, <span class="hljs-string">&#x27;./&#x27;</span>, dir)<br><br><span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span> = <span class="hljs-function">(<span class="hljs-params">api, options</span>) =&gt;</span> &#123;<br>  <span class="hljs-keyword">if</span> (!process.<span class="hljs-property">env</span>.<span class="hljs-property">UNI_OPT_TREESHAKINGNG</span>) &#123;<br>    <span class="hljs-keyword">return</span><br>  &#125;<br><br>  <span class="hljs-keyword">if</span> (process.<span class="hljs-property">env</span>.<span class="hljs-property">NODE_ENV</span> !== <span class="hljs-string">&#x27;production&#x27;</span> || process.<span class="hljs-property">env</span>.<span class="hljs-property">UNI_PLATFORM</span> !== <span class="hljs-string">&#x27;h5&#x27;</span>) &#123;<br>    <span class="hljs-keyword">return</span><br>  &#125;<br><br>  <span class="hljs-comment">// 组件</span><br>  <span class="hljs-keyword">const</span> uniComponentsPath = <span class="hljs-title function_">resolve</span>(<span class="hljs-string">&#x27;.tmp/components.js&#x27;</span>)<br><br>  <span class="hljs-keyword">const</span> uniInvokeApiPath = <span class="hljs-title function_">resolve</span>(<span class="hljs-string">&#x27;.tmp/invoke-api.js&#x27;</span>)<br>  <span class="hljs-keyword">const</span> uniServiceApiPath = <span class="hljs-title function_">resolve</span>(<span class="hljs-string">&#x27;.tmp/api.js&#x27;</span>)<br>  <span class="hljs-keyword">const</span> uniApiProtocolPath = <span class="hljs-title function_">resolve</span>(<span class="hljs-string">&#x27;.tmp/protocol.js&#x27;</span>)<br>  <span class="hljs-keyword">const</span> uniApiSubscribePath = <span class="hljs-title function_">resolve</span>(<span class="hljs-string">&#x27;.tmp/subscribe.js&#x27;</span>)<br>  <span class="hljs-keyword">const</span> uniH5AppComponentsPath = <span class="hljs-title function_">resolve</span>(<span class="hljs-string">&#x27;.tmp/app-components.js&#x27;</span>)<br>  <span class="hljs-keyword">const</span> uniH5AppMixinsPath = <span class="hljs-title function_">resolve</span>(<span class="hljs-string">&#x27;.tmp/app-mixins.js&#x27;</span>)<br>  <span class="hljs-keyword">const</span> uniH5SystemRoutes = <span class="hljs-title function_">resolve</span>(<span class="hljs-string">&#x27;.tmp/system-routes.js&#x27;</span>)<br><br>  options.<span class="hljs-property">transpileDependencies</span>.<span class="hljs-title function_">push</span>(<span class="hljs-regexp">/vue-cli-plugin-uni-optimize/</span>)<br>  options.<span class="hljs-property">transpileDependencies</span>.<span class="hljs-title function_">push</span>(<span class="hljs-regexp">/uni-h5/</span>)<br><br>  api.<span class="hljs-title function_">configureWebpack</span>(<span class="hljs-function"><span class="hljs-params">webpackConfig</span> =&gt;</span> &#123;<br>    <span class="hljs-keyword">return</span> &#123;<br>      <span class="hljs-attr">watch</span>: <span class="hljs-literal">true</span>,<br>      <span class="hljs-attr">resolve</span>: &#123;<br>        <span class="hljs-attr">alias</span>: &#123;<br>          [<span class="hljs-string">&#x27;uni-&#x27;</span> + process.<span class="hljs-property">env</span>.<span class="hljs-property">UNI_PLATFORM</span>]: path.<span class="hljs-title function_">join</span>(lib, <span class="hljs-string">`<span class="hljs-subst">$&#123;process.env.UNI_PLATFORM&#125;</span>/main.js`</span>),<br>          <span class="hljs-string">&#x27;uni-core&#x27;</span>: path.<span class="hljs-title function_">join</span>(src, <span class="hljs-string">&#x27;core&#x27;</span>),<br>          <span class="hljs-string">&#x27;uni-view&#x27;</span>: path.<span class="hljs-title function_">join</span>(src, <span class="hljs-string">&#x27;core/view&#x27;</span>),<br>          <span class="hljs-string">&#x27;uni-service&#x27;</span>: path.<span class="hljs-title function_">join</span>(src, <span class="hljs-string">&#x27;core/service&#x27;</span>),<br>          <span class="hljs-string">&#x27;uni-shared&#x27;</span>: path.<span class="hljs-title function_">join</span>(src, <span class="hljs-string">&#x27;shared&#x27;</span>),<br>          <span class="hljs-string">&#x27;uni-mixins&#x27;</span>: path.<span class="hljs-title function_">join</span>(src, <span class="hljs-string">&#x27;core/view/mixins&#x27;</span>),<br>          <span class="hljs-string">&#x27;uni-helpers&#x27;</span>: path.<span class="hljs-title function_">join</span>(src, <span class="hljs-string">&#x27;core/helpers&#x27;</span>),<br>          <span class="hljs-string">&#x27;uni-platform&#x27;</span>: path.<span class="hljs-title function_">join</span>(src, <span class="hljs-string">&#x27;platforms/&#x27;</span> + process.<span class="hljs-property">env</span>.<span class="hljs-property">UNI_PLATFORM</span>),<br><br>          <span class="hljs-comment">// tree shaking</span><br>          <span class="hljs-string">&#x27;uni-components&#x27;</span>: uniComponentsPath,<br>          <span class="hljs-string">&#x27;uni-invoke-api&#x27;</span>: uniInvokeApiPath,<br>          <span class="hljs-string">&#x27;uni-service-api&#x27;</span>: uniServiceApiPath,<br>          <span class="hljs-string">&#x27;uni-api-protocol&#x27;</span>: uniApiProtocolPath,<br>          <span class="hljs-string">&#x27;uni-api-subscribe&#x27;</span>: uniApiSubscribePath,<br>          <span class="hljs-comment">// h5 components</span><br>          <span class="hljs-string">&#x27;uni-h5-app-components&#x27;</span>: uniH5AppComponentsPath,<br>          <span class="hljs-string">&#x27;uni-h5-app-mixins&#x27;</span>: uniH5AppMixinsPath,<br>          <span class="hljs-string">&#x27;uni-h5-system-routes&#x27;</span>: uniH5SystemRoutes<br>        &#125;<br>      &#125;,<br>      <span class="hljs-attr">plugins</span>: [<br>        <span class="hljs-keyword">new</span> <span class="hljs-title class_">WebpackOptimizePlugin</span>(),<br>        <span class="hljs-keyword">new</span> webpack.<span class="hljs-title class_">DefinePlugin</span>(&#123;<br>          <span class="hljs-attr">__VERSION__</span>: <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(<span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;@dcloudio/uni-&#x27;</span> + process.<span class="hljs-property">env</span>.<span class="hljs-property">UNI_PLATFORM</span> + <span class="hljs-string">&#x27;/package.json&#x27;</span>).<span class="hljs-property">version</span>),<br>          <span class="hljs-attr">__PLATFORM__</span>: <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(process.<span class="hljs-property">env</span>.<span class="hljs-property">UNI_PLATFORM</span>)<br>        &#125;),<br>        <span class="hljs-keyword">new</span> webpack.<span class="hljs-title class_">ProvidePlugin</span>(&#123;<br>          <span class="hljs-attr">console</span>: [path.<span class="hljs-title function_">join</span>(src, <span class="hljs-string">&#x27;core/helpers/console&#x27;</span>), <span class="hljs-string">&#x27;default&#x27;</span>],<br>          <span class="hljs-title class_">UniViewJSBridge</span>: [path.<span class="hljs-title function_">join</span>(src, <span class="hljs-string">&#x27;core/view/bridge/index&#x27;</span>)],<br>          <span class="hljs-title class_">UniServiceJSBridge</span>: [path.<span class="hljs-title function_">join</span>(src, <span class="hljs-string">&#x27;core/service/bridge/index&#x27;</span>)]<br>        &#125;)<br>      ]<br>    &#125;<br>  &#125;)<br><br>  api.<span class="hljs-title function_">chainWebpack</span>(<span class="hljs-function"><span class="hljs-params">webpackConfig</span> =&gt;</span> &#123;<br>    <span class="hljs-comment">// Vue</span><br>    webpackConfig.<span class="hljs-property">module</span><br>      .<span class="hljs-title function_">rule</span>(<span class="hljs-string">&#x27;vue&#x27;</span>)<br>      .<span class="hljs-title function_">use</span>(<span class="hljs-string">&#x27;vue-loader&#x27;</span>)<br>      .<span class="hljs-title function_">tap</span>(<span class="hljs-function"><span class="hljs-params">options</span> =&gt;</span> <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">assign</span>(options, &#123;<br>        <span class="hljs-attr">isH5TreeShaking</span>: <span class="hljs-literal">true</span>,<br>        <span class="hljs-attr">cacheDirectory</span>: <span class="hljs-literal">false</span>,<br>        <span class="hljs-attr">cacheIdentifier</span>: <span class="hljs-literal">false</span><br>      &#125;))<br>      .<span class="hljs-title function_">end</span>()<br>      .<span class="hljs-property">uses</span><br>      .<span class="hljs-title function_">delete</span>(<span class="hljs-string">&#x27;cache-loader&#x27;</span>)<br>  &#125;)<br>&#125;<br><br></code></pre></td></tr></table></figure><p>从这里也了解了，为啥编译一个小程序还需要h5的插件,然来是vue-cli-plugin-uni-optimize这个插件需要基于h5</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> &#123;<br>  src,<br>  lib<br>&#125; = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;@dcloudio/uni-h5/path&#x27;</span>)<br></code></pre></td></tr></table></figure><p><img src="/2022/03/07/%E6%B5%85%E6%9E%90uni-app%E7%9A%84%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B/image-20220307225158705.png" alt="image-20220307225158705" loading="lazy" data-src="/2022/03/07/%E6%B5%85%E6%9E%90uni-app%E7%9A%84%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B/image-20220307225158705.png"></p><p>用到了他里面的一些核心能力，这也从侧面了解，uni编译各种版本，基本上都会最终依赖上这个h5的插件。这里也可以了解到，如果是开发模式，这个插件不会被执行，因为</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">if</span> (!process.<span class="hljs-property">env</span>.<span class="hljs-property">UNI_OPT_TREESHAKINGNG</span>) &#123;<br>    <span class="hljs-keyword">return</span><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="step3、执行插件"><a href="#step3、执行插件" class="headerlink" title="step3、执行插件"></a>step3、执行插件</h3><p>通常一个插件都会暴露出一个方法</p><p><img src="/2022/03/07/%E6%B5%85%E6%9E%90uni-app%E7%9A%84%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B/image-20220307230528416.png" alt="image-20220307230528416" loading="lazy" data-src="/2022/03/07/%E6%B5%85%E6%9E%90uni-app%E7%9A%84%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B/image-20220307230528416.png"></p><p>这个方法，将会被vue-cli-service去挨个挨个执行</p><p><img src="/2022/03/07/%E6%B5%85%E6%9E%90uni-app%E7%9A%84%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B/image-20220307230626272.png" alt="image-20220307230626272" loading="lazy" data-src="/2022/03/07/%E6%B5%85%E6%9E%90uni-app%E7%9A%84%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B/image-20220307230626272.png"></p><p>插件被执行完之后，最终就会进入到构建环节</p><h3 id="step3、进入构建环节"><a href="#step3、进入构建环节" class="headerlink" title="step3、进入构建环节"></a>step3、进入构建环节</h3><p><img src="/2022/03/07/%E6%B5%85%E6%9E%90uni-app%E7%9A%84%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B/image-20220307232816427.png" alt="image-20220307232816427" loading="lazy" data-src="/2022/03/07/%E6%B5%85%E6%9E%90uni-app%E7%9A%84%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B/image-20220307232816427.png"></p><p>这里就不直接展开了，小程序产物构建完全可以单独搞一章了。</p><p>这里我们了解整个过程之后，发现uni打开做了这么几件事</p><ol><li>使用yarn start命令，会直接出发vue-cli-service活动起来，然后开始加载vue-cli相关的插件</li><li>其中uni的三个插件会被加载，并依次之心</li><li>同时我们发现，在小程序模式下，hbuilderx插件是不会被执行的</li><li>然后我们发现optimize插件在develop模式下是不会被执行的</li><li>因此我们发现只有vue-cli-plugin-uni这个插件会被执行，这里面做了一些列的准备工作，目的就是为了uni能够有一个编译为小程序的环境，他在执行完插件体之后，最终cli-service会转而调用@dcloudio&#x2F;vue-cli-plugin-uni&#x2F;commands&#x2F;build.js中的build方法，然后build方法在执行的过程中，会到@dcloudio&#x2F;vue-cli-plugin-uni&#x2F;lib&#x2F;mp&#x2F;index.js中执行去手机webpack的一些配置，汇总好继续build的构建。</li></ol><p><strong>下面附上这些个过程的堆栈信息，其调用过程一目了然。</strong></p><blockquote><p>webpackConfig (&#x2F;Users&#x2F;xxx&#x2F;mp-project&#x2F;node_modules&#x2F;<strong>@dcloudio&#x2F;vue-cli-plugin-uni&#x2F;lib&#x2F;mp&#x2F;index.js</strong>:149)<br>….<strong>此处省略一些堆栈</strong><br>build (&#x2F;Users&#x2F;xxx&#x2F;mp-project&#x2F;node_modules&#x2F;@dcloudio&#x2F;vue-cli-plugin-uni&#x2F;commands&#x2F;build.js:137)<br><anonymous> (&#x2F;Users&#x2F;xxx&#x2F;mp-project&#x2F;node_modules&#x2F;<strong>@dcloudio&#x2F;vue-cli-plugin-uni&#x2F;commands&#x2F;build.js:62</strong>)<br>run (&#x2F;Users&#x2F;xxx&#x2F;mp-project&#x2F;node_modules&#x2F;@vue&#x2F;cli-service&#x2F;lib&#x2F;<strong>Service.js:230</strong>)<br><anonymous> (&#x2F;Users&#x2F;xxx&#x2F;mp-project&#x2F;node_modules&#x2F;@vue&#x2F;cli-service&#x2F;bin&#x2F;<strong>vue-cli-service.js:36</strong>)<br>Module._compile (<node_internals>&#x2F;internal&#x2F;modules&#x2F;cjs&#x2F;loader.js:956)<br>Module._extensions..js (<node_internals>&#x2F;internal&#x2F;modules&#x2F;cjs&#x2F;loader.js:973)<br>Module.load (<node_internals>&#x2F;internal&#x2F;modules&#x2F;cjs&#x2F;loader.js:812)<br>Module._load (<node_internals>&#x2F;internal&#x2F;modules&#x2F;cjs&#x2F;loader.js:724)<br>Module.runMain (<node_internals>&#x2F;internal&#x2F;modules&#x2F;cjs&#x2F;<strong>loader.js:1025</strong>)<br><anonymous> (<node_internals>&#x2F;internal&#x2F;main&#x2F;<strong>run_main_module.js:17</strong>)</node_internals></anonymous></node_internals></node_internals></node_internals></node_internals></node_internals></anonymous></anonymous></p></blockquote><p>这里也贴一下vue-cli-plugin-uni&#x2F;lib&#x2F;mp&#x2F;index.js的核心代码，后续的文章就了解这个里面怎么把vue代码构建成小程序的。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span> = &#123;<br>  <span class="hljs-attr">vueConfig</span>: &#123;<br>    <span class="hljs-attr">parallel</span>: <span class="hljs-literal">false</span><br>  &#125;,<br>  webpackConfig (webpackConfig, vueOptions, api) &#123;<br>    <span class="hljs-keyword">if</span> (!webpackConfig.<span class="hljs-property">optimization</span>) &#123;<br>      webpackConfig.<span class="hljs-property">optimization</span> = &#123;&#125;<br>    &#125;<br>    <span class="hljs-comment">// disable noEmitOnErrors</span><br>    webpackConfig.<span class="hljs-property">optimization</span>.<span class="hljs-property">noEmitOnErrors</span> = <span class="hljs-literal">false</span><br><br>    webpackConfig.<span class="hljs-property">optimization</span>.<span class="hljs-property">runtimeChunk</span> = &#123;<br>      <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;common/runtime&#x27;</span><br>    &#125;<br><br>    webpackConfig.<span class="hljs-property">optimization</span>.<span class="hljs-property">splitChunks</span> = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;../split-chunks&#x27;</span>)()<br><br>    <span class="hljs-title function_">parseEntry</span>()<br><br>    <span class="hljs-keyword">const</span> statCode = process.<span class="hljs-property">env</span>.<span class="hljs-property">UNI_USING_STAT</span> ? <span class="hljs-string">&#x27;import \&#x27;@dcloudio/uni-stat\&#x27;;&#x27;</span> : <span class="hljs-string">&#x27;&#x27;</span><br><br>    <span class="hljs-keyword">let</span> beforeCode = <span class="hljs-string">&#x27;import \&#x27;uni-pages\&#x27;;&#x27;</span><br><br>    <span class="hljs-keyword">const</span> plugins = [<br>      <span class="hljs-keyword">new</span> <span class="hljs-title class_">WebpackUniAppPlugin</span>(),<br>      <span class="hljs-title function_">createUniMPPlugin</span>(),<br>      <span class="hljs-keyword">new</span> webpack.<span class="hljs-title class_">ProvidePlugin</span>(<span class="hljs-title function_">getProvides</span>())<br>    ]<br><br>    <span class="hljs-keyword">if</span> ((process.<span class="hljs-property">env</span>.<span class="hljs-property">UNI_SUBPACKGE</span> || process.<span class="hljs-property">env</span>.<span class="hljs-property">UNI_MP_PLUGIN</span>) &amp;&amp; process.<span class="hljs-property">env</span>.<span class="hljs-property">UNI_SUBPACKGE</span> !== <span class="hljs-string">&#x27;main&#x27;</span>) &#123;<br>      plugins.<span class="hljs-title function_">push</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">PreprocessAssetsPlugin</span>())<br>    &#125;<br><br>    <span class="hljs-keyword">if</span> (process.<span class="hljs-property">env</span>.<span class="hljs-property">UNI_MP_PLUGIN</span>) &#123;<br>      <span class="hljs-comment">// 小程序插件入口使用</span><br>      <span class="hljs-comment">// packages\webpack-uni-mp-loader\lib\plugin\index-new.js -&gt; addMPPluginRequire</span><br>      beforeCode += <span class="hljs-string">`wx.__webpack_require_<span class="hljs-subst">$&#123;process.env.UNI_MP_PLUGIN.replace(<span class="hljs-string">&#x27;-&#x27;</span>, <span class="hljs-string">&#x27;_&#x27;</span>)&#125;</span>__ = __webpack_require__;`</span><br><br>      <span class="hljs-keyword">const</span> <span class="hljs-variable constant_">UNI_MP_PLUGIN_MAIN</span> = process.<span class="hljs-property">env</span>.<span class="hljs-property">UNI_MP_PLUGIN_MAIN</span><br>      <span class="hljs-keyword">if</span> (<span class="hljs-variable constant_">UNI_MP_PLUGIN_MAIN</span>) &#123;<br>        process.<span class="hljs-property">UNI_ENTRY</span>[<span class="hljs-variable constant_">UNI_MP_PLUGIN_MAIN</span>.<span class="hljs-title function_">split</span>(<span class="hljs-string">&#x27;.&#x27;</span>)[<span class="hljs-number">0</span>]] = path.<span class="hljs-title function_">resolve</span>(process.<span class="hljs-property">env</span>.<span class="hljs-property">UNI_INPUT_DIR</span>, <span class="hljs-variable constant_">UNI_MP_PLUGIN_MAIN</span>)<br>      &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">return</span> &#123;<br>      <span class="hljs-attr">mode</span>: process.<span class="hljs-property">env</span>.<span class="hljs-property">NODE_ENV</span> === <span class="hljs-string">&#x27;production&#x27;</span> ? <span class="hljs-string">&#x27;production&#x27;</span> : <span class="hljs-string">&#x27;development&#x27;</span>,<br>      entry () &#123;<br>        <span class="hljs-keyword">return</span> process.<span class="hljs-property">UNI_ENTRY</span><br>      &#125;,<br>      <span class="hljs-attr">output</span>: &#123;<br>        <span class="hljs-attr">filename</span>: <span class="hljs-string">&#x27;[name].js&#x27;</span>,<br>        <span class="hljs-attr">chunkFilename</span>: <span class="hljs-string">&#x27;[id].js&#x27;</span>,<br>        <span class="hljs-attr">globalObject</span>: process.<span class="hljs-property">env</span>.<span class="hljs-property">UNI_PLATFORM</span> === <span class="hljs-string">&#x27;mp-alipay&#x27;</span> ? <span class="hljs-string">&#x27;my&#x27;</span> : <span class="hljs-string">&#x27;global&#x27;</span><br>        <span class="hljs-comment">// sourceMapFilename: &#x27;../.sourcemap/&#x27; + process.env.UNI_PLATFORM + &#x27;/[name].js.map&#x27;</span><br>      &#125;,<br>      <span class="hljs-attr">performance</span>: &#123;<br>        <span class="hljs-attr">hints</span>: <span class="hljs-literal">false</span><br>      &#125;,<br>      <span class="hljs-attr">resolve</span>: &#123;<br>        <span class="hljs-attr">extensions</span>: [<span class="hljs-string">&#x27;.nvue&#x27;</span>],<br>        <span class="hljs-attr">alias</span>: &#123; <span class="hljs-comment">// 仅 mp-weixin</span><br>          <span class="hljs-string">&#x27;mpvue-page-factory&#x27;</span>: <span class="hljs-built_in">require</span>.<span class="hljs-title function_">resolve</span>(<br>            <span class="hljs-string">&#x27;@dcloudio/vue-cli-plugin-uni/packages/mpvue-page-factory&#x27;</span>)<br>        &#125;<br>      &#125;,<br>      <span class="hljs-attr">module</span>: &#123;<br>        <span class="hljs-attr">rules</span>: [&#123;<br>          <span class="hljs-attr">test</span>: path.<span class="hljs-title function_">resolve</span>(process.<span class="hljs-property">env</span>.<span class="hljs-property">UNI_INPUT_DIR</span>, <span class="hljs-title function_">getMainEntry</span>()),<br>          <span class="hljs-attr">use</span>: [&#123;<br>            <span class="hljs-attr">loader</span>: path.<span class="hljs-title function_">resolve</span>(__dirname, <span class="hljs-string">&#x27;../../packages/wrap-loader&#x27;</span>),<br>            <span class="hljs-attr">options</span>: &#123;<br>              <span class="hljs-attr">before</span>: [<br>                beforeCode + <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;../util&#x27;</span>).<span class="hljs-title function_">getAutomatorCode</span>() + statCode<br>              ]<br>            &#125;<br>          &#125;, &#123;<br>            <span class="hljs-attr">loader</span>: <span class="hljs-string">&#x27;@dcloudio/webpack-uni-mp-loader/lib/main&#x27;</span><br>          &#125;]<br>        &#125;, &#123;<br>          <span class="hljs-attr">resourceQuery</span>: <span class="hljs-regexp">/vue&amp;type=script/</span>,<br>          <span class="hljs-attr">use</span>: [&#123;<br>            <span class="hljs-attr">loader</span>: <span class="hljs-string">&#x27;@dcloudio/webpack-uni-mp-loader/lib/script&#x27;</span><br>          &#125;]<br>        &#125;, &#123;<br>          <span class="hljs-attr">resourceQuery</span>: <span class="hljs-regexp">/vue&amp;type=template/</span>,<br>          <span class="hljs-attr">use</span>: [&#123;<br>            <span class="hljs-attr">loader</span>: <span class="hljs-string">&#x27;@dcloudio/webpack-uni-mp-loader/lib/template&#x27;</span><br>          &#125;, &#123;<br>            <span class="hljs-attr">loader</span>: <span class="hljs-string">&#x27;@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta&#x27;</span><br>          &#125;]<br>        &#125;, <span class="hljs-title function_">createTemplateCacheLoader</span>(api), &#123;<br>          <span class="hljs-attr">resourceQuery</span>: [<br>            <span class="hljs-regexp">/lang=wxs/</span>,<br>            <span class="hljs-regexp">/lang=filter/</span>,<br>            <span class="hljs-regexp">/lang=sjs/</span>,<br>            <span class="hljs-regexp">/blockType=wxs/</span>,<br>            <span class="hljs-regexp">/blockType=filter/</span>,<br>            <span class="hljs-regexp">/blockType=sjs/</span><br>          ],<br>          <span class="hljs-attr">use</span>: [&#123;<br>            <span class="hljs-attr">loader</span>: <span class="hljs-built_in">require</span>.<span class="hljs-title function_">resolve</span>(<br>              <span class="hljs-string">&#x27;@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-filter-loader&#x27;</span>)<br>          &#125;]<br>        &#125;]<br>      &#125;,<br>      plugins<br>    &#125;<br>  &#125;,<br>  chainWebpack (webpackConfig, vueOptions, api) &#123;<br>    <span class="hljs-keyword">if</span> (process.<span class="hljs-property">env</span>.<span class="hljs-property">UNI_PLATFORM</span> === <span class="hljs-string">&#x27;mp-baidu&#x27;</span>) &#123;<br>      webpackConfig.<span class="hljs-property">module</span><br>        .<span class="hljs-title function_">rule</span>(<span class="hljs-string">&#x27;js&#x27;</span>)<br>        .<span class="hljs-property">exclude</span><br>        .<span class="hljs-title function_">add</span>(<span class="hljs-regexp">/\.filter\.js$/</span>)<br>    &#125;<br><br>    <span class="hljs-keyword">const</span> compilerOptions = process.<span class="hljs-property">env</span>.<span class="hljs-property">UNI_USING_COMPONENTS</span> ? &#123;&#125; : <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;../mp-compiler-options&#x27;</span>)<br><br>    <span class="hljs-title function_">modifyVueLoader</span>(webpackConfig, &#123;&#125;, compilerOptions, api)<br><br>    <span class="hljs-keyword">const</span> styleExt = <span class="hljs-title function_">getPlatformExts</span>().<span class="hljs-property">style</span><br><br>    webpackConfig.<span class="hljs-title function_">plugin</span>(<span class="hljs-string">&#x27;extract-css&#x27;</span>)<br>      .<span class="hljs-title function_">init</span>(<span class="hljs-function">(<span class="hljs-params">Plugin, args</span>) =&gt;</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Plugin</span>(&#123;<br>        <span class="hljs-attr">filename</span>: <span class="hljs-string">&#x27;[name]&#x27;</span> + styleExt<br>      &#125;))<br><br>    <span class="hljs-keyword">if</span> (<br>      process.<span class="hljs-property">env</span>.<span class="hljs-property">NODE_ENV</span> === <span class="hljs-string">&#x27;production&#x27;</span> &amp;&amp;<br>      process.<span class="hljs-property">env</span>.<span class="hljs-property">UNI_PLATFORM</span> !== <span class="hljs-string">&#x27;app-plus&#x27;</span><br>    ) &#123;<br>      <span class="hljs-keyword">const</span> <span class="hljs-title class_">OptimizeCssnanoPlugin</span> = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;../../packages/@intervolga/optimize-cssnano-plugin/index.js&#x27;</span>)<br>      webpackConfig.<span class="hljs-title function_">plugin</span>(<span class="hljs-string">&#x27;optimize-css&#x27;</span>)<br>        .<span class="hljs-title function_">init</span>(<span class="hljs-function">(<span class="hljs-params">Plugin, args</span>) =&gt;</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">OptimizeCssnanoPlugin</span>(&#123;<br>          <span class="hljs-attr">sourceMap</span>: <span class="hljs-literal">false</span>,<br>          filter (assetName) &#123;<br>            <span class="hljs-keyword">return</span> path.<span class="hljs-title function_">extname</span>(assetName) === styleExt<br>          &#125;,<br>          <span class="hljs-attr">cssnanoOptions</span>: &#123;<br>            <span class="hljs-attr">preset</span>: [<br>              <span class="hljs-string">&#x27;default&#x27;</span>,<br>              <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">assign</span>(&#123;&#125;, <span class="hljs-title function_">getPlatformCssnano</span>(), &#123;<br>                <span class="hljs-attr">discardComments</span>: <span class="hljs-literal">true</span><br>              &#125;)<br>            ]<br>          &#125;<br><br>        &#125;))<br>    &#125;<br><br>    <span class="hljs-keyword">if</span> (process.<span class="hljs-property">env</span>.<span class="hljs-property">UNI_SUBPACKGE</span> || process.<span class="hljs-property">env</span>.<span class="hljs-property">UNI_MP_PLUGIN</span>) &#123;<br>      <span class="hljs-title function_">initSubpackageConfig</span>(webpackConfig, vueOptions)<br>    &#125;<br><br>    webpackConfig.<span class="hljs-property">plugins</span>.<span class="hljs-title function_">delete</span>(<span class="hljs-string">&#x27;hmr&#x27;</span>)<br>    webpackConfig.<span class="hljs-property">plugins</span>.<span class="hljs-title function_">delete</span>(<span class="hljs-string">&#x27;html&#x27;</span>)<br>    webpackConfig.<span class="hljs-property">plugins</span>.<span class="hljs-title function_">delete</span>(<span class="hljs-string">&#x27;copy&#x27;</span>)<br>    webpackConfig.<span class="hljs-property">plugins</span>.<span class="hljs-title function_">delete</span>(<span class="hljs-string">&#x27;preload&#x27;</span>)<br>    webpackConfig.<span class="hljs-property">plugins</span>.<span class="hljs-title function_">delete</span>(<span class="hljs-string">&#x27;prefetch&#x27;</span>)<br>  &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>最后配置汇总之后，还要验证下是否合法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// check for common config errors</span><br> <span class="hljs-title function_">validateWebpackConfig</span>(webpackConfig, api, options, args.<span class="hljs-property">target</span>)<br></code></pre></td></tr></table></figure><p>合法就开始使用webpack打包咯</p><p><img src="/2022/03/07/%E6%B5%85%E6%9E%90uni-app%E7%9A%84%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B/image-20220308000801898.png" alt="image-20220308000801898" loading="lazy" data-src="/2022/03/07/%E6%B5%85%E6%9E%90uni-app%E7%9A%84%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B/image-20220308000801898.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><br></code></pre></td></tr></table></figure><p><img src="/2022/03/07/%E6%B5%85%E6%9E%90uni-app%E7%9A%84%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B/image-20220308005120412.png" alt="image-20220308005120412" loading="lazy" data-src="/2022/03/07/%E6%B5%85%E6%9E%90uni-app%E7%9A%84%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B/image-20220308005120412.png"></p><!-- flag of hidden posts -->]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>小程序</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>动归</title>
    <link href="/2022/03/05/%E5%8A%A8%E5%BD%92/"/>
    <url>/2022/03/05/%E5%8A%A8%E5%BD%92/</url>
    
    <content type="html"><![CDATA[<!-- flag of hidden posts -->]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在linux上玩一下AI拟声</title>
    <link href="/2022/02/22/%E5%9C%A8linux%E4%B8%8A%E7%8E%A9%E4%B8%80%E4%B8%8BAI%E6%8B%9F%E5%A3%B0/"/>
    <url>/2022/02/22/%E5%9C%A8linux%E4%B8%8A%E7%8E%A9%E4%B8%80%E4%B8%8BAI%E6%8B%9F%E5%A3%B0/</url>
    
    <content type="html"><![CDATA[<h3 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h3><p><a href="https://github.com/babysor/MockingBird">https://github.com/babysor/MockingBird</a></p><p>git clone项目到本地，然后安装环境，开始体验。</p><h3 id="操作方式"><a href="#操作方式" class="headerlink" title="操作方式"></a>操作方式</h3><h4 id="1、环境安装"><a href="#1、环境安装" class="headerlink" title="1、环境安装"></a>1、环境安装</h4><h5 id="1、1安装python环境"><a href="#1、1安装python环境" class="headerlink" title="1、1安装python环境"></a>1、1安装python环境</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum install python39<br></code></pre></td></tr></table></figure><h5 id="1、2指定系统默认python版本"><a href="#1、2指定系统默认python版本" class="headerlink" title="1、2指定系统默认python版本"></a>1、2指定系统默认python版本</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@VM-80-70-centos alternatives]# update-alternatives --config python3<br><br>There are 3 programs which provide &#x27;python3&#x27;.<br><br>  Selection    Command<br>-----------------------------------------------<br>   1           /usr/bin/python3.8<br>*  2           /usr/bin/python3.6<br> + 3           /usr/bin/python3.9<br><br>Enter to keep the current selection[+], or type selection number:<br><br></code></pre></td></tr></table></figure><p>这里默认是3.6，这个工程是不支持的，比如后续如果安装pytorch，就会报错</p><p><img src="/2022/02/22/%E5%9C%A8linux%E4%B8%8A%E7%8E%A9%E4%B8%80%E4%B8%8BAI%E6%8B%9F%E5%A3%B0/image-20220222120812006.png" alt="image-20220222120812006" loading="lazy" data-src="/2022/02/22/%E5%9C%A8linux%E4%B8%8A%E7%8E%A9%E4%B8%80%E4%B8%8BAI%E6%8B%9F%E5%A3%B0/image-20220222120812006.png"></p><p>所以，这里输入3，选择3.9版本搞起，其实也可以系统python版本如果高于3.7也是可以不用安装python3.9，可直接进入安装pytorch。</p><h5 id="1、3安装pytorch"><a href="#1、3安装pytorch" class="headerlink" title="1、3安装pytorch"></a>1、3安装pytorch</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">pip3 install torch torchvision<br></code></pre></td></tr></table></figure><p>验证一下是否安装成功</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> torch<br>x = torch.rand(<span class="hljs-number">5</span>, <span class="hljs-number">3</span>)<br><span class="hljs-built_in">print</span>(x)<br><span class="hljs-comment">#=============输出</span><br></code></pre></td></tr></table></figure><p><img src="/2022/02/22/%E5%9C%A8linux%E4%B8%8A%E7%8E%A9%E4%B8%80%E4%B8%8BAI%E6%8B%9F%E5%A3%B0/image-20220222120729276.png" alt="image-20220222120729276" loading="lazy" data-src="/2022/02/22/%E5%9C%A8linux%E4%B8%8A%E7%8E%A9%E4%B8%80%E4%B8%8BAI%E6%8B%9F%E5%A3%B0/image-20220222120729276.png"></p><h5 id="1、4安装ffmpeg，这个比较复杂，最好是使用源码编译安装的方式，yum找源大概率报错"><a href="#1、4安装ffmpeg，这个比较复杂，最好是使用源码编译安装的方式，yum找源大概率报错" class="headerlink" title="1、4安装ffmpeg，这个比较复杂，最好是使用源码编译安装的方式，yum找源大概率报错"></a>1、4安装ffmpeg，这个比较复杂，最好是使用源码编译安装的方式，yum找源大概率报错</h5><p>安装以及升级可以参考这里的步骤  <a href="https://trac.ffmpeg.org/wiki/CompilationGuide/Centos%EF%BC%8C%E6%95%B4%E4%B8%AA%E8%BF%87%E7%A8%8B%E7%BD%91%E7%BB%9Cok%E7%9A%84%E6%83%85%E5%86%B5%E4%B8%8B%E8%87%B3%E5%B0%91%E9%9C%80%E8%A6%81%E5%8D%8A%E5%B0%8F%E6%97%B6%E3%80%82">https://trac.ffmpeg.org/wiki/CompilationGuide/Centos，整个过程网络ok的情况下至少需要半小时。</a></p><p>我这里只展示安装的步骤，升级可以通过上面的链接查找。</p><p>step1</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum install autoconf automake bzip2 bzip2-devel cmake freetype-devel gcc gcc-c++ git libtool make pkgconfig zlib-devel<br></code></pre></td></tr></table></figure><p>step2</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">mkdir ~/ffmpeg_sources<br></code></pre></td></tr></table></figure><p>step3</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd ~/ffmpeg_sources<br>curl -O -L https://www.nasm.us/pub/nasm/releasebuilds/2.15.05/nasm-2.15.05.tar.bz2<br>tar xjvf nasm-2.15.05.tar.bz2<br>cd nasm-2.15.05<br>./autogen.sh<br>./configure --prefix=&quot;$HOME/ffmpeg_build&quot; --bindir=&quot;$HOME/bin&quot;<br>make<br>make install<br></code></pre></td></tr></table></figure><p>step4</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd ~/ffmpeg_sources<br>curl -O -L https://www.tortall.net/projects/yasm/releases/yasm-1.3.0.tar.gz<br>tar xzvf yasm-1.3.0.tar.gz<br>cd yasm-1.3.0<br>./configure --prefix=&quot;$HOME/ffmpeg_build&quot; --bindir=&quot;$HOME/bin&quot;<br>make<br>make install<br></code></pre></td></tr></table></figure><p>step5</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd ~/ffmpeg_sources<br>git clone --branch stable --depth 1 https://code.videolan.org/videolan/x264.git<br>cd x264<br>PKG_CONFIG_PATH=&quot;$HOME/ffmpeg_build/lib/pkgconfig&quot; ./configure --prefix=&quot;$HOME/ffmpeg_build&quot; --bindir=&quot;$HOME/bin&quot; --enable-static<br>make<br>make install<br></code></pre></td></tr></table></figure><p>step6</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd ~/ffmpeg_sources<br>git clone --branch stable --depth 2 https://bitbucket.org/multicoreware/x265_git<br>cd ~/ffmpeg_sources/x265_git/build/linux<br>cmake -G &quot;Unix Makefiles&quot; -DCMAKE_INSTALL_PREFIX=&quot;$HOME/ffmpeg_build&quot; -DENABLE_SHARED:bool=off ../../source<br>make<br>make install<br></code></pre></td></tr></table></figure><p>step7</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd ~/ffmpeg_sources<br>git clone --depth 1 https://github.com/mstorsjo/fdk-aac<br>cd fdk-aac<br>autoreconf -fiv<br>./configure --prefix=&quot;$HOME/ffmpeg_build&quot; --disable-shared<br>make<br>make install<br></code></pre></td></tr></table></figure><p>step8</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd ~/ffmpeg_sources<br>curl -O -L https://downloads.sourceforge.net/project/lame/lame/3.100/lame-3.100.tar.gz<br>tar xzvf lame-3.100.tar.gz<br>cd lame-3.100<br>./configure --prefix=&quot;$HOME/ffmpeg_build&quot; --bindir=&quot;$HOME/bin&quot; --disable-shared --enable-nasm<br>make<br>make install<br></code></pre></td></tr></table></figure><p>step9</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd ~/ffmpeg_sources<br>curl -O -L https://archive.mozilla.org/pub/opus/opus-1.3.1.tar.gz<br>tar xzvf opus-1.3.1.tar.gz<br>cd opus-1.3.1<br>./configure --prefix=&quot;$HOME/ffmpeg_build&quot; --disable-shared<br>make<br>make install<br></code></pre></td></tr></table></figure><p>step10</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd ~/ffmpeg_sources<br>git clone --depth 1 https://chromium.googlesource.com/webm/libvpx.git<br>cd libvpx<br>./configure --prefix=&quot;$HOME/ffmpeg_build&quot; --disable-examples --disable-unit-tests --enable-vp9-highbitdepth --as=yasm<br>make<br>make install<br></code></pre></td></tr></table></figure><p>step11</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd ~/ffmpeg_sources<br>curl -O -L https://ffmpeg.org/releases/ffmpeg-5.0.tar.bz2<br>tar xjvf ffmpeg-5.0.tar.bz2<br>cd ffmpeg-5.0<br>PATH=&quot;$HOME/bin:$PATH&quot; PKG_CONFIG_PATH=&quot;$HOME/ffmpeg_build/lib/pkgconfig&quot; ./configure \<br>  --prefix=&quot;$HOME/ffmpeg_build&quot; \<br>  --pkg-config-flags=&quot;--static&quot; \<br>  --extra-cflags=&quot;-I$HOME/ffmpeg_build/include&quot; \<br>  --extra-ldflags=&quot;-L$HOME/ffmpeg_build/lib&quot; \<br>  --extra-libs=-lpthread \<br>  --extra-libs=-lm \<br>  --bindir=&quot;$HOME/bin&quot; \<br>  --enable-gpl \<br>  --enable-libfdk_aac \<br>  --enable-libfreetype \<br>  --enable-libmp3lame \<br>  --enable-libopus \<br>  --enable-libvpx \<br>  --enable-libx264 \<br>  --enable-libx265 \<br>  --enable-nonfree<br>make<br>make install<br>hash -d ffmpeg<br></code></pre></td></tr></table></figure><h5 id="1、5安装python需要的包"><a href="#1、5安装python需要的包" class="headerlink" title="1、5安装python需要的包"></a>1、5安装python需要的包</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">cd</span> /pathto/MockingBird <span class="hljs-comment">#到里本地项目克隆路径下</span><br>pip3 install -r requirements.txt<br></code></pre></td></tr></table></figure><p>什么鬼，安装直接报错</p><p><img src="/2022/02/22/%E5%9C%A8linux%E4%B8%8A%E7%8E%A9%E4%B8%80%E4%B8%8BAI%E6%8B%9F%E5%A3%B0/image-20220222130237710.png" alt="image-20220222130237710" loading="lazy" data-src="/2022/02/22/%E5%9C%A8linux%E4%B8%8A%E7%8E%A9%E4%B8%80%E4%B8%8BAI%E6%8B%9F%E5%A3%B0/image-20220222130237710.png"></p><p>查了下资料，要解决这个问题，需要暗转下python39的devel，于是</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">安装EPEL源</span><br>yum install epel-release -y<br><span class="hljs-meta prompt_"># </span><span class="language-bash">安装python3开发包</span><br>yum install python39-devel -y<br></code></pre></td></tr></table></figure><p><img src="/2022/02/22/%E5%9C%A8linux%E4%B8%8A%E7%8E%A9%E4%B8%80%E4%B8%8BAI%E6%8B%9F%E5%A3%B0/image-20220222130400801.png" alt="image-20220222130400801" loading="lazy" data-src="/2022/02/22/%E5%9C%A8linux%E4%B8%8A%E7%8E%A9%E4%B8%80%E4%B8%8BAI%E6%8B%9F%E5%A3%B0/image-20220222130400801.png"></p><p>这里大概就有我们需要的头文件了，然后在重试一次</p><p><img src="/2022/02/22/%E5%9C%A8linux%E4%B8%8A%E7%8E%A9%E4%B8%80%E4%B8%8BAI%E6%8B%9F%E5%A3%B0/image-20220222130524618.png" alt="image-20220222130524618" loading="lazy" data-src="/2022/02/22/%E5%9C%A8linux%E4%B8%8A%E7%8E%A9%E4%B8%80%E4%B8%8BAI%E6%8B%9F%E5%A3%B0/image-20220222130524618.png"></p><p>这一次果断就成功了。</p><h5 id="继续安装一个可选的依赖"><a href="#继续安装一个可选的依赖" class="headerlink" title="继续安装一个可选的依赖"></a>继续安装一个可选的依赖</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">pip3 install webrtcvad-wheels<br></code></pre></td></tr></table></figure><p>至此，整个环境的安装才算完毕，我初步估算了下，大概需要45分钟左右部署好环境。</p><h4 id="2、准备模型"><a href="#2、准备模型" class="headerlink" title="2、准备模型"></a>2、准备模型</h4><p>这里我直接使用社区准备好的模型</p><table><thead><tr><th>作者</th><th><a href="https://pan.baidu.com/s/1iONvRxmkI-t1nHqxKytY3g">https://pan.baidu.com/s/1iONvRxmkI-t1nHqxKytY3g</a> <a href="https://pan.baidu.com/s/1iONvRxmkI-t1nHqxKytY3g">百度盘链接</a> 4j5d</th><th></th><th>75k steps 用3个开源数据集混合训练</th></tr></thead><tbody><tr><td></td><td></td><td></td><td></td></tr></tbody></table><h4 id="3、打开web网页"><a href="#3、打开web网页" class="headerlink" title="3、打开web网页"></a>3、打开web网页</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">python web.py<br></code></pre></td></tr></table></figure><p>什么鬼，又一个报错</p><p><img src="/2022/02/22/%E5%9C%A8linux%E4%B8%8A%E7%8E%A9%E4%B8%80%E4%B8%8BAI%E6%8B%9F%E5%A3%B0/image-20220222131611301.png" alt="image-20220222131611301" loading="lazy" data-src="/2022/02/22/%E5%9C%A8linux%E4%B8%8A%E7%8E%A9%E4%B8%80%E4%B8%8BAI%E6%8B%9F%E5%A3%B0/image-20220222131611301.png"></p><p>查了下，需要安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum install libsndfile<br></code></pre></td></tr></table></figure><p> 运行成功后在浏览器打开地址,默认为 <a href="http://localhost:8080/">http://localhost:8080</a></p><p><img src="/2022/02/22/%E5%9C%A8linux%E4%B8%8A%E7%8E%A9%E4%B8%80%E4%B8%8BAI%E6%8B%9F%E5%A3%B0/image-20220222142941022.png" alt="image-20220222142941022" loading="lazy" data-src="/2022/02/22/%E5%9C%A8linux%E4%B8%8A%E7%8E%A9%E4%B8%80%E4%B8%8BAI%E6%8B%9F%E5%A3%B0/image-20220222142941022.png"></p><p>这就表示已经玩起来了。</p><p>注意，开始synthesizer是没有模型的，需要自己把第二步下载好的模型复制到</p><p><img src="/2022/02/22/%E5%9C%A8linux%E4%B8%8A%E7%8E%A9%E4%B8%80%E4%B8%8BAI%E6%8B%9F%E5%A3%B0/image-20220222143111766.png" alt="image-20220222143111766" loading="lazy" data-src="/2022/02/22/%E5%9C%A8linux%E4%B8%8A%E7%8E%A9%E4%B8%80%E4%B8%8BAI%E6%8B%9F%E5%A3%B0/image-20220222143111766.png"></p><p>这个目录下。</p><h4 id="4、玩法"><a href="#4、玩法" class="headerlink" title="4、玩法"></a>4、玩法</h4><p><img src="/2022/02/22/%E5%9C%A8linux%E4%B8%8A%E7%8E%A9%E4%B8%80%E4%B8%8BAI%E6%8B%9F%E5%A3%B0/image-20220222142829792.png" alt="image-20220222142829792" loading="lazy" data-src="/2022/02/22/%E5%9C%A8linux%E4%B8%8A%E7%8E%A9%E4%B8%80%E4%B8%8BAI%E6%8B%9F%E5%A3%B0/image-20220222142829792.png"></p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>黑科技</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Go写一个云函数,支持长连接</title>
    <link href="/2022/02/20/go%E5%86%99%E4%B8%80%E4%B8%AA%E4%BA%91%E5%87%BD%E6%95%B0-%E6%94%AF%E6%8C%81%E9%95%BF%E8%BF%9E%E6%8E%A5/"/>
    <url>/2022/02/20/go%E5%86%99%E4%B8%80%E4%B8%AA%E4%BA%91%E5%87%BD%E6%95%B0-%E6%94%AF%E6%8C%81%E9%95%BF%E8%BF%9E%E6%8E%A5/</url>
    
    <content type="html"><![CDATA[<h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://github.com/tencentyun/scf-go-lib">https://github.com/tencentyun/scf-go-lib</a></p><h4 id="开发说明"><a href="#开发说明" class="headerlink" title="开发说明"></a>开发说明</h4><p>推荐安装Tencent CloudBase Toolkit</p><p><img src="/2022/02/20/go%E5%86%99%E4%B8%80%E4%B8%AA%E4%BA%91%E5%87%BD%E6%95%B0-%E6%94%AF%E6%8C%81%E9%95%BF%E8%BF%9E%E6%8E%A5/image-20220220223836051.png" alt="image-20220220223836051" loading="lazy" data-src="/2022/02/20/go%E5%86%99%E4%B8%80%E4%B8%AA%E4%BA%91%E5%87%BD%E6%95%B0-%E6%94%AF%E6%8C%81%E9%95%BF%E8%BF%9E%E6%8E%A5/image-20220220223836051.png"></p><h4 id="打包说明"><a href="#打包说明" class="headerlink" title="打包说明"></a>打包说明</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><br>GOOS=linux GOARCH=amd64 go build -o main main.go<br><br>zip main.zip main<br></code></pre></td></tr></table></figure><p>需要注意，go版本的云函数只能本地编译成可执行文件后在上传zip，而且看起来必须要指定GOARCH以及GOOS。否则云函数是跑步起来的。</p><h4 id="部署说明"><a href="#部署说明" class="headerlink" title="部署说明"></a>部署说明</h4><p><img src="/2022/02/20/go%E5%86%99%E4%B8%80%E4%B8%AA%E4%BA%91%E5%87%BD%E6%95%B0-%E6%94%AF%E6%8C%81%E9%95%BF%E8%BF%9E%E6%8E%A5/image-20220220223706956.png" alt="image-20220220223706956" loading="lazy" data-src="/2022/02/20/go%E5%86%99%E4%B8%80%E4%B8%AA%E4%BA%91%E5%87%BD%E6%95%B0-%E6%94%AF%E6%8C%81%E9%95%BF%E8%BF%9E%E6%8E%A5/image-20220220223706956.png"></p><p>选择上传</p><p><img src="/2022/02/20/go%E5%86%99%E4%B8%80%E4%B8%AA%E4%BA%91%E5%87%BD%E6%95%B0-%E6%94%AF%E6%8C%81%E9%95%BF%E8%BF%9E%E6%8E%A5/image-20220220223745138.png" alt="image-20220220223745138" loading="lazy" data-src="/2022/02/20/go%E5%86%99%E4%B8%80%E4%B8%AA%E4%BA%91%E5%87%BD%E6%95%B0-%E6%94%AF%E6%8C%81%E9%95%BF%E8%BF%9E%E6%8E%A5/image-20220220223745138.png"></p><p><img src="/2022/02/20/go%E5%86%99%E4%B8%80%E4%B8%AA%E4%BA%91%E5%87%BD%E6%95%B0-%E6%94%AF%E6%8C%81%E9%95%BF%E8%BF%9E%E6%8E%A5/image-20220220230620404.png" alt="image-20220220230620404" loading="lazy" data-src="/2022/02/20/go%E5%86%99%E4%B8%80%E4%B8%AA%E4%BA%91%E5%87%BD%E6%95%B0-%E6%94%AF%E6%8C%81%E9%95%BF%E8%BF%9E%E6%8E%A5/image-20220220230620404.png"></p><p>点击保存，就可以测试了；</p><p><img src="/2022/02/20/go%E5%86%99%E4%B8%80%E4%B8%AA%E4%BA%91%E5%87%BD%E6%95%B0-%E6%94%AF%E6%8C%81%E9%95%BF%E8%BF%9E%E6%8E%A5/image-20220220230730819.png" alt="image-20220220230730819" loading="lazy" data-src="/2022/02/20/go%E5%86%99%E4%B8%80%E4%B8%AA%E4%BA%91%E5%87%BD%E6%95%B0-%E6%94%AF%E6%8C%81%E9%95%BF%E8%BF%9E%E6%8E%A5/image-20220220230730819.png"></p><p>注意，千万别直接在线上IDE编辑上改代码测试！</p><p>就算你试一千遍都不会生效的，很奇怪，既然不支持go在线编辑，那为何不把这个入口干掉呢。</p><h4 id="代码示例"><a href="#代码示例" class="headerlink" title="代码示例"></a>代码示例</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">package</span> main<br><br><span class="hljs-keyword">import</span> (<br><span class="hljs-string">&quot;context&quot;</span><br><span class="hljs-string">&quot;encoding/json&quot;</span><br><span class="hljs-string">&quot;fmt&quot;</span><br><span class="hljs-string">&quot;io/ioutil&quot;</span><br><span class="hljs-string">&quot;net/http&quot;</span><br><br><span class="hljs-string">&quot;github.com/tencentyun/scf-go-lib/cloudfunction&quot;</span><br><span class="hljs-string">&quot;github.com/tencentyun/scf-go-lib/functioncontext&quot;</span><br>)<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">hello</span><span class="hljs-params">(ctx context.Context, event <span class="hljs-keyword">interface</span>&#123;&#125;)</span></span> (<span class="hljs-keyword">interface</span>&#123;&#125;, <span class="hljs-type">error</span>) &#123;<br>lc, _ := functioncontext.FromContext(ctx)<br>fmt.Printf(<span class="hljs-string">&quot;function ClientContext.Env: %s\n&quot;</span>, lc.ClientContext.Env)<br>fmt.Printf(<span class="hljs-string">&quot;function ClientContext.Custom: %s\n&quot;</span>, lc.ClientContext.Custom)<br><span class="hljs-comment">// fmt.Printf(&quot;function Environment: %s\n&quot;, lc.Environment)</span><br>requestUrl := lc.Environment[<span class="hljs-string">&quot;APIGateWay_Url&quot;</span>] <span class="hljs-comment">//这里可以拿到自己设置的环境变量</span><br>secretId := lc.Environment[<span class="hljs-string">&quot;APIGateWay_SecretId&quot;</span>]<br>secretKey := lc.Environment[<span class="hljs-string">&quot;APIGateWay_SecretKey&quot;</span>]<br>fmt.Printf(<span class="hljs-string">&quot;requestUrl %s\n,secretId %s\n,secretKey %s\n&quot;</span>, requestUrl, secretId, secretKey)<br>resp, err := http.Get(<span class="hljs-string">&quot;http://httpbin.org/get&quot;</span>)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br><span class="hljs-keyword">return</span> err, <span class="hljs-literal">nil</span><br>&#125;<br><span class="hljs-keyword">defer</span> resp.Body.Close()<br>body, _ := ioutil.ReadAll(resp.Body)<br><span class="hljs-keyword">var</span> res <span class="hljs-keyword">interface</span>&#123;&#125;<br>json.Unmarshal(body, &amp;res)<br><span class="hljs-keyword">return</span> res, <span class="hljs-literal">nil</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span> &#123;<br><span class="hljs-comment">// Make the handler available for Remote Procedure Call by Cloud Function</span><br>cloudfunction.Start(hello)<br>&#125;<br><br></code></pre></td></tr></table></figure><p>这里在微信小程序云函数环境中，有点坑，是拿不到请求客户端的clientip的。ClientContext里面打印出来，发现是没有该项的，已经在<a href="https://developers.weixin.qq.com/community/develop/doc/00024e867d86e036d4971353f56400">开发者社区</a>中提问了。</p><h3 id="长连接优化"><a href="#长连接优化" class="headerlink" title="长连接优化"></a>长连接优化</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">package</span> main<br><br><span class="hljs-keyword">import</span> (<br><span class="hljs-string">&quot;fmt&quot;</span><br><span class="hljs-string">&quot;io/ioutil&quot;</span><br><span class="hljs-string">&quot;net&quot;</span><br><span class="hljs-string">&quot;net/http&quot;</span><br><span class="hljs-string">&quot;time&quot;</span><br>)<br><br><span class="hljs-keyword">var</span> httpTransportCloseOnComplete = &amp;http.Transport&#123;<br>DisableKeepAlives: <span class="hljs-literal">true</span>, <span class="hljs-comment">//禁用长连接</span><br>&#125;<br><span class="hljs-keyword">var</span> httpTransportKeepAlive = &amp;http.Transport&#123;<br>DialContext: (&amp;net.Dialer&#123;<br>Timeout:   <span class="hljs-number">3</span> * time.Second, <span class="hljs-comment">// 连接超时时间</span><br>KeepAlive: <span class="hljs-number">7</span> * time.Second, <span class="hljs-comment">// 保持长连接的时间</span><br>&#125;).DialContext, <span class="hljs-comment">// 设置连接的参数</span><br>MaxIdleConns:          <span class="hljs-number">500</span>,              <span class="hljs-comment">// 最大空闲连接</span><br>IdleConnTimeout:       <span class="hljs-number">60</span> * time.Second, <span class="hljs-comment">// 空闲连接的超时时间</span><br>ExpectContinueTimeout: <span class="hljs-number">30</span> * time.Second, <span class="hljs-comment">// 等待服务第一个响应的超时时间</span><br>MaxIdleConnsPerHost:   <span class="hljs-number">100</span>,              <span class="hljs-comment">// 每个host保持的空闲连接数</span><br>DisableKeepAlives:     <span class="hljs-literal">false</span>,            <span class="hljs-comment">//长连接生效</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span> &#123;<br>times := <span class="hljs-number">20</span><br>uri := <span class="hljs-string">&quot;https://github.com/request/request/blob/master/request.js&quot;</span><br><span class="hljs-comment">// 短连接的情况</span><br><br>start := time.Now()<br>client := http.Client&#123;Transport: httpTransportCloseOnComplete&#125; <span class="hljs-comment">// 初始化http的client</span><br><span class="hljs-keyword">for</span> i := <span class="hljs-number">0</span>; i &lt; times; i++ &#123;<br>req, err := http.NewRequest(http.MethodGet, uri, <span class="hljs-literal">nil</span>)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br><span class="hljs-built_in">panic</span>(<span class="hljs-string">&quot;Http Req Failed &quot;</span> + err.Error())<br>&#125;<br>resp, err := client.Do(req) <span class="hljs-comment">// 发起请求</span><br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br><span class="hljs-built_in">panic</span>(<span class="hljs-string">&quot;Http Request Failed &quot;</span> + err.Error())<br>&#125;<br><span class="hljs-keyword">defer</span> resp.Body.Close()<br>ioutil.ReadAll(resp.Body)<br>&#125;<br>fmt.Println(<span class="hljs-string">&quot;Orig GoNet Short Link&quot;</span>, time.Since(start))<br><br><span class="hljs-comment">// 长连接的情况</span><br><br>start2 := time.Now()<br>client2 := http.Client&#123;Transport: httpTransportKeepAlive&#125; <span class="hljs-comment">// 初始化一个带有transport的http的client</span><br><span class="hljs-keyword">for</span> i := <span class="hljs-number">0</span>; i &lt; times; i++ &#123;<br>req, err := http.NewRequest(http.MethodGet, uri, <span class="hljs-literal">nil</span>)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br><span class="hljs-built_in">panic</span>(<span class="hljs-string">&quot;Http Req Failed &quot;</span> + err.Error())<br>&#125;<br>resp, err := client2.Do(req)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br><span class="hljs-built_in">panic</span>(<span class="hljs-string">&quot;Http Request Failed &quot;</span> + err.Error())<br>&#125;<br><span class="hljs-keyword">defer</span> resp.Body.Close()<br>ioutil.ReadAll(resp.Body) <span class="hljs-comment">// 如果不及时从请求中获取结果，此连接会占用，其他请求服务复用连接</span><br>&#125;<br>fmt.Println(<span class="hljs-string">&quot;Orig GoNet Long Link&quot;</span>, time.Since(start2))<br>&#125;<br><br><br></code></pre></td></tr></table></figure><p><img src="/2022/02/20/go%E5%86%99%E4%B8%80%E4%B8%AA%E4%BA%91%E5%87%BD%E6%95%B0-%E6%94%AF%E6%8C%81%E9%95%BF%E8%BF%9E%E6%8E%A5/image-20220220225436507.png" alt="image-20220220225436507" loading="lazy" data-src="/2022/02/20/go%E5%86%99%E4%B8%80%E4%B8%AA%E4%BA%91%E5%87%BD%E6%95%B0-%E6%94%AF%E6%8C%81%E9%95%BF%E8%BF%9E%E6%8E%A5/image-20220220225436507.png"></p><p>这里使用<a href="https://github.com/request/request/blob/master/request.js">https://github.com/request/request/blob/master/request.js</a> 测试，使用长连接明显要好过不适用长连接。</p><p>这里有一点需要注意，这种特性还需要服务端支持，比如，你遇到这种服务端，那基本上你客户端在怎么努力也行不通</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">package</span> main<br><br><span class="hljs-keyword">import</span> (<br><span class="hljs-string">&quot;log&quot;</span><br><span class="hljs-string">&quot;net/http&quot;</span><br>)<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">Index</span><span class="hljs-params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;<br>log.Println(<span class="hljs-string">&quot;receive a request from:&quot;</span>, r.RemoteAddr, r.Header)<br>w.Write([]<span class="hljs-type">byte</span>(<span class="hljs-string">&quot;ok&quot;</span>))<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span> &#123;<br><span class="hljs-keyword">var</span> s = http.Server&#123;<br>Addr:    <span class="hljs-string">&quot;:8080&quot;</span>,<br>Handler: http.HandlerFunc(Index),<br>&#125;<br>s.SetKeepAlivesEnabled(<span class="hljs-literal">false</span>)<span class="hljs-comment">//服务度直接给你关闭</span><br>s.ListenAndServe()<br>&#125;<br></code></pre></td></tr></table></figure><p>各种测试长连接的参考链接在<a href="https://github.com/bigwhite/experiments/tree/master/http-keep-alive">这里</a></p>]]></content>
    
    
    <categories>
      
      <category>极速</category>
      
    </categories>
    
    
    <tags>
      
      <tag>后端</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Node创建长连接</title>
    <link href="/2022/02/20/node%E5%88%9B%E5%BB%BA%E9%95%BF%E8%BF%9E%E6%8E%A5/"/>
    <url>/2022/02/20/node%E5%88%9B%E5%BB%BA%E9%95%BF%E8%BF%9E%E6%8E%A5/</url>
    
    <content type="html"><![CDATA[<p>通过<a href="https://github.com/request/request/blob/master/request.js">request源码</a>分析</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">if</span> (!self.<span class="hljs-property">agent</span>) &#123;<br>    <span class="hljs-keyword">if</span> (options.<span class="hljs-property">agentOptions</span>) &#123;<br>      self.<span class="hljs-property">agentOptions</span> = options.<span class="hljs-property">agentOptions</span><br>    &#125;<br><br>    <span class="hljs-keyword">if</span> (options.<span class="hljs-property">agentClass</span>) &#123;<br>      self.<span class="hljs-property">agentClass</span> = options.<span class="hljs-property">agentClass</span><br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (options.<span class="hljs-property">forever</span>) &#123;<br>      <span class="hljs-keyword">var</span> v = <span class="hljs-title function_">version</span>()<br>      <span class="hljs-comment">// use ForeverAgent in node 0.10- only</span><br>      <span class="hljs-keyword">if</span> (v.<span class="hljs-property">major</span> === <span class="hljs-number">0</span> &amp;&amp; v.<span class="hljs-property">minor</span> &lt;= <span class="hljs-number">10</span>) &#123;<br>        self.<span class="hljs-property">agentClass</span> = protocol === <span class="hljs-string">&#x27;http:&#x27;</span> ? <span class="hljs-title class_">ForeverAgent</span> : <span class="hljs-title class_">ForeverAgent</span>.<span class="hljs-property">SSL</span><br>      &#125; <span class="hljs-keyword">else</span> &#123;<br>        self.<span class="hljs-property">agentClass</span> = self.<span class="hljs-property">httpModule</span>.<span class="hljs-property">Agent</span><br>        self.<span class="hljs-property">agentOptions</span> = self.<span class="hljs-property">agentOptions</span> || &#123;&#125;<br>        self.<span class="hljs-property">agentOptions</span>.<span class="hljs-property">keepAlive</span> = <span class="hljs-literal">true</span><br>      &#125;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      self.<span class="hljs-property">agentClass</span> = self.<span class="hljs-property">httpModule</span>.<span class="hljs-property">Agent</span><br>    &#125;<br>  &#125;<br><br>  <span class="hljs-keyword">if</span> (self.<span class="hljs-property">pool</span> === <span class="hljs-literal">false</span>) &#123;<br>    self.<span class="hljs-property">agent</span> = <span class="hljs-literal">false</span><br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    self.<span class="hljs-property">agent</span> = self.<span class="hljs-property">agent</span> || self.<span class="hljs-title function_">getNewAgent</span>()<br>  &#125;<br>&#125;<br><br>  <span class="hljs-keyword">if</span> (self.<span class="hljs-property">pool</span> === <span class="hljs-literal">false</span>) &#123;<br>    self.<span class="hljs-property">agent</span> = <span class="hljs-literal">false</span><br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    self.<span class="hljs-property">agent</span> = self.<span class="hljs-property">agent</span> || self.<span class="hljs-title function_">getNewAgent</span>()<br>  &#125;<br><br></code></pre></td></tr></table></figure><p>通过源码可以看到，要使用node创建一个长连接的http请求，有三种方式：</p><ol><li>直接塞给options已给 agent。</li><li>给options一个agentClass</li><li>options.forever的值设置为true</li></ol><p>但是，如果追踪代码的话，最后发现，基本上都是去new 一个 Agent，这里的pool，其实就是globalPool，</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> globalPool = &#123;&#125;<br><br><span class="hljs-title function_">debug</span>(options)<br>  <span class="hljs-keyword">if</span> (!self.<span class="hljs-property">pool</span> &amp;&amp; self.<span class="hljs-property">pool</span> !== <span class="hljs-literal">false</span>) &#123;<br>    self.<span class="hljs-property">pool</span> = globalPool<br>  &#125;<br></code></pre></td></tr></table></figure><p>那么，看看Agent的源码：他在node的<a href="https://github.com/nodejs/node/blob/v17.0.0/lib/_http_client.js">http模块</a>中</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">Agent</span>(<span class="hljs-params">options</span>) &#123;<br>  <span class="hljs-keyword">if</span> (!(<span class="hljs-variable language_">this</span> <span class="hljs-keyword">instanceof</span> <span class="hljs-title class_">Agent</span>))<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Agent</span>(options);<br><br>  <span class="hljs-title class_">FunctionPrototypeCall</span>(<span class="hljs-title class_">EventEmitter</span>, <span class="hljs-variable language_">this</span>);<br><br>  <span class="hljs-variable language_">this</span>.<span class="hljs-property">defaultPort</span> = <span class="hljs-number">80</span>;<br>  <span class="hljs-variable language_">this</span>.<span class="hljs-property">protocol</span> = <span class="hljs-string">&#x27;http:&#x27;</span>;<br><br>  <span class="hljs-variable language_">this</span>.<span class="hljs-property">options</span> = &#123; <span class="hljs-attr">__proto__</span>: <span class="hljs-literal">null</span>, ...options &#125;;<br><br>  <span class="hljs-comment">// Don&#x27;t confuse net and make it think that we&#x27;re connecting to a pipe</span><br>  <span class="hljs-variable language_">this</span>.<span class="hljs-property">options</span>.<span class="hljs-property">path</span> = <span class="hljs-literal">null</span>;<br>  <span class="hljs-variable language_">this</span>.<span class="hljs-property">requests</span> = <span class="hljs-title class_">ObjectCreate</span>(<span class="hljs-literal">null</span>);<br>  <span class="hljs-variable language_">this</span>.<span class="hljs-property">sockets</span> = <span class="hljs-title class_">ObjectCreate</span>(<span class="hljs-literal">null</span>);<br>  <span class="hljs-variable language_">this</span>.<span class="hljs-property">freeSockets</span> = <span class="hljs-title class_">ObjectCreate</span>(<span class="hljs-literal">null</span>);<br>  <span class="hljs-variable language_">this</span>.<span class="hljs-property">keepAliveMsecs</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">options</span>.<span class="hljs-property">keepAliveMsecs</span> || <span class="hljs-number">1000</span>;<br>  <span class="hljs-variable language_">this</span>.<span class="hljs-property">keepAlive</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">options</span>.<span class="hljs-property">keepAlive</span> || <span class="hljs-literal">false</span>;<br>  <span class="hljs-variable language_">this</span>.<span class="hljs-property">maxSockets</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">options</span>.<span class="hljs-property">maxSockets</span> || <span class="hljs-title class_">Agent</span>.<span class="hljs-property">defaultMaxSockets</span>;<br>  <span class="hljs-variable language_">this</span>.<span class="hljs-property">maxFreeSockets</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">options</span>.<span class="hljs-property">maxFreeSockets</span> || <span class="hljs-number">256</span>;<br>  <span class="hljs-variable language_">this</span>.<span class="hljs-property">scheduling</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">options</span>.<span class="hljs-property">scheduling</span> || <span class="hljs-string">&#x27;lifo&#x27;</span>;<br>  <span class="hljs-variable language_">this</span>.<span class="hljs-property">maxTotalSockets</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">options</span>.<span class="hljs-property">maxTotalSockets</span>;<br>  <span class="hljs-variable language_">this</span>.<span class="hljs-property">totalSocketCount</span> = <span class="hljs-number">0</span>;<br><br>  <span class="hljs-title function_">validateOneOf</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">scheduling</span>, <span class="hljs-string">&#x27;scheduling&#x27;</span>, [<span class="hljs-string">&#x27;fifo&#x27;</span>, <span class="hljs-string">&#x27;lifo&#x27;</span>]);<br><br>  <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">maxTotalSockets</span> !== <span class="hljs-literal">undefined</span>) &#123;<br>    <span class="hljs-title function_">validateNumber</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">maxTotalSockets</span>, <span class="hljs-string">&#x27;maxTotalSockets&#x27;</span>);<br>    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">maxTotalSockets</span> &lt;= <span class="hljs-number">0</span> || <span class="hljs-title class_">NumberIsNaN</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">maxTotalSockets</span>))<br>      <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title function_">ERR_OUT_OF_RANGE</span>(<span class="hljs-string">&#x27;maxTotalSockets&#x27;</span>, <span class="hljs-string">&#x27;&gt; 0&#x27;</span>,<br>                                 <span class="hljs-variable language_">this</span>.<span class="hljs-property">maxTotalSockets</span>);<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">maxTotalSockets</span> = <span class="hljs-title class_">Infinity</span>;<br>  &#125;<br><br>  <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;free&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">socket, options</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">const</span> name = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">getName</span>(options);<br>    <span class="hljs-title function_">debug</span>(<span class="hljs-string">&#x27;agent.on(free)&#x27;</span>, name);<br><br>    <span class="hljs-comment">// TODO(ronag): socket.destroy(err) might have been called</span><br>    <span class="hljs-comment">// before coming here and have an &#x27;error&#x27; scheduled. In the</span><br>    <span class="hljs-comment">// case of socket.destroy() below this &#x27;error&#x27; has no handler</span><br>    <span class="hljs-comment">// and could cause unhandled exception.</span><br><br>    <span class="hljs-keyword">if</span> (!socket.<span class="hljs-property">writable</span>) &#123;<br>      socket.<span class="hljs-title function_">destroy</span>();<br>      <span class="hljs-keyword">return</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">const</span> requests = <span class="hljs-variable language_">this</span>.<span class="hljs-property">requests</span>[name];<br>    <span class="hljs-keyword">if</span> (requests &amp;&amp; requests.<span class="hljs-property">length</span>) &#123;<br>      <span class="hljs-keyword">const</span> req = <span class="hljs-title class_">ArrayPrototypeShift</span>(requests);<br>      <span class="hljs-keyword">const</span> reqAsyncRes = req[kRequestAsyncResource];<br>      <span class="hljs-keyword">if</span> (reqAsyncRes) &#123;<br>        <span class="hljs-comment">// Run request within the original async context.</span><br>        reqAsyncRes.<span class="hljs-title function_">runInAsyncScope</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>          <span class="hljs-title function_">asyncResetHandle</span>(socket);<br>          <span class="hljs-title function_">setRequestSocket</span>(<span class="hljs-variable language_">this</span>, req, socket);<br>        &#125;);<br>        req[kRequestAsyncResource] = <span class="hljs-literal">null</span>;<br>      &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-title function_">setRequestSocket</span>(<span class="hljs-variable language_">this</span>, req, socket);<br>      &#125;<br>      <span class="hljs-keyword">if</span> (requests.<span class="hljs-property">length</span> === <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-keyword">delete</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">requests</span>[name];<br>      &#125;<br>      <span class="hljs-keyword">return</span>;<br>    &#125;<br><br>    <span class="hljs-comment">// If there are no pending requests, then put it in</span><br>    <span class="hljs-comment">// the freeSockets pool, but only if we&#x27;re allowed to do so.</span><br>    <span class="hljs-keyword">const</span> req = socket.<span class="hljs-property">_httpMessage</span>;<br>    <span class="hljs-keyword">if</span> (!req || !req.<span class="hljs-property">shouldKeepAlive</span> || !<span class="hljs-variable language_">this</span>.<span class="hljs-property">keepAlive</span>) &#123;<br>      socket.<span class="hljs-title function_">destroy</span>();<br>      <span class="hljs-keyword">return</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">const</span> freeSockets = <span class="hljs-variable language_">this</span>.<span class="hljs-property">freeSockets</span>[name] || [];<br>    <span class="hljs-keyword">const</span> freeLen = freeSockets.<span class="hljs-property">length</span>;<br>    <span class="hljs-keyword">let</span> count = freeLen;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">sockets</span>[name])<br>      count += <span class="hljs-variable language_">this</span>.<span class="hljs-property">sockets</span>[name].<span class="hljs-property">length</span>;<br><br>    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">totalSocketCount</span> &gt; <span class="hljs-variable language_">this</span>.<span class="hljs-property">maxTotalSockets</span> ||<br>        count &gt; <span class="hljs-variable language_">this</span>.<span class="hljs-property">maxSockets</span> ||<br>        freeLen &gt;= <span class="hljs-variable language_">this</span>.<span class="hljs-property">maxFreeSockets</span> ||<br>        !<span class="hljs-variable language_">this</span>.<span class="hljs-title function_">keepSocketAlive</span>(socket)) &#123;<br>      socket.<span class="hljs-title function_">destroy</span>();<br>      <span class="hljs-keyword">return</span>;<br>    &#125;<br><br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">freeSockets</span>[name] = freeSockets;<br>    socket[async_id_symbol] = -<span class="hljs-number">1</span>;<br>    socket.<span class="hljs-property">_httpMessage</span> = <span class="hljs-literal">null</span>;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">removeSocket</span>(socket, options);<br><br>    socket.<span class="hljs-title function_">once</span>(<span class="hljs-string">&#x27;error&#x27;</span>, freeSocketErrorListener);<br>    <span class="hljs-title class_">ArrayPrototypePush</span>(freeSockets, socket);<br>  &#125;);<br><br>  <span class="hljs-comment">// Don&#x27;t emit keylog events unless there is a listener for them.</span><br>  <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;newListener&#x27;</span>, maybeEnableKeylog);<br>&#125;<br></code></pre></td></tr></table></figure><p>注意这句话</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"> <span class="hljs-comment">// If there are no pending requests, then put it in</span><br>    <span class="hljs-comment">// the freeSockets pool, but only if we&#x27;re allowed to do so.</span><br><span class="hljs-keyword">const</span> req = socket.<span class="hljs-property">_httpMessage</span>;<br><span class="hljs-keyword">if</span> (!req || !req.<span class="hljs-property">shouldKeepAlive</span> || !<span class="hljs-variable language_">this</span>.<span class="hljs-property">keepAlive</span>) &#123;<br>      socket.<span class="hljs-title function_">destroy</span>();<br>      <span class="hljs-keyword">return</span>;<br>    &#125;<br></code></pre></td></tr></table></figure><p>如果不是keepAlive的，一个请求结束，这个socket将果断断开，但其实还有一个条件，那就是，已经没有等待要处理的请求了，也是直接断开，避免浪费内存。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">tickOnSocket</span>(<span class="hljs-params">req, socket</span>) &#123;<br>  <span class="hljs-keyword">const</span> parser = parsers.<span class="hljs-title function_">alloc</span>();<br>  req.<span class="hljs-property">socket</span> = socket;<br>  <span class="hljs-keyword">const</span> lenient = req.<span class="hljs-property">insecureHTTPParser</span> === <span class="hljs-literal">undefined</span> ?<br>    <span class="hljs-title function_">isLenient</span>() : req.<span class="hljs-property">insecureHTTPParser</span>;<br>  parser.<span class="hljs-title function_">initialize</span>(<span class="hljs-title class_">HTTPParser</span>.<span class="hljs-property">RESPONSE</span>,<br>                    <span class="hljs-keyword">new</span> <span class="hljs-title class_">HTTPClientAsyncResource</span>(<span class="hljs-string">&#x27;HTTPINCOMINGMESSAGE&#x27;</span>, req),<br>                    req.<span class="hljs-property">maxHeaderSize</span> || <span class="hljs-number">0</span>,<br>                    lenient ? kLenientAll : kLenientNone,<br>                    <span class="hljs-number">0</span>);<br>  parser.<span class="hljs-property">socket</span> = socket;<br>  parser.<span class="hljs-property">outgoing</span> = req;<br>  req.<span class="hljs-property">parser</span> = parser;<br><br>  socket.<span class="hljs-property">parser</span> = parser;<br>  socket.<span class="hljs-property">_httpMessage</span> = req;<span class="hljs-comment">//是在这赋值的。</span><br><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-title class_">ClientRequest</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">onSocket</span> = <span class="hljs-keyword">function</span> <span class="hljs-title function_">onSocket</span>(<span class="hljs-params">socket, err</span>) &#123;<br>  <span class="hljs-comment">// TODO(ronag): Between here and onSocketNT the socket</span><br>  <span class="hljs-comment">// has no &#x27;error&#x27; handler.</span><br>  process.<span class="hljs-title function_">nextTick</span>(onSocketNT, <span class="hljs-variable language_">this</span>, socket, err);<br>&#125;;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">onSocketNT</span>(<span class="hljs-params">req, socket, err</span>) &#123;<br>  <span class="hljs-keyword">if</span> (req.<span class="hljs-property">destroyed</span> || err) &#123;<br>    req.<span class="hljs-property">destroyed</span> = <span class="hljs-literal">true</span>;<br><br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">_destroy</span>(<span class="hljs-params">req, err</span>) &#123;<br>      <span class="hljs-keyword">if</span> (!req.<span class="hljs-property">aborted</span> &amp;&amp; !err) &#123;<br>        err = <span class="hljs-title function_">connResetException</span>(<span class="hljs-string">&#x27;socket hang up&#x27;</span>);<br>      &#125;<br>      <span class="hljs-keyword">if</span> (err) &#123;<br>        req.<span class="hljs-title function_">emit</span>(<span class="hljs-string">&#x27;error&#x27;</span>, err);<br>      &#125;<br>      req.<span class="hljs-property">_closed</span> = <span class="hljs-literal">true</span>;<br>      req.<span class="hljs-title function_">emit</span>(<span class="hljs-string">&#x27;close&#x27;</span>);<br>    &#125;<br><br>    <span class="hljs-keyword">if</span> (socket) &#123;<br>      <span class="hljs-keyword">if</span> (!err &amp;&amp; req.<span class="hljs-property">agent</span> &amp;&amp; !socket.<span class="hljs-property">destroyed</span>) &#123;<br>        socket.<span class="hljs-title function_">emit</span>(<span class="hljs-string">&#x27;free&#x27;</span>);<br>      &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-title function_">finished</span>(socket.<span class="hljs-title function_">destroy</span>(err || req[kError]), <span class="hljs-function">(<span class="hljs-params">er</span>) =&gt;</span> &#123;<br>          <span class="hljs-keyword">if</span> (er?.<span class="hljs-property">code</span> === <span class="hljs-string">&#x27;ERR_STREAM_PREMATURE_CLOSE&#x27;</span>) &#123;<br>            er = <span class="hljs-literal">null</span>;<br>          &#125;<br>          <span class="hljs-title function_">_destroy</span>(req, er || err);<br>        &#125;);<br>        <span class="hljs-keyword">return</span>;<br>      &#125;<br>    &#125;<br><br>    <span class="hljs-title function_">_destroy</span>(req, err || req[kError]);<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-title function_">tickOnSocket</span>(req, socket);<br>    req.<span class="hljs-title function_">_flush</span>();<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>这是底层Socket的setKeepAlive，</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-title class_">Socket</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">setKeepAlive</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">setting, msecs</span>) &#123;<br>  <span class="hljs-keyword">if</span> (!<span class="hljs-variable language_">this</span>.<span class="hljs-property">_handle</span>) &#123;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">once</span>(<span class="hljs-string">&#x27;connect&#x27;</span>, <span class="hljs-function">() =&gt;</span> <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">setKeepAlive</span>(setting, msecs));<br>    <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>;<br>  &#125;<br><br>  <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">_handle</span>.<span class="hljs-property">setKeepAlive</span>)<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">_handle</span>.<span class="hljs-title function_">setKeepAlive</span>(setting, ~~(msecs / <span class="hljs-number">1000</span>));<br><br>  <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>;<br>&#125;;<br></code></pre></td></tr></table></figure><p>这个是SetKeepAlive的底层C++代码</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">TCPWrap::SetKeepAlive</span><span class="hljs-params">(<span class="hljs-type">const</span> FunctionCallbackInfo&lt;Value&gt;&amp; args)</span> </span>&#123;<br>  TCPWrap* wrap;<br>  <span class="hljs-built_in">ASSIGN_OR_RETURN_UNWRAP</span>(&amp;wrap,<br>                          args.<span class="hljs-built_in">Holder</span>(),<br>                          args.<span class="hljs-built_in">GetReturnValue</span>().<span class="hljs-built_in">Set</span>(UV_EBADF));<br>  Environment* env = wrap-&gt;<span class="hljs-built_in">env</span>();<br>  <span class="hljs-type">int</span> enable;<br>  <span class="hljs-keyword">if</span> (!args[<span class="hljs-number">0</span>]-&gt;<span class="hljs-built_in">Int32Value</span>(env-&gt;<span class="hljs-built_in">context</span>()).<span class="hljs-built_in">To</span>(&amp;enable)) <span class="hljs-keyword">return</span>;<br>  <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> delay = <span class="hljs-built_in">static_cast</span>&lt;<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span>&gt;(args[<span class="hljs-number">1</span>].<span class="hljs-built_in">As</span>&lt;Uint32&gt;()-&gt;<span class="hljs-built_in">Value</span>());<br>  <span class="hljs-type">int</span> err = <span class="hljs-built_in">uv_tcp_keepalive</span>(&amp;wrap-&gt;handle_, enable, delay);<br>  args.<span class="hljs-built_in">GetReturnValue</span>().<span class="hljs-built_in">Set</span>(err);<br>&#125;<br><br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">TCPWrap::Initialize</span><span class="hljs-params">(Local&lt;Object&gt; target,</span></span><br><span class="hljs-params"><span class="hljs-function">                         Local&lt;Value&gt; unused,</span></span><br><span class="hljs-params"><span class="hljs-function">                         Local&lt;Context&gt; context,</span></span><br><span class="hljs-params"><span class="hljs-function">                         <span class="hljs-type">void</span>* priv)</span> </span>&#123;<br>  Environment* env = Environment::<span class="hljs-built_in">GetCurrent</span>(context);<br><br>  Local&lt;FunctionTemplate&gt; t = env-&gt;<span class="hljs-built_in">NewFunctionTemplate</span>(New);<br>  t-&gt;<span class="hljs-built_in">InstanceTemplate</span>()-&gt;<span class="hljs-built_in">SetInternalFieldCount</span>(StreamBase::kInternalFieldCount);<br><br>  <span class="hljs-comment">// Init properties</span><br>  t-&gt;<span class="hljs-built_in">InstanceTemplate</span>()-&gt;<span class="hljs-built_in">Set</span>(<span class="hljs-built_in">FIXED_ONE_BYTE_STRING</span>(env-&gt;<span class="hljs-built_in">isolate</span>(), <span class="hljs-string">&quot;reading&quot;</span>),<br>                             Boolean::<span class="hljs-built_in">New</span>(env-&gt;<span class="hljs-built_in">isolate</span>(), <span class="hljs-literal">false</span>));<br>  t-&gt;<span class="hljs-built_in">InstanceTemplate</span>()-&gt;<span class="hljs-built_in">Set</span>(env-&gt;<span class="hljs-built_in">owner_symbol</span>(), <span class="hljs-built_in">Null</span>(env-&gt;<span class="hljs-built_in">isolate</span>()));<br>  t-&gt;<span class="hljs-built_in">InstanceTemplate</span>()-&gt;<span class="hljs-built_in">Set</span>(env-&gt;<span class="hljs-built_in">onconnection_string</span>(), <span class="hljs-built_in">Null</span>(env-&gt;<span class="hljs-built_in">isolate</span>()));<br><br>  t-&gt;<span class="hljs-built_in">Inherit</span>(LibuvStreamWrap::<span class="hljs-built_in">GetConstructorTemplate</span>(env));<br><br>  env-&gt;<span class="hljs-built_in">SetProtoMethod</span>(t, <span class="hljs-string">&quot;open&quot;</span>, Open);<br>  env-&gt;<span class="hljs-built_in">SetProtoMethod</span>(t, <span class="hljs-string">&quot;bind&quot;</span>, Bind);<br>  env-&gt;<span class="hljs-built_in">SetProtoMethod</span>(t, <span class="hljs-string">&quot;listen&quot;</span>, Listen);<br>  env-&gt;<span class="hljs-built_in">SetProtoMethod</span>(t, <span class="hljs-string">&quot;connect&quot;</span>, Connect);<br>  env-&gt;<span class="hljs-built_in">SetProtoMethod</span>(t, <span class="hljs-string">&quot;bind6&quot;</span>, Bind6);<br>  env-&gt;<span class="hljs-built_in">SetProtoMethod</span>(t, <span class="hljs-string">&quot;connect6&quot;</span>, Connect6);<br>  env-&gt;<span class="hljs-built_in">SetProtoMethod</span>(t, <span class="hljs-string">&quot;getsockname&quot;</span>,<br>                      GetSockOrPeerName&lt;TCPWrap, uv_tcp_getsockname&gt;);<br>  env-&gt;<span class="hljs-built_in">SetProtoMethod</span>(t, <span class="hljs-string">&quot;getpeername&quot;</span>,<br>                      GetSockOrPeerName&lt;TCPWrap, uv_tcp_getpeername&gt;);<br>  env-&gt;<span class="hljs-built_in">SetProtoMethod</span>(t, <span class="hljs-string">&quot;setNoDelay&quot;</span>, SetNoDelay);<br>  env-&gt;<span class="hljs-built_in">SetProtoMethod</span>(t, <span class="hljs-string">&quot;setKeepAlive&quot;</span>, SetKeepAlive);<span class="hljs-comment">//这里注册</span><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><br><span class="hljs-title class_">In</span> the <span class="hljs-keyword">case</span> <span class="hljs-keyword">of</span> a premature connection close before the response is received,<br>the following events will be emitted <span class="hljs-keyword">in</span> the following <span class="hljs-attr">order</span>:<br><br>* <span class="hljs-string">`&#x27;socket&#x27;`</span><br>* <span class="hljs-string">`&#x27;error&#x27;`</span> <span class="hljs-keyword">with</span> an error <span class="hljs-keyword">with</span> message <span class="hljs-string">`&#x27;Error: socket hang up&#x27;`</span> and code<br>  <span class="hljs-string">`&#x27;ECONNRESET&#x27;`</span><br>* <span class="hljs-string">`&#x27;close&#x27;`</span><br><br><span class="hljs-title class_">If</span> <span class="hljs-string">`req.destroy()`</span> is called before a socket is assigned, the following<br>events will be emitted <span class="hljs-keyword">in</span> the following <span class="hljs-attr">order</span>:<br><br>* (<span class="hljs-string">`req.destroy()`</span> called here)<br>* <span class="hljs-string">`&#x27;error&#x27;`</span> <span class="hljs-keyword">with</span> an error <span class="hljs-keyword">with</span> message <span class="hljs-string">`&#x27;Error: socket hang up&#x27;`</span> and code<br>  <span class="hljs-string">`&#x27;ECONNRESET&#x27;`</span><br>* <span class="hljs-string">`&#x27;close&#x27;`</span><br><br><span class="hljs-title class_">If</span> <span class="hljs-string">`req.destroy()`</span> is called before the connection succeeds, the following<br>events will be emitted <span class="hljs-keyword">in</span> the following <span class="hljs-attr">order</span>:<br><br>* <span class="hljs-string">`&#x27;socket&#x27;`</span><br>* (<span class="hljs-string">`req.destroy()`</span> called here)<br>* <span class="hljs-string">`&#x27;error&#x27;`</span> <span class="hljs-keyword">with</span> an error <span class="hljs-keyword">with</span> message <span class="hljs-string">`&#x27;Error: socket hang up&#x27;`</span> and code<br>  <span class="hljs-string">`&#x27;ECONNRESET&#x27;`</span><br>* <span class="hljs-string">`&#x27;close&#x27;`</span><br><br><br></code></pre></td></tr></table></figure><p>dns解析</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">lookupAndListen</span>(<span class="hljs-params">self, port, address, backlog, exclusive, flags</span>) &#123;<br>  <span class="hljs-keyword">if</span> (dns === <span class="hljs-literal">undefined</span>) dns = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;dns&#x27;</span>);<br>  dns.<span class="hljs-title function_">lookup</span>(address, <span class="hljs-keyword">function</span> <span class="hljs-title function_">doListen</span>(<span class="hljs-params">err, ip, addressType</span>) &#123;<br>    <span class="hljs-keyword">if</span> (err) &#123;<br>      self.<span class="hljs-title function_">emit</span>(<span class="hljs-string">&#x27;error&#x27;</span>, err);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      addressType = ip ? addressType : <span class="hljs-number">4</span>;<br>      <span class="hljs-title function_">listenInCluster</span>(self, ip, port, addressType,<br>                      backlog, <span class="hljs-literal">undefined</span>, exclusive, flags);<br>    &#125;<br>  &#125;);<br>&#125;<br><br></code></pre></td></tr></table></figure><p>创建socket，是管道，或者 tcp</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">createHandle</span>(<span class="hljs-params">fd, is_server</span>) &#123;<br>  <span class="hljs-title function_">validateInt32</span>(fd, <span class="hljs-string">&#x27;fd&#x27;</span>, <span class="hljs-number">0</span>);<br>  <span class="hljs-keyword">const</span> type = <span class="hljs-title function_">guessHandleType</span>(fd);<br>  <span class="hljs-keyword">if</span> (type === <span class="hljs-string">&#x27;PIPE&#x27;</span>) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Pipe</span>(<br>      is_server ? <span class="hljs-title class_">PipeConstants</span>.<span class="hljs-property">SERVER</span> : <span class="hljs-title class_">PipeConstants</span>.<span class="hljs-property">SOCKET</span><br>    );<br>  &#125;<br><br>  <span class="hljs-keyword">if</span> (type === <span class="hljs-string">&#x27;TCP&#x27;</span>) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title function_">TCP</span>(<br>      is_server ? <span class="hljs-title class_">TCPConstants</span>.<span class="hljs-property">SERVER</span> : <span class="hljs-title class_">TCPConstants</span>.<span class="hljs-property">SOCKET</span><br>    );<br>  &#125;<br><br>  <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title function_">ERR_INVALID_FD_TYPE</span>(type);<br>&#125;<br></code></pre></td></tr></table></figure><p>老外的测试用例</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-title function_">tape</span>(<span class="hljs-string">&#x27;keepAlive is timed&#x27;</span>, <span class="hljs-keyword">function</span> (<span class="hljs-params">t</span>) &#123;<br>  <span class="hljs-keyword">var</span> agent = <span class="hljs-keyword">new</span> http.<span class="hljs-title class_">Agent</span>(&#123; <span class="hljs-attr">keepAlive</span>: <span class="hljs-literal">true</span> &#125;)<br>  <span class="hljs-keyword">var</span> options = &#123; <span class="hljs-attr">time</span>: <span class="hljs-literal">true</span>, <span class="hljs-attr">agent</span>: agent &#125;<br>  <span class="hljs-keyword">var</span> start1 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>().<span class="hljs-title function_">getTime</span>()<br><br>  <span class="hljs-title function_">request</span>(<span class="hljs-string">&#x27;http://localhost:&#x27;</span> + plainServer.<span class="hljs-property">port</span> + <span class="hljs-string">&#x27;/&#x27;</span>, options, <span class="hljs-keyword">function</span> (<span class="hljs-params">err1, res1, body1</span>) &#123;<br>    <span class="hljs-keyword">var</span> end1 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>().<span class="hljs-title function_">getTime</span>()<br><br>    <span class="hljs-comment">// ensure the first request&#x27;s timestamps look ok</span><br>    t.<span class="hljs-title function_">equal</span>((res1.<span class="hljs-property">timingStart</span> &gt;= start1), <span class="hljs-literal">true</span>)<br>    t.<span class="hljs-title function_">equal</span>((start1 &lt;= end1), <span class="hljs-literal">true</span>)<br><br>    t.<span class="hljs-title function_">equal</span>((res1.<span class="hljs-property">timings</span>.<span class="hljs-property">socket</span> &gt;= <span class="hljs-number">0</span>), <span class="hljs-literal">true</span>)<br>    t.<span class="hljs-title function_">equal</span>((res1.<span class="hljs-property">timings</span>.<span class="hljs-property">lookup</span> &gt;= res1.<span class="hljs-property">timings</span>.<span class="hljs-property">socket</span>), <span class="hljs-literal">true</span>)<br>    t.<span class="hljs-title function_">equal</span>((res1.<span class="hljs-property">timings</span>.<span class="hljs-property">connect</span> &gt;= res1.<span class="hljs-property">timings</span>.<span class="hljs-property">lookup</span>), <span class="hljs-literal">true</span>)<br>    t.<span class="hljs-title function_">equal</span>((res1.<span class="hljs-property">timings</span>.<span class="hljs-property">response</span> &gt;= res1.<span class="hljs-property">timings</span>.<span class="hljs-property">connect</span>), <span class="hljs-literal">true</span>)<br><br>    <span class="hljs-comment">// open a second request with the same agent so we re-use the same connection</span><br>    <span class="hljs-keyword">var</span> start2 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>().<span class="hljs-title function_">getTime</span>()<br>    <span class="hljs-title function_">request</span>(<span class="hljs-string">&#x27;http://localhost:&#x27;</span> + plainServer.<span class="hljs-property">port</span> + <span class="hljs-string">&#x27;/&#x27;</span>, options, <span class="hljs-keyword">function</span> (<span class="hljs-params">err2, res2, body2</span>) &#123;<br>      <span class="hljs-keyword">var</span> end2 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>().<span class="hljs-title function_">getTime</span>()<br><br>      <span class="hljs-comment">// ensure the second request&#x27;s timestamps look ok</span><br>      t.<span class="hljs-title function_">equal</span>((res2.<span class="hljs-property">timingStart</span> &gt;= start2), <span class="hljs-literal">true</span>)<br>      t.<span class="hljs-title function_">equal</span>((start2 &lt;= end2), <span class="hljs-literal">true</span>)<br><br>      <span class="hljs-comment">// ensure socket==lookup==connect for the second request</span><br>      t.<span class="hljs-title function_">equal</span>((res2.<span class="hljs-property">timings</span>.<span class="hljs-property">socket</span> &gt;= <span class="hljs-number">0</span>), <span class="hljs-literal">true</span>)<br>      t.<span class="hljs-title function_">equal</span>((res2.<span class="hljs-property">timings</span>.<span class="hljs-property">lookup</span> === res2.<span class="hljs-property">timings</span>.<span class="hljs-property">socket</span>), <span class="hljs-literal">true</span>)<br>      t.<span class="hljs-title function_">equal</span>((res2.<span class="hljs-property">timings</span>.<span class="hljs-property">connect</span> === res2.<span class="hljs-property">timings</span>.<span class="hljs-property">lookup</span>), <span class="hljs-literal">true</span>)<br>      t.<span class="hljs-title function_">equal</span>((res2.<span class="hljs-property">timings</span>.<span class="hljs-property">response</span> &gt;= res2.<span class="hljs-property">timings</span>.<span class="hljs-property">connect</span>), <span class="hljs-literal">true</span>)<br><br>      <span class="hljs-comment">// explicitly shut down the agent</span><br>      <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> agent.<span class="hljs-property">destroy</span> === <span class="hljs-string">&#x27;function&#x27;</span>) &#123;<br>        agent.<span class="hljs-title function_">destroy</span>()<br>      &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-comment">// node &lt; 0.12</span><br>        <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">keys</span>(agent.<span class="hljs-property">sockets</span>).<span class="hljs-title function_">forEach</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">name</span>) &#123;<br>          agent.<span class="hljs-property">sockets</span>[name].<span class="hljs-title function_">forEach</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">socket</span>) &#123;<br>            socket.<span class="hljs-title function_">end</span>()<br>          &#125;)<br>        &#125;)<br>      &#125;<br><br>      t.<span class="hljs-title function_">end</span>()<br>    &#125;)<br>  &#125;)<br>&#125;)<br></code></pre></td></tr></table></figure><!-- flag of hidden posts -->]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>源码</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>递归思想</title>
    <link href="/2022/02/05/%E9%80%92%E5%BD%92%E6%80%9D%E6%83%B3/"/>
    <url>/2022/02/05/%E9%80%92%E5%BD%92%E6%80%9D%E6%83%B3/</url>
    
    <content type="html"><![CDATA[<p>递归原理与应用</p><p>导语：递归是计算机科学中常用的一种解决问题的方法。本文将为你简单介绍递归的原理及如何使用递归解决程序问题。</p><p>一、递归简介</p><p>递归是一种编程技巧，它允许一个函数直接或间接地调用自身。递归可以将复杂问题分解为更小的子问题，从而简化问题求解过程。</p><p>二、递归原理</p><p>递归的原理可以用下面两个关键概念来解释：</p><ol><li><p>基本情况（Base Case）：递归过程需要有一个或多个基本情况，当问题规模缩小到基本情况时，可以直接得到答案，不再进行递归调用。</p></li><li><p>递归调用（Recursive Call）：在非基本情况下，我们需要通过调用函数自身来解决更小规模的问题，然后通过这些子问题的解来构建原问题的解。</p></li></ol><p>三、递归应用举例</p><p>例子：阶乘计算</p><p>阶乘是一个经典的递归问题。n 的阶乘表示为 n!，定义为从 1 到 n 的所有整数的乘积。例如，5! &#x3D; 5 × 4 × 3 × 2 × 1 &#x3D; 120。</p><p>我们可以用递归的方法来计算阶乘：</p><ol><li><p>基本情况：当 n&#x3D;1 时，1! &#x3D; 1，不再进行递归调用。</p></li><li><p>递归调用：当 n&gt;1 时，我们可以将 n! 分解为 n × (n-1)!，然后通过计算 (n-1)! 来求解 n!。</p></li></ol><p>下面是一个用 Python 编写的递归阶乘函数示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">factorial</span>(<span class="hljs-params">n</span>):<br>    <span class="hljs-keyword">if</span> n == <span class="hljs-number">1</span>:  <span class="hljs-comment"># 基本情况</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-number">1</span><br>    <span class="hljs-keyword">else</span>:  <span class="hljs-comment"># 递归调用</span><br>        <span class="hljs-keyword">return</span> n * factorial(n - <span class="hljs-number">1</span>)<br></code></pre></td></tr></table></figure><p>四、递归的优缺点</p><p>优点：</p><ol><li><p>代码简洁：递归能将复杂问题分解为更简单的子问题，使代码更加简洁。</p></li><li><p>易于理解：递归方法通常更符合人类的思维方式，容易理解。</p></li></ol><p>缺点：</p><ol><li><p>空间消耗：递归调用会占用较多的系统栈空间，可能导致栈溢出。</p></li><li><p>效率较低：递归调用会产生较大的函数调用开销，影响程序运行效率。</p></li></ol><p>总结：递归是一种强大的编程技巧，可以简化许多问题的求解过程。然而，递归也有其局限性，需要在实际应用中根据问题特点权衡是否使用。</p><p>五、以下是几个常见的需要递归解决的问题及其伪代码：</p><ol><li>斐波那契数列</li></ol><p>问题描述：斐波那契数列是一个递增的整数序列，其中每个数字是前两个数字的和。前几个数字是：0, 1, 1, 2, 3, 5, 8, 13, …。求第 n 个斐波那契数。</p><p>伪代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">fibonacci</span>(<span class="hljs-params">n</span>)<br>    <span class="hljs-keyword">if</span> n == <span class="hljs-number">0</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span><br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> n == <span class="hljs-number">1</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-number">1</span><br>    <span class="hljs-keyword">else</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-title function_">fibonacci</span>(n - <span class="hljs-number">1</span>) + <span class="hljs-title function_">fibonacci</span>(n - <span class="hljs-number">2</span>)<br></code></pre></td></tr></table></figure><ol start="2"><li>二叉树深度</li></ol><p>问题描述：给定一个二叉树，求其最大深度。</p><p>伪代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">max_depth</span>(<span class="hljs-params">node</span>)<br>    <span class="hljs-keyword">if</span> node == <span class="hljs-literal">null</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span><br>    <span class="hljs-keyword">else</span><br>        left_depth = <span class="hljs-title function_">max_depth</span>(node.<span class="hljs-property">left</span>)<br>        right_depth = <span class="hljs-title function_">max_depth</span>(node.<span class="hljs-property">right</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-title function_">max</span>(left_depth, right_depth) + <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><ol start="3"><li>汉诺塔问题</li></ol><p>问题描述：有三根柱子（A、B、C），A柱子上有 n 个盘子，从小到大依次叠放。每次只能移动一个盘子，且大盘子不能放在小盘子上。求将所有盘子从 A 柱移动到 C 柱的最少步骤。</p><p>伪代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">hanoi</span>(<span class="hljs-params">n, source, target, auxiliary</span>)<br>    <span class="hljs-keyword">if</span> n == <span class="hljs-number">1</span><br>        move disk <span class="hljs-keyword">from</span> source to target<br>    <span class="hljs-keyword">else</span><br>        <span class="hljs-title function_">hanoi</span>(n - <span class="hljs-number">1</span>, source, auxiliary, target)<br>        move disk <span class="hljs-keyword">from</span> source to tar<span class="hljs-keyword">get</span><br>        <span class="hljs-title function_">hanoi</span>(<span class="hljs-params">n - <span class="hljs-number">1</span>, auxiliary, target, source</span>)<br></code></pre></td></tr></table></figure><ol start="4"><li>全排列</li></ol><p>问题描述：给定一个不重复的整数数组，求其所有可能的排列。</p><p>伪代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">permutations</span>(<span class="hljs-params">array, start</span>)<br>    <span class="hljs-keyword">if</span> start == <span class="hljs-title function_">length</span>(array) - <span class="hljs-number">1</span><br>        output array<br>    <span class="hljs-keyword">else</span><br>        <span class="hljs-keyword">for</span> i = start to <span class="hljs-title function_">length</span>(array) - <span class="hljs-number">1</span><br>            <span class="hljs-title function_">swap</span>(array[start], array[i])<br>            <span class="hljs-title function_">permutations</span>(array, start + <span class="hljs-number">1</span>)<br>            <span class="hljs-title function_">swap</span>(array[start], array[i])  <span class="hljs-comment">// Backtrack</span><br></code></pre></td></tr></table></figure><p>请注意，这些伪代码仅用于解释递归算法的基本思想，并未考虑效率优化。在实际应用中，可以考虑使用动态规划、记忆化搜索等方法提高算法效率。</p><!-- flag of hidden posts -->]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>我解决了Vscode中vue方法跳转的难题</title>
    <link href="/2022/02/01/%E6%88%91%E8%A7%A3%E5%86%B3%E4%BA%86vscode%E4%B8%ADvue%E6%96%B9%E6%B3%95%E8%B7%B3%E8%BD%AC%E7%9A%84%E9%9A%BE%E9%A2%98/"/>
    <url>/2022/02/01/%E6%88%91%E8%A7%A3%E5%86%B3%E4%BA%86vscode%E4%B8%ADvue%E6%96%B9%E6%B3%95%E8%B7%B3%E8%BD%AC%E7%9A%84%E9%9A%BE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h4 id="第一步-创建项目"><a href="#第一步-创建项目" class="headerlink" title="第一步 创建项目"></a>第一步 创建项目</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yo code mp-sign-vscode-extension<br></code></pre></td></tr></table></figure><p>根据<a href="https://code.visualstudio.com/api/language-extensions/programmatic-language-features">vscode官网</a>描述 ，要实现一个GoDefinition的插件，需要做以下两个步骤；</p><p><img src="/2022/02/01/%E6%88%91%E8%A7%A3%E5%86%B3%E4%BA%86vscode%E4%B8%ADvue%E6%96%B9%E6%B3%95%E8%B7%B3%E8%BD%AC%E7%9A%84%E9%9A%BE%E9%A2%98/image-20220131104418874.png" loading="lazy" data-src="/2022/02/01/%E6%88%91%E8%A7%A3%E5%86%B3%E4%BA%86vscode%E4%B8%ADvue%E6%96%B9%E6%B3%95%E8%B7%B3%E8%BD%AC%E7%9A%84%E9%9A%BE%E9%A2%98/image-20220131104418874.png"></p><h4 id="第一步，我们要在语言服务中申明支持-defintionProvider"><a href="#第一步，我们要在语言服务中申明支持-defintionProvider" class="headerlink" title="第一步，我们要在语言服务中申明支持 defintionProvider"></a>第一步，我们要在语言服务中申明支持 defintionProvider</h4><p>这样才可以在在插件加载之后出现</p><p><img src="/2022/02/01/%E6%88%91%E8%A7%A3%E5%86%B3%E4%BA%86vscode%E4%B8%ADvue%E6%96%B9%E6%B3%95%E8%B7%B3%E8%BD%AC%E7%9A%84%E9%9A%BE%E9%A2%98/image-20220131104623771.png" loading="lazy" data-src="/2022/02/01/%E6%88%91%E8%A7%A3%E5%86%B3%E4%BA%86vscode%E4%B8%ADvue%E6%96%B9%E6%B3%95%E8%B7%B3%E8%BD%AC%E7%9A%84%E9%9A%BE%E9%A2%98/image-20220131104623771.png"></p><p>转到定义之类的菜单，但我们这里不这么做，因为，根据官网描述，这个只需要被任何一个插件申明一次即可，因为我们的项目mp-sign是一个vue项目，然后大家肯定是安装了<a href="https://github.com/vuejs/vetur">vetur</a>这个大名鼎鼎的插件的，可以在源码中看到，</p><p><img src="/2022/02/01/%E6%88%91%E8%A7%A3%E5%86%B3%E4%BA%86vscode%E4%B8%ADvue%E6%96%B9%E6%B3%95%E8%B7%B3%E8%BD%AC%E7%9A%84%E9%9A%BE%E9%A2%98/image-20220131105203998.png" alt="image-20220131105203998" loading="lazy" data-src="/2022/02/01/%E6%88%91%E8%A7%A3%E5%86%B3%E4%BA%86vscode%E4%B8%ADvue%E6%96%B9%E6%B3%95%E8%B7%B3%E8%BD%AC%E7%9A%84%E9%9A%BE%E9%A2%98/image-20220131105203998.png"></p><p>上述申明这个插件做过，因此我们可以直接略过这一步；所以我们进入第二步，实现一个<code>vscode.DefinitionProvider</code>。</p><h4 id="第二步-实现vscode-DefinitionProvider"><a href="#第二步-实现vscode-DefinitionProvider" class="headerlink" title="第二步 实现vscode.DefinitionProvider"></a>第二步 实现<code>vscode.DefinitionProvider</code></h4><p>根据官网描述，我们要定义个自定义跳转的插件，需要实现一个  vscode.DefinitionProvider，其原理就是写一个方法实现，定位到源码位置vscode.Location;其原理就是，当我们按住【mac上是command建|windows上是CTRL键】+ 鼠标左键，vscode语言服务就会将当前鼠标位置捕捉到的相关信息传递到给我们这个插件，这些信息丢给vscode.DefinitionProvider 具体实现的 <code>provideDefinition</code>这个回调处理。</p><p>然后根据我们mp-sign项目的特点，我们主要是解决 mixin和vuex方法定位比较难的问题。同时在实践中发现vue methods块中的方法调用也无法自动跳转，定位代码也挺烦的，因此，直接把三种方式跳转定义全部实现了；</p><p>我们要实现的大体框架如下所示。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> vscode <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vscode&quot;</span>;<br><span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> path <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;path&quot;</span>;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MpDefinitionProvider</span> <span class="hljs-keyword">implements</span> vscode.<span class="hljs-property">DefinitionProvider</span> &#123;<br>  <span class="hljs-title function_">provideDefinition</span>(<br>    <span class="hljs-attr">document</span>: vscode.<span class="hljs-property">TextDocument</span>,<br>    <span class="hljs-attr">position</span>: vscode.<span class="hljs-property">Position</span>,<br>    <span class="hljs-attr">token</span>: vscode.<span class="hljs-property">CancellationToken</span><br>  ): vscode.<span class="hljs-property">ProviderResult</span>&lt;vscode.<span class="hljs-property">Definition</span> | vscode.<span class="hljs-property">LocationLink</span>[]&gt; &#123;<br><br>    <span class="hljs-keyword">const</span> <span class="hljs-attr">location</span>:vscode.<span class="hljs-property">Location</span> = <span class="hljs-title function_">vueMethods</span>()||<span class="hljs-title function_">mixinMethod</span>()||<span class="hljs-title function_">vuexActionOrMutations</span>()||<span class="hljs-literal">null</span><br><br>    <span class="hljs-keyword">return</span> <span class="hljs-title class_">Promise</span>.<span class="hljs-title function_">resolve</span>(<br>      location<br>    );<br>  &#125;<br>&#125;<br><br><span class="hljs-comment">// 是vue的内联方法</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">vueMethods</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-comment">//TODO</span><br>  <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Location</span>()||<span class="hljs-literal">null</span>;<br>&#125;<br><span class="hljs-comment">// 是 mixin 方法</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">mixinMethod</span>(<span class="hljs-params"></span>) &#123;<br>   <span class="hljs-comment">//TODO</span><br>  <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title function_">location</span>()||<span class="hljs-literal">null</span>;<br>&#125;<br><span class="hljs-comment">// 是 Vuex 的action</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">vuexActionOrMutations</span>(<span class="hljs-params"></span>) &#123;<br>   <span class="hljs-comment">//TODO</span><br>  <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title function_">location</span>()||<span class="hljs-literal">null</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>注意看看provideDefinition这个方法，他入参有2个比较重要<code>document vs position</code>，document有一个属性是uri，这个可以方便我们拿到当前文件的path，position，顾名思义，就是当前鼠标悬停的位置，可以方便我们拿到鼠标悬停的字符串是个啥。</p><p>第一个是来处理vueMethods，那么确定目前想要跳转的方法是否是本文件中的methods中的方法，我们需要解析这个vue文件，并且把里面的方法都遍历出来，然后来匹配一下，如果可以匹配到，那说明，改方法就在本文件中对吧。说干就干，解析vue文件搞起，使用 @vue&#x2F;compiler-dom  的 <code>parse</code>方法。</p><p><img src="/2022/02/01/%E6%88%91%E8%A7%A3%E5%86%B3%E4%BA%86vscode%E4%B8%ADvue%E6%96%B9%E6%B3%95%E8%B7%B3%E8%BD%AC%E7%9A%84%E9%9A%BE%E9%A2%98/image-20220131142018464.png" alt="image-20220131142018464" loading="lazy" data-src="/2022/02/01/%E6%88%91%E8%A7%A3%E5%86%B3%E4%BA%86vscode%E4%B8%ADvue%E6%96%B9%E6%B3%95%E8%B7%B3%E8%BD%AC%E7%9A%84%E9%9A%BE%E9%A2%98/image-20220131142018464.png"></p><p>可以看到拿到的结构中children中有三块，template&#x2F;script&#x2F;styles，这块内容你可以去<a href="https://astexplorer.net/">这个网站</a>上看，选择vue就 可以看到，注意一下这里。<strong>每个块中都有一个 loc属性，他的起始位置都有明确的告知，我们这里需要记住一下template文件的end行数</strong>，后面返回vscode.Location时我们需要用到这个偏移量。</p><p>通过script模块中的source字段，我们拿到该vue文件中的script块的内容，通过babel 的parse 就可以拿到语法树 AST（一点都不神秘），就可以很方便的找到里面的methods模块中的各个方法了，拿到这些模块，一一匹配，就可以确定方法是否在改文件内的，如果确定在文件内，就可以通过AST返回的loc信息明确这个定义方法在<code>&lt;script&gt;</code>块中位置了，主要是行数和列偏移。</p><p><img src="/2022/02/01/%E6%88%91%E8%A7%A3%E5%86%B3%E4%BA%86vscode%E4%B8%ADvue%E6%96%B9%E6%B3%95%E8%B7%B3%E8%BD%AC%E7%9A%84%E9%9A%BE%E9%A2%98/image-20220131124523710.png" alt="image-20220131124523710" loading="lazy" data-src="/2022/02/01/%E6%88%91%E8%A7%A3%E5%86%B3%E4%BA%86vscode%E4%B8%ADvue%E6%96%B9%E6%B3%95%E8%B7%B3%E8%BD%AC%E7%9A%84%E9%9A%BE%E9%A2%98/image-20220131124523710.png"></p><p>上面这幅图可以拿到methods块，即name为methods的ObjectProperty结点，一个find方法轻松找到，同样的道理去找这个结点下面的value中的具体的我们要找的method，所以，第一个实现 vue methods的跳转定位就和么被实现了。</p><p>我们先看看实现效果</p><p><img src="/2022/02/01/%E6%88%91%E8%A7%A3%E5%86%B3%E4%BA%86vscode%E4%B8%ADvue%E6%96%B9%E6%B3%95%E8%B7%B3%E8%BD%AC%E7%9A%84%E9%9A%BE%E9%A2%98/gotoMethod.gif" alt="gotoMethod" loading="lazy" data-src="/2022/02/01/%E6%88%91%E8%A7%A3%E5%86%B3%E4%BA%86vscode%E4%B8%ADvue%E6%96%B9%E6%B3%95%E8%B7%B3%E8%BD%AC%E7%9A%84%E9%9A%BE%E9%A2%98/gotoMethod.gif"></p><h4 id="第三步-继续实现-mixin方法跳转-和-vuex-action-跳转"><a href="#第三步-继续实现-mixin方法跳转-和-vuex-action-跳转" class="headerlink" title="第三步 继续实现 mixin方法跳转 和 vuex action 跳转"></a>第三步 继续实现 mixin方法跳转 和 vuex action 跳转</h4><p>大家都知道在vue中引入mixin之后，代码定位复杂度就加大了，一个主要原因是这个方法不在这个vue文件里面，所以，如何实现呢？</p><p>1、经过前面的methods环节的判断，没有找到，就进入了mixin处理块中，这里的逻辑是，找到vue中import的所有的 mixin文件，然后通过babel parse出语法树，按照上面的套路，解析出method的位置，然后生成  vscode.Location返回。</p><p>2、同样的道理，vuex action的方式类似，我们这里之定位  this.$u.vuex(‘Module&#x2F;action’)这类的调用 ，首先通过 document和position两个参数拿到 Module&#x2F;action ，然后分别解析出 module和action ，module方便我们找到import的是按个文件，action可以通过上述ast解析的方式帮我们定位到具体方法，最后同样返回 vscode.Location。</p><p>让我们来看看mixin文件跳转效果以及vuex 之 action 跳转的效果</p><p><img src="/2022/02/01/%E6%88%91%E8%A7%A3%E5%86%B3%E4%BA%86vscode%E4%B8%ADvue%E6%96%B9%E6%B3%95%E8%B7%B3%E8%BD%AC%E7%9A%84%E9%9A%BE%E9%A2%98/mixin.gif" alt="mixin" loading="lazy" data-src="/2022/02/01/%E6%88%91%E8%A7%A3%E5%86%B3%E4%BA%86vscode%E4%B8%ADvue%E6%96%B9%E6%B3%95%E8%B7%B3%E8%BD%AC%E7%9A%84%E9%9A%BE%E9%A2%98/mixin.gif"></p><h4 id="第四步-打包"><a href="#第四步-打包" class="headerlink" title="第四步 打包"></a>第四步 打包</h4><p><code>vsce package</code></p><p>即可，注意node版本要在14以上，不然这个命令会执行失败，另外，如何打包之后发现插件加载失败，可以在这里看日志定位问题</p><p><img src="/2022/02/01/%E6%88%91%E8%A7%A3%E5%86%B3%E4%BA%86vscode%E4%B8%ADvue%E6%96%B9%E6%B3%95%E8%B7%B3%E8%BD%AC%E7%9A%84%E9%9A%BE%E9%A2%98/image-20220201135331741.png" alt="image-20220201135331741" loading="lazy" data-src="/2022/02/01/%E6%88%91%E8%A7%A3%E5%86%B3%E4%BA%86vscode%E4%B8%ADvue%E6%96%B9%E6%B3%95%E8%B7%B3%E8%BD%AC%E7%9A%84%E9%9A%BE%E9%A2%98/image-20220201135331741.png"></p><p>我就碰到过，发现是以为自己安装的npm包babel以及vue解析是放在 devDependencies下的，实际上是需要放到dependencies下面，移动下重新yarn解决。</p><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>研发这个插件的目的就是为了解决自己项目中遇到的方法无法跳转到定义的问题，在有这个思路到具体实现出来总共话了2天时间，其中大部分的时间都放在了研究怎么实现一款自定义插件上，主要还是参考官网，期间了解到了不少概念，比如lsp，还被这个坑过，以为实现一个gotoDefinition插件需要做一个服务端，其实后面发现不需要的，官网上其实说的不怎么详细，还是自己从github上参考了别人写的一个gotoDefinition中得出的结论，我这里不下看到8个github上关于插件的实现。</p><p>document和position的用法也是从一个项目那里了解到的，具体那个忘记记录了，总之这个不重要了，重要的是，你的目标是什么，要达到这个目标你需要准备些什么知识or工具，做这个插件最大的收获是：</p><p>1、学习到了github上几个优秀的插件的实现，顺带也关注了一下几个大佬的博客。</p><p>2、知道了vscode gotoDefinition 的原理，后面碰到不能跳转至少知道背后的原因是啥。</p><p>3、Google不一定可以帮你解决所有问题，当解决不了的时候，记得github搜索，我就是通过搜索某些api了解到其他人怎么实现的，关于插件研发Google确实能你的有限，学会使用其他渠道。</p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>vscode</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何设计一个糅合系统</title>
    <link href="/2021/10/12/%E5%A6%82%E4%BD%95%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AA%E7%B3%85%E5%90%88%E7%B3%BB%E7%BB%9F/"/>
    <url>/2021/10/12/%E5%A6%82%E4%BD%95%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AA%E7%B3%85%E5%90%88%E7%B3%BB%E7%BB%9F/</url>
    
    <content type="html"><![CDATA[<h4 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h4><p>首先，关于这篇文章为何取名为设计一个<strong>糅合系统</strong>的设计，所谓的糅合系统，是指这个系统的用户群体没有那么纯粹，比如，是一个既有c端用户，又有b端用户的使用场景的系统，起初在设计这样一个系统之初，我思考过这样的一个系统会有几个问题：</p><ul><li>逻辑混杂，到时候会出现这个c端是这个样子的，b端为了兼容而妥协，折中出来的并不是一个好的方案，对两类用户来说都<strong>不够简洁</strong>。</li><li>if&#x2F;else糅合的代码可理解性比较差，随着迭代的推进，后续会越来越来维护。</li><li>b端更加注重功能体验，他们要的是功能能不能满足他日常运营，而且<strong>不同类的b其功能是不同的</strong>，用户端更加注重操作体验体验是否好，当然b端也注重操作体验，但相对没c端这么匠心。</li><li>不同的b端可能需要的主体风格不同，是考虑一个b一套代码，还是一套代码配置不同的b，还是一套b的框架下组合不同的工具。</li><li>分离&#x2F;b-part&#x2F;c-part之后，如何复用公共逻辑，减少重复开发工作，公共逻辑包括哪些，下层的规则是什么，该放在何处。</li><li>假如让一个新手加入进来，他怎么快速找到相应的业务的代码逻辑在何处，如何新增，修改代码已实现需求。</li></ul><p>基于以上这些点的思考，我首先走出了一个设计的雏形。</p><h4 id="孵化"><a href="#孵化" class="headerlink" title="孵化"></a>孵化</h4><img src="/2021/10/12/%E5%A6%82%E4%BD%95%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AA%E7%B3%85%E5%90%88%E7%B3%BB%E7%BB%9F/wecom-temp-ae90559c80f2c549419e1bc9bcc34488.jpg" alt="wecom-temp-ae90559c80f2c549419e1bc9bcc34488" style="zoom:60%;" data-src="/2021/10/12/%E5%A6%82%E4%BD%95%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AA%E7%B3%85%E5%90%88%E7%B3%BB%E7%BB%9F/wecom-temp-ae90559c80f2c549419e1bc9bcc34488.jpg"><p>首先，我们先站在上帝视角来看一看，一个用户是如何和我们的系统打交道的。第一个我们关心的是一个三要素：</p><p><strong>是谁？来干什么？干什么后去哪里？</strong>我们可以用一个故事的方式来描述几个这样的案例。</p><ol><li>我是巴乐兔的合同管理员，我来这里给张三发起一份合同，完事之后我要回公司报备下。</li><li>我是李子柒，朋友说这个挺好用的我就来了，我也不知道干什么，我更不知道我要去哪。</li><li>我是黎明，是一个学生，我来签一份摩尔公司发给我的暑期实习劳务合同，完事之后我就没事啦。</li><li>我是韩梅梅，是旺旺兴趣培训班的店员，我来签一份佳佳食品发给我们培训班的采购服务合同。</li><li>….</li></ol><p>以上的场景，我们均可以从里面抛出【是谁，干啥，去哪】，这其实就是我要说的<strong>意图2.0</strong>，。</p><img src="/2021/10/12/%E5%A6%82%E4%BD%95%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AA%E7%B3%85%E5%90%88%E7%B3%BB%E7%BB%9F/image-20211012150705417.png" alt="image-20211012150705417" style="zoom:80%;" data-src="/2021/10/12/%E5%A6%82%E4%BD%95%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AA%E7%B3%85%E5%90%88%E7%B3%BB%E7%BB%9F/image-20211012150705417.png"><p>故事2是一个特例，实际上，不知道什么干什么也是一种干什么，不知道去哪也是一种去哪，不知道是谁也是一种是谁。</p><h5 id="是谁"><a href="#是谁" class="headerlink" title="是谁"></a>是谁</h5><p>就是要确定进入系统的用户身份，是b端的用户，还是c端的用户，一旦确定了身份，这个应该是<strong>全局可知</strong>的</p><ul><li>isC</li><li>isB</li></ul><h5 id="干啥"><a href="#干啥" class="headerlink" title="干啥"></a>干啥</h5><p>就是要确定是谁之后的事了，就像大家去政府办事一样，人家首先明确你是谁，然后在问你来干啥，你干啥是不是得交出一些办事的凭据来，事情的id，<strong>通过这个事情的id就对应到了不同的功能</strong>。</p><img src="/2021/10/12/%E5%A6%82%E4%BD%95%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AA%E7%B3%85%E5%90%88%E7%B3%BB%E7%BB%9F/image-20211012153451750.png" alt="image-20211012153451750" style="zoom:80%;" data-src="/2021/10/12/%E5%A6%82%E4%BD%95%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AA%E7%B3%85%E5%90%88%E7%B3%BB%E7%BB%9F/image-20211012153451750.png"><h5 id="去哪"><a href="#去哪" class="headerlink" title="去哪"></a>去哪</h5><p>首先每个功能有其内部的流转流程，它自己知道哪一步该去哪？但是：</p><ul><li>他这个内部的流程结束了呢？</li><li>遇到异常了呢？</li></ul><p>那么他下一步将走到哪里呢？这个是这个故事里的人的是，应该把选择的权利交给他。</p><h4 id="实施"><a href="#实施" class="headerlink" title="实施"></a>实施</h4><h5 id="如何确定用户身份"><a href="#如何确定用户身份" class="headerlink" title="如何确定用户身份"></a>如何确定用户身份</h5><p>要确定用户身份，我设计需要一个<strong>用户管理</strong>模块，它具备的能力有：</p><ul><li>切换身份，满足一部分用户既是b端用户也是c端用户的场景。</li><li>申请身份</li><li>登录角色</li></ul><p>最终是为了确定用户身份。</p><h5 id="如何确定用户来干什么"><a href="#如何确定用户来干什么" class="headerlink" title="如何确定用户来干什么"></a>如何确定用户来干什么</h5><p>我们去银行我们会带上银行卡，我们去买菜会带上菜篮子，我们去做火车会带着车票，我们去考试会带上准考证….我们都会遵守一些既定的事情的协议。</p><ul><li>xx:bank</li><li>xx:buy</li><li>xx:train</li><li>xx:exam</li></ul><p>我们去买什么东西会写一个清单，如是：</p><ul><li>xx:buy&amp;item1&#x3D;”南瓜1斤”&amp;item2&#x3D;”瓜子1公斤”</li></ul><p>所以，用户来干什么，都是一系列的动作，做这些动作需要一个清单才知道具体怎么做，<strong>交给谁做很容易，我们就想到了路由</strong>。</p><p>路由器就是一个配置表，表述的事情是，xx:buy&amp;item1&#x3D;”南瓜”&amp;item2&#x3D;”瓜子1公斤”</p><table><thead><tr><th></th><th>功能</th><th>参数</th><th>realPath</th></tr></thead><tbody><tr><td>xx:c-buy</td><td>c端买东西</td><td>item1&#x3D;”南瓜1斤”&amp;item2&#x3D;”瓜子1公斤”</td><td>pages&#x2F;c-buy&#x2F;index</td></tr><tr><td>xx:b-buy</td><td>b端买东西</td><td>item3&#x3D;”南瓜1斤”&amp;item4&#x3D;”瓜子1公斤”</td><td>pages&#x2F;b-buy&#x2F;index</td></tr><tr><td></td><td></td><td></td><td></td></tr></tbody></table><h5 id="功能是什么？"><a href="#功能是什么？" class="headerlink" title="功能是什么？"></a>功能是什么？</h5><p><strong>功能需要是一个比较内聚的概念</strong>，他可以包含一系列的动作，有自己内部的流转流程，更具数据的状态及用户的操作来驱动页面UI 的展示，即：</p><blockquote><p>功能&#x3D; 数据 + action + UI</p></blockquote><img src="/2021/10/12/%E5%A6%82%E4%BD%95%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AA%E7%B3%85%E5%90%88%E7%B3%BB%E7%BB%9F/image-20211012170713165.png" alt="image-20211012170713165" style="zoom:80%;" data-src="/2021/10/12/%E5%A6%82%E4%BD%95%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AA%E7%B3%85%E5%90%88%E7%B3%BB%E7%BB%9F/image-20211012170713165.png"><p>功能，他有依赖底层的一些服务，及一些公共的工具函数。</p><img src="/2021/10/12/%E5%A6%82%E4%BD%95%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AA%E7%B3%85%E5%90%88%E7%B3%BB%E7%BB%9F/image-20211012171053961.png" alt="image-20211012171053961" style="zoom:70%;" data-src="/2021/10/12/%E5%A6%82%E4%BD%95%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AA%E7%B3%85%E5%90%88%E7%B3%BB%E7%BB%9F/image-20211012171053961.png"><p>那么，基础服务包括哪些呢？</p><ul><li>网络服务</li><li>邮件服务</li><li>短信服务</li><li>甚至是三方服务，如人脸核身</li></ul><h5 id="整体的三层架构"><a href="#整体的三层架构" class="headerlink" title="整体的三层架构"></a>整体的三层架构</h5><p>经过上面的分析，我们不能达成一个从上倒下依赖的三层架构模式：</p><ul><li>路由层</li><li>功能层</li><li>基础层</li></ul><p><img src="/2021/10/12/%E5%A6%82%E4%BD%95%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AA%E7%B3%85%E5%90%88%E7%B3%BB%E7%BB%9F/image-20211012172537275.png" alt="image-20211012172537275" loading="lazy" data-src="/2021/10/12/%E5%A6%82%E4%BD%95%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AA%E7%B3%85%E5%90%88%E7%B3%BB%E7%BB%9F/image-20211012172537275.png"></p><blockquote><p>路由层的作用是找到三要素【是谁，干啥，完事之后去哪】</p></blockquote><p><strong>拦截器</strong>是干啥的，上面已经提到，是找出三要素，找到之后如果发现非法入侵，就会把他路由到非法页。</p><blockquote><p>功能层是解决干啥的。</p></blockquote><p>功能才的Action是干啥的，是处理用户的的各种动作的，包含：</p><ul><li>网络请求</li><li>本地请求</li></ul><p>这样的一些操作都的会引起数据变化，进而导致UI发生改变。UI的实现可以原生，可以web，</p><blockquote><p>基础层是帮助功能层很好的完成干啥的。</p></blockquote><h4 id="还缺点啥？"><a href="#还缺点啥？" class="headerlink" title="还缺点啥？"></a>还缺点啥？</h4><p>一个好的系统肯定是需要可观测性的，需要trace用户的行为，包含</p><ul><li>进入哪个页面</li><li>做了哪些动作</li><li>动作的前因，后果是啥</li></ul><!-- flag of hidden posts -->]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>系统设计</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>一种描述用户需求的新方法</title>
    <link href="/2021/10/10/%E4%B8%80%E7%A7%8D%E6%8F%8F%E8%BF%B0%E7%94%A8%E6%88%B7%E9%9C%80%E6%B1%82%E7%9A%84%E6%96%B0%E6%96%B9%E6%B3%95/"/>
    <url>/2021/10/10/%E4%B8%80%E7%A7%8D%E6%8F%8F%E8%BF%B0%E7%94%A8%E6%88%B7%E9%9C%80%E6%B1%82%E7%9A%84%E6%96%B0%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<p>在研究某个问题的时候，你需要把它转换成一种认识。<strong>故事是描述认识的一种好方式。与一大堆需求描述相比，故事可以让读者更容易明白什么重要和为什么重要</strong>。</p><blockquote><p>什么，你觉得故事不是非常有条理或者不具备技术性？错了。管理人员无时无刻不在使用故事（想一想公司的使命），技术团队也都在讲故事（流程图和用户案例）。用户体验团队同样也写故事写了很多年了。</p></blockquote><h5 id="故事应该用三言两语把核心体验表达出来。"><a href="#故事应该用三言两语把核心体验表达出来。" class="headerlink" title="故事应该用三言两语把核心体验表达出来。"></a>故事应该用三言两语把核心体验表达出来。</h5><p>对于像Flip这样的数码摄像机，可以这样写：</p><blockquote><p>你站在香港城市街头，忽然一阵骚乱：发哥（周润发）正向你走来。</p><p>你迅速从口袋里掏出你的Flip摄像机，把它交给一位路人，请他帮忙拍了一段视频，发哥就在你的身后。</p><p>之后，你赶紧敲开附近朋友家的门，不需要任何安装配置，就通过他的电脑把这段视频分享到了网上。</p></blockquote><p>如果你正在设计一款数码摄像机，这个故事会告诉你如下重要事项。</p><ul><li>这个摄像机很小，可以方便地带到任何地方。也许是像一个小挂件一样，能够随身携带的那种。肯定不是只有在某些特殊场合才会用到的大摄像机。</li><li>开机速度快（因为发哥不会等着你），而且拍摄简单，即使是第一次见到它的人都能够拿在手里就拍。</li><li>要上传视频不需要特殊的软件或者数据线。</li><li>最后，拍摄视频的目的是为了与朋友分享。</li></ul><p><strong>故事可以把大量信息浓缩到寥寥数语之中，效率极高。而且，故事很容易记住，很方便与人分享。</strong></p><p>也就是说，在你们讨论设计决定时很可能需要准备几个故事。</p><p><strong>事实上，人人都喜欢故事，即使你不讲，别人也会编出来</strong></p><p>（“如果我使用这个摄像机，我就……”），让你不由得跟着他们的叙述展开想象——因此，要确保他们在使用你的故事。有必要多花点儿时间把故事的每一个细节都想清楚。如果你想让自己的设计简单，每一个细节都至关重要。</p><h5 id="故事的情节要短"><a href="#故事的情节要短" class="headerlink" title="故事的情节要短"></a>故事的情节要短</h5><p>千万不要长篇大论地详细描述重大活动。要通过一个小故事展示出每一个需求点，并确定满足该需求的功能（核心功能）。这样做有3个原因。</p><ul><li>首先，简单的故事容易记也容易复述，因而容易被别人传播。</li><li>其次，容易让别人把这个故事的情景套用到其他环境中（你可以想象在一个孩子的生日会上把你的Flip摄像机递给孩子的父母）。</li><li>最后，为故事增加细节就像是拉近相机的焦距：人们会认为你要展示一些重要的信息。乐观估计，你的细节会吸引人；最差的情况，人们也会自己找到细节重要的理由。因此，务必只添加要紧的细节，这样你的故事才会真实丰满。</li></ul>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>用户体验</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>开发一款APP时,我从未想过这些场景</title>
    <link href="/2021/10/10/%E5%BC%80%E5%8F%91%E4%B8%80%E6%AC%BEAPP%E6%97%B6-%E6%88%91%E4%BB%8E%E6%9C%AA%E6%83%B3%E8%BF%87%E8%BF%99%E4%BA%9B%E5%9C%BA%E6%99%AF/"/>
    <url>/2021/10/10/%E5%BC%80%E5%8F%91%E4%B8%80%E6%AC%BEAPP%E6%97%B6-%E6%88%91%E4%BB%8E%E6%9C%AA%E6%83%B3%E8%BF%87%E8%BF%99%E4%BA%9B%E5%9C%BA%E6%99%AF/</url>
    
    <content type="html"><![CDATA[<p>一旦走进现实的环境，你就会发现影响用户体验的因素原来如此之多。以下是几种现成的环境。</p><h4 id="办公室"><a href="#办公室" class="headerlink" title="办公室"></a>办公室</h4><ul><li>在开放式的办公室里，各类人员之间会频繁地相互干扰。看吧，由于某个有意思的话题顺风传入耳朵，有人就会放下手头的工作把耳朵竖起来，人们因此而打断工作的频率会高得让你大吃一惊。</li><li>来电话了，收到短信了，有新邮件了……，这些全都是干扰用户的因素。</li><li>如果有人要为某个会议打印文档，他们通常都会等到最后一分钟才去打印。而忙中出错那更是常有的事儿了。家里头</li><li>人们在家里边使用笔记本电脑边看电视或听收音机，花在哪方面的时间和注意力多些实在不好说。</li><li>家庭宽带连接有可能不如公司的线路那么稳定，速度可能也没那么快，尤其是晚上的上网高峰期。</li><li>妈妈要在孩子看动画片的30分钟左右的时间内上网购物，要从3万种商品中选择购买100种日用品。</li></ul><h4 id="家里头"><a href="#家里头" class="headerlink" title="家里头"></a>家里头</h4><ul><li>人们在家里边使用笔记本电脑边看电视或听收音机，花在哪方面的时间和注意力多些实在不好说。</li><li>家庭宽带连接有可能不如公司的线路那么稳定，速度可能也没那么快，尤其是晚上的上网高峰期。</li><li>妈妈要在孩子看动画片的30分钟左右的时间内上网购物，要从3万种商品中选择购买100种日用品。</li></ul><h4 id="户外"><a href="#户外" class="headerlink" title="户外"></a>户外</h4><ul><li>站在大街上，你会看到人们快走到十字路口时才忙着查看手机上的地图。如果这时候他们还得先看懂使用说明，那这个软件肯定是没有前途的。</li><li>人们在打手机的时候可能会背着几个包，如果手机按键不够大，就会非常麻烦。</li><li>人们在排队的时候可能会试用手机应用——随时都可能被打断。</li><li>明亮的阳光可能会让人看不清手机屏幕。</li><li>较大的设备，例如平板电脑，很容易让人觉得太重，拿着不舒服。于是，人们总会想把它们放在某个地方。</li><li>在黑夜的是时候扫码骑共享单车。</li></ul>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>用户体验</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何要资源</title>
    <link href="/2021/10/07/%E5%A6%82%E4%BD%95%E8%A6%81%E8%B5%84%E6%BA%90/"/>
    <url>/2021/10/07/%E5%A6%82%E4%BD%95%E8%A6%81%E8%B5%84%E6%BA%90/</url>
    
    <content type="html"><![CDATA[<h4 id="如何找上级领导要取资源"><a href="#如何找上级领导要取资源" class="headerlink" title="如何找上级领导要取资源"></a>如何找上级领导要取资源</h4><h5 id="反面案例"><a href="#反面案例" class="headerlink" title="反面案例"></a>反面案例</h5><h5 id="上来就说你要的资源是什么，接着是打消领导的顾虑。策略是"><a href="#上来就说你要的资源是什么，接着是打消领导的顾虑。策略是" class="headerlink" title="上来就说你要的资源是什么，接着是打消领导的顾虑。策略是"></a>上来就说你要的资源是什么，接着是打消领导的顾虑。策略是</h5><blockquote><p>索取资源，打消顾虑，没有背景</p></blockquote><p><img src="/2021/10/07/%E5%A6%82%E4%BD%95%E8%A6%81%E8%B5%84%E6%BA%90/image-20211007171623555.png" alt="image-20211007171623555" loading="lazy" data-src="/2021/10/07/%E5%A6%82%E4%BD%95%E8%A6%81%E8%B5%84%E6%BA%90/image-20211007171623555.png"></p><h5 id="下面这个案例以另外一种方式要资源"><a href="#下面这个案例以另外一种方式要资源" class="headerlink" title="下面这个案例以另外一种方式要资源"></a>下面这个案例以另外一种方式要资源</h5><blockquote><p> 讲述背景，提及冲突，解决方案(获取资源)，展望结果</p></blockquote><p><img src="/2021/10/07/%E5%A6%82%E4%BD%95%E8%A6%81%E8%B5%84%E6%BA%90/image-20211007171221596.png" alt="image-20211007171221596" loading="lazy" data-src="/2021/10/07/%E5%A6%82%E4%BD%95%E8%A6%81%E8%B5%84%E6%BA%90/image-20211007171221596.png"></p><!-- flag of hidden posts -->]]></content>
    
    
    <categories>
      
      <category>管理</category>
      
    </categories>
    
    
    <tags>
      
      <tag>沟通</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>一次精彩的汇报是怎么样的</title>
    <link href="/2021/10/07/%E4%B8%80%E6%AC%A1%E7%B2%BE%E5%BD%A9%E7%9A%84%E6%B1%87%E6%8A%A5%E6%98%AF%E6%80%8E%E4%B9%88%E6%A0%B7%E7%9A%84/"/>
    <url>/2021/10/07/%E4%B8%80%E6%AC%A1%E7%B2%BE%E5%BD%A9%E7%9A%84%E6%B1%87%E6%8A%A5%E6%98%AF%E6%80%8E%E4%B9%88%E6%A0%B7%E7%9A%84/</url>
    
    <content type="html"><![CDATA[<p>研究表明，老板平均60%以上的时间花在业务上，20%的时间花在跟他的老板、客户的相处上。最后剩下的20%的时间才能花在管理团队上，按照平均每个管理者管理6个下属来看，管理者能花在你身上的时间只占3%。</p><h5 id="用心做的决定，然后找数据证明自己这个决定"><a href="#用心做的决定，然后找数据证明自己这个决定" class="headerlink" title="用心做的决定，然后找数据证明自己这个决定"></a>用心做的决定，然后找数据证明自己这个决定</h5><p>当你用数据解释A方案比B方案好，你老板却提出其他奇奇怪怪的理由证明B方案更好或者索性说“让我再考虑考虑”，结果这一考虑就没下文了。现在你知道为什么了吧？因为你总想着用数据和事实说服他的“脑”，却并没有打动他的“心”。</p><h5 id="高手的一些做法"><a href="#高手的一些做法" class="headerlink" title="高手的一些做法"></a>高手的一些做法</h5><ol><li>通过类比、比喻这样的修辞手法，也可以让我们把复杂的概念变得浅显易懂，深入浅出地解释一些复杂的问题，有效地表达自己的思想</li><li>冲突升级，随着剧情层层递进的冲突不断升级，最后变得无比强大</li></ol><h4 id="如何讲好故事"><a href="#如何讲好故事" class="headerlink" title="如何讲好故事"></a>如何讲好故事</h4><ol><li>一是要“清晰”。<ul><li>没听懂的都是白搭。你得明白想表达什么，要有一条主线，其他内容都是串在主线上的珍珠，如果没有那根线，所有内容就散了。</li></ul></li><li>二是要“好奇”。<ul><li>那怎么让人产生好奇呢？美国著名的经济心理学家乔治·勒文施泰因认为，好奇心来源于某种“认知差距”，当一个人意识到自己的“认知差距”时，就会产生对信息的饥渴感。</li></ul></li><li>第三是“共鸣”。<ul><li>第一层是最简单的共鸣，来源于共同的经历、背景、目标等，就是所谓的“有共同语言”。</li><li>第二层共鸣来自共同的感受，比如痛苦、喜悦、愤怒、难过等。</li><li>第三层来自价值观层面的共鸣。马丁路德金，若为自由故两者皆可抛..，民主，共和三民主义等等</li></ul></li></ol><p>当你把自己的观点强加于人的时候，不但剥夺了别人的愉悦感，效果也很有限（此处“脑补”你爸妈的唠叨）。教导不等于说教，没有一个人喜欢被说教。一个好的教导的故事不会敲着我们的脑袋指指点点，而是帮助听众去反思自己的价值观，探索自己的动力，找到属于自己的答案。</p>]]></content>
    
    
    <categories>
      
      <category>管理</category>
      
    </categories>
    
    
    <tags>
      
      <tag>沟通</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>记录给Iphone7换了电池</title>
    <link href="/2021/10/07/%E8%AE%B0%E5%BD%95%E7%BB%99iphone7%E6%8D%A2%E4%BA%86%E7%94%B5%E6%B1%A0/"/>
    <url>/2021/10/07/%E8%AE%B0%E5%BD%95%E7%BB%99iphone7%E6%8D%A2%E4%BA%86%E7%94%B5%E6%B1%A0/</url>
    
    <content type="html"><![CDATA[<p>最近想换回自己的iphone7玩一玩，充满电，看下电池的最大容量居然只有79%，</p><p><img src="/2021/10/07/%E8%AE%B0%E5%BD%95%E7%BB%99iphone7%E6%8D%A2%E4%BA%86%E7%94%B5%E6%B1%A0/image-20211007110447499.png" alt="image-20211007110447499" loading="lazy" data-src="/2021/10/07/%E8%AE%B0%E5%BD%95%E7%BB%99iphone7%E6%8D%A2%E4%BA%86%E7%94%B5%E6%B1%A0/image-20211007110447499.png"></p><p>这你也能忍？果断在某多多上买了一个电池；</p><h3 id="电池哪家强"><a href="#电池哪家强" class="headerlink" title="电池哪家强"></a>电池哪家强</h3><p>只看了两家 品胜 和remax，对比了下发现最大容量差不多，发现品胜的差评比较多：</p><ol><li>做工不像品胜的，怀疑某些商家以次充好</li><li>发现还不如以前的原装电池，掉电像跑表似的</li></ol><p>基于以上两点，本来想买品胜的我果断选择了remax，</p><p>remax的稍微便宜10来块钱，差评还挺少见的。</p><h4 id="如何拆下老电池"><a href="#如何拆下老电池" class="headerlink" title="如何拆下老电池"></a>如何拆下老电池</h4><p>电池到手之后，看到包裹里面放了一个二维码，打开是这个<a href="https://www.iqiyi.com/v_18ahk2godsw.html?weixin_platform=friend">这个视频</a>，这里详细的介绍了如何拆下老电池的方法，大概来说分为7步：</p><ol><li>将充电口那里的2个啰嗦下下来，注意，最好用一片卫生纸把螺丝都搜集在一起，不然很容易丢失。<ol><li><img src="/2021/10/07/%E8%AE%B0%E5%BD%95%E7%BB%99iphone7%E6%8D%A2%E4%BA%86%E7%94%B5%E6%B1%A0/image-20211007105842711.png" alt="image-20211007105842711" loading="lazy" data-src="/2021/10/07/%E8%AE%B0%E5%BD%95%E7%BB%99iphone7%E6%8D%A2%E4%BA%86%E7%94%B5%E6%B1%A0/image-20211007105842711.png"></li></ol></li><li>使用吸盘吸屏幕，顺便用塑料翘片把机身撬开，注意，先从充电口这边开始撬，然后顺着左右两边，分别撬到电源键，和声音键为止，基本上就可以打开盖子了<ol><li><img src="/2021/10/07/%E8%AE%B0%E5%BD%95%E7%BB%99iphone7%E6%8D%A2%E4%BA%86%E7%94%B5%E6%B1%A0/image-20211007105920823.png" alt="image-20211007105920823" loading="lazy" data-src="/2021/10/07/%E8%AE%B0%E5%BD%95%E7%BB%99iphone7%E6%8D%A2%E4%BA%86%E7%94%B5%E6%B1%A0/image-20211007105920823.png"></li><li><img src="/2021/10/07/%E8%AE%B0%E5%BD%95%E7%BB%99iphone7%E6%8D%A2%E4%BA%86%E7%94%B5%E6%B1%A0/image-20211007105952649.png" alt="image-20211007105952649" loading="lazy" data-src="/2021/10/07/%E8%AE%B0%E5%BD%95%E7%BB%99iphone7%E6%8D%A2%E4%BA%86%E7%94%B5%E6%B1%A0/image-20211007105952649.png"></li></ol></li><li>打开盖子这部一定要注意，只能是由声音键的这边揭开屏幕，因为排线在电源键那边，那个很容易段开毁掉，所以，这部得千万注意，然后揭开的盖子最好不要超过 90度，实际测试110也问题不到，但是180度的话，果断排线会被你毁掉，所以，最好是用基本上靠着。<ol><li><img src="/2021/10/07/%E8%AE%B0%E5%BD%95%E7%BB%99iphone7%E6%8D%A2%E4%BA%86%E7%94%B5%E6%B1%A0/image-20211007110014961.png" alt="image-20211007110014961" loading="lazy" data-src="/2021/10/07/%E8%AE%B0%E5%BD%95%E7%BB%99iphone7%E6%8D%A2%E4%BA%86%E7%94%B5%E6%B1%A0/image-20211007110014961.png"></li></ol></li><li>使用螺丝刀拧开电池接线头的盖子，这部没啥风险，就是拧啰嗦，注意点在于，这个螺丝很小，小心别丢了，另外，有一个螺丝设计有点古怪，可能因为电池接线头铁盖子和螺纹口距离有点远，它是先用了一个大的螺丝点地下一层，再在螺丝上上一个螺丝。<ol><li><img src="/2021/10/07/%E8%AE%B0%E5%BD%95%E7%BB%99iphone7%E6%8D%A2%E4%BA%86%E7%94%B5%E6%B1%A0/image-20211007110103787.png" alt="image-20211007110103787" loading="lazy" data-src="/2021/10/07/%E8%AE%B0%E5%BD%95%E7%BB%99iphone7%E6%8D%A2%E4%BA%86%E7%94%B5%E6%B1%A0/image-20211007110103787.png"></li><li><img src="/2021/10/07/%E8%AE%B0%E5%BD%95%E7%BB%99iphone7%E6%8D%A2%E4%BA%86%E7%94%B5%E6%B1%A0/image-20211007110130179.png" alt="image-20211007110130179" loading="lazy" data-src="/2021/10/07/%E8%AE%B0%E5%BD%95%E7%BB%99iphone7%E6%8D%A2%E4%BA%86%E7%94%B5%E6%B1%A0/image-20211007110130179.png"></li></ol></li><li>撬开电池接线和主板接口，轻轻用力就可以撬开了。</li><li>把电池和手机盖子的粘胶扯下来，注意用力别太大，很容扯断，我就扯断了，不过没关系，把电子撬开点，用镊子拉出来继续往外扯。2个粘胶都扯下来后原装电池就自然很容易拿出来了。<ol><li><img src="/2021/10/07/%E8%AE%B0%E5%BD%95%E7%BB%99iphone7%E6%8D%A2%E4%BA%86%E7%94%B5%E6%B1%A0/image-20211007110201498.png" alt="image-20211007110201498" loading="lazy" data-src="/2021/10/07/%E8%AE%B0%E5%BD%95%E7%BB%99iphone7%E6%8D%A2%E4%BA%86%E7%94%B5%E6%B1%A0/image-20211007110201498.png"></li><li><img src="/2021/10/07/%E8%AE%B0%E5%BD%95%E7%BB%99iphone7%E6%8D%A2%E4%BA%86%E7%94%B5%E6%B1%A0/image-20211007110219436.png" alt="image-20211007110219436" loading="lazy" data-src="/2021/10/07/%E8%AE%B0%E5%BD%95%E7%BB%99iphone7%E6%8D%A2%E4%BA%86%E7%94%B5%E6%B1%A0/image-20211007110219436.png"></li></ol></li><li>换上新买的电池来试试吧，接线和主板接好就尝试开机，不要急着把粘胶贴上了，如果可以开机，看看电池容量是否是100，如果是，就没问题了，就可以开始最后一步了。<ol><li><img src="/2021/10/07/%E8%AE%B0%E5%BD%95%E7%BB%99iphone7%E6%8D%A2%E4%BA%86%E7%94%B5%E6%B1%A0/image-20211007110515588.png" alt="image-20211007110515588" loading="lazy" data-src="/2021/10/07/%E8%AE%B0%E5%BD%95%E7%BB%99iphone7%E6%8D%A2%E4%BA%86%E7%94%B5%E6%B1%A0/image-20211007110515588.png"></li></ol></li><li>这时候可以贴粘胶，沾到手机盖子上，注意粘胶别贴反了，这个是要放在背面和手机金属盖贴在一起的。然后改上贴片，盖上手机，上号螺丝，大功告成。<ol><li><img src="/2021/10/07/%E8%AE%B0%E5%BD%95%E7%BB%99iphone7%E6%8D%A2%E4%BA%86%E7%94%B5%E6%B1%A0/image-20211007110342412.png" alt="image-20211007110342412" loading="lazy" data-src="/2021/10/07/%E8%AE%B0%E5%BD%95%E7%BB%99iphone7%E6%8D%A2%E4%BA%86%E7%94%B5%E6%B1%A0/image-20211007110342412.png"></li></ol></li></ol><!-- flag of hidden posts -->]]></content>
    
    
    <categories>
      
      <category>手工</category>
      
    </categories>
    
    
    <tags>
      
      <tag>手工</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>那向往的退休后的生活</title>
    <link href="/2021/09/29/%E9%82%A3%E5%90%91%E5%BE%80%E7%9A%84%E9%80%80%E4%BC%91%E5%90%8E%E7%9A%84%E7%94%9F%E6%B4%BB/"/>
    <url>/2021/09/29/%E9%82%A3%E5%90%91%E5%BE%80%E7%9A%84%E9%80%80%E4%BC%91%E5%90%8E%E7%9A%84%E7%94%9F%E6%B4%BB/</url>
    
    <content type="html"><![CDATA[<p>小桥流水人家，也许是大多数人所向往的退休后的生活；</p><ol><li>依山傍水渺无人烟，远离城市的喧嚣，这里有清澈的流水，清晰的空气。<ol><li><img src="/2021/09/29/%E9%82%A3%E5%90%91%E5%BE%80%E7%9A%84%E9%80%80%E4%BC%91%E5%90%8E%E7%9A%84%E7%94%9F%E6%B4%BB/image-20210929102716172.png" alt="image-20210929102716172" loading="lazy" data-src="/2021/09/29/%E9%82%A3%E5%90%91%E5%BE%80%E7%9A%84%E9%80%80%E4%BC%91%E5%90%8E%E7%9A%84%E7%94%9F%E6%B4%BB/image-20210929102716172.png"></li></ol></li><li>一个不大不小的宅院，小二层的别样阁楼，最好是有一个合适的院子，里面可以放上一些基础的设施：<ol><li>邀请朋友来做客，沏一壶上好的龙井，几人围坐在石桌旁，品味人生</li><li>累了，就在秋千上躺平，摇摇晃晃如婴儿般入睡</li><li>醒来，去私人的听歌房闭幕欣赏半个小时的音乐，然后去书房与古人来一场灵魂的对话</li></ol></li></ol><!-- flag of hidden posts -->]]></content>
    
    
    <categories>
      
      <category>认识</category>
      
    </categories>
    
    
    <tags>
      
      <tag>感悟</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>团队感悟</title>
    <link href="/2021/09/25/%E5%9B%A2%E9%98%9F%E6%84%9F%E6%82%9F/"/>
    <url>/2021/09/25/%E5%9B%A2%E9%98%9F%E6%84%9F%E6%82%9F/</url>
    
    <content type="html"><![CDATA[<h4 id="关于团队组成"><a href="#关于团队组成" class="headerlink" title="关于团队组成"></a>关于团队组成</h4><p>一个团队的人员构成大概都是会有以下几类人：</p><ol><li>责任心强能力也强</li><li>能力强责任心一般</li><li>责任心强能力一般</li><li>责任心一般能力也一般</li></ol><p>其中，第1类人是团队的基干，需要对他进行充分的授权，把重要的项目交给他处理来带；</p><p>其中，第4类人是团队需要淘汰的成员，基本没有什么可塑性，一个团队的leader自身的定位应该是团队的教练，而不应该是团队成员的父母。</p><p>作为团队的教练，最重要的目标是把合适的人放在合适的位置上做合适的事情，同时也需要遵循一定的自然法则，优胜劣汰，这样的团队才会永远是一个健康的团队。</p><h4 id="关于分工"><a href="#关于分工" class="headerlink" title="关于分工"></a>关于分工</h4><ol><li>责任心强的能力强的应该放在团队的第一梯队，重要的攻坚项目尤其是时间比较紧张，任务比较繁重，不容许有延期出现的项目，应该交给这样的成员来处理跟进，一方面可以确保项目正常进行，一方面他也会在这个角色上持续成长，同时会获得较好的报酬，对于团队，对于他本人是一种双赢的局面。</li><li>能力强，责任心一般的同时，需要交给他一些重要，但是不紧急的事情，比如项目的性能优化，前沿技术的探索等等。</li><li>责任心强，能力一般的小伙伴，一般来说，目前处于一个能力成长的阶段，大多是毕业生为多数，这类同事需要可以分配一些容易处理，但是比较繁多的任务，比如，换图，刷新样式，用例走查，文档整理，在这个过程中，第一梯队的成员需要战出来带一带这类小伙伴，促进他们有一个较好加速度的方式成长。</li></ol><h4 id="项目迭代"><a href="#项目迭代" class="headerlink" title="项目迭代"></a>项目迭代</h4><p>项目迭代比较关系的问题是：</p><ol><li><p>项目产生的bug，通常在提测之前会有自测，这个过程就是为了预防有一些低级的bug比如功能都没验证通过就提测了，这是机器不应该的，应当命中责任心较弱，但不可一次性否决，老虎也有打盹的时候。</p></li><li><p>多人合作开发，其过程和接力赛跑有类似之处，但是不同点在于，后面等待前面传递接力棒过来的选手可以”抢跑“，比如通过mock数据的方式先走一步。那么，纵观整个过程中，一定不是所有人都有任务在处理，项目owner是一个例外，因为负责的事情繁多，需要持续push项目进度，关注项目风险点之所在，那么剩下的这些人呢？他们的空闲时间可以用来干啥？</p><ol><li>责任心强的人，此时应该会有两个选择：<ol><li>关注项目中哪些地方做得不够好，如果时间允许，站出来，和大家说下，这块我来进行重构下。</li><li>协助其他小伙伴处理一些比较独立的事情，或者review下上下游的代码，帮助发现风险。</li><li>持续学习，提升自身技能，调研一些技术方案，以便在后续迭代中用到</li></ol></li><li>责任心弱的人（一般来说不太可能存在），此时的选择可能是<ol><li>躺平，等待别人push，事不关己高高挂起，不到最后一刻绝不出手，但往往最后一刻这里就有问题</li></ol></li></ol><p>当然大多数人应该属于有一定的责任心但是还可以提升的阶段。</p></li><li><p>一个比较好的习惯</p><ol><li>项目有一个deadline，我们自己也应该有一个deadline，通常项目迭代会预留一定的buff，因此在工作做完之后，不妨抓紧自测一下，把代码review一下，抽空把代码该重构的点重构一下。</li></ol><p>今天就写这么多吧，有新思考在补充</p></li></ol>]]></content>
    
    
    <categories>
      
      <category>团队</category>
      
    </categories>
    
    
    <tags>
      
      <tag>管理</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用Vue开发桌面应用</title>
    <link href="/2021/09/24/%E4%BD%BF%E7%94%A8vue%E5%BC%80%E5%8F%91%E6%A1%8C%E9%9D%A2%E5%BA%94%E7%94%A8/"/>
    <url>/2021/09/24/%E4%BD%BF%E7%94%A8vue%E5%BC%80%E5%8F%91%E6%A1%8C%E9%9D%A2%E5%BA%94%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<p>Vue 不仅限于开发 Web 和<a href="https://vue-community.org/guide/ecosystem/mobile-apps.html">原生移动</a>应用程序，它还允许构建桌面应用程序。以下是人们选择 Vue 而不是本地语言解决方案的一些重要原因：</p><ul><li><strong>跨平台</strong>：所有应用程序均采用JavaScript开发，可打包为Windows&#x2F;MacOS&#x2F;Linux；</li><li><strong>易于构建</strong>：框架允许您简单地开发 Web 应用程序，然后使用打包程序将其“转换”为桌面应用程序；</li><li><strong>社区</strong>：如果您维护一个开源桌面项目，您将更有可能为它找到贡献者。</li></ul><p>然而，有一些缺点，所有 JavaScript 驱动的桌面应用程序都很常见。它们往往具有较大的包大小（至少 30 MB），并且已知内存使用量很大。</p><p>使用 Vue 构建桌面应用程序主要有两种方式：基于 HTML+CSS 的解决方案或原生 GUI。第一个是 Electron 和 NW.js，第二个是 Vuido。</p><h4 id="Electron"><a href="#Electron" class="headerlink" title="Electron"></a><a href="https://electronjs.org/">Electron</a></h4><p><a href="https://electronjs.org/">Electron</a>是由 GitHub 开发的开源库，用于使用 HTML、CSS 和 JavaScript 构建跨平台桌面应用程序。Electron 通过将<a href="http://www.chromium.org/">Chromium</a>和<a href="https://nodejs.org/en/">Node.js</a>组合成一个运行时来实现这一点，并且可以为 Mac、Windows 和 Linux 打包应用程序</p><p>Electron 是目前最流行的用于编写 JavaScript 桌面应用程序的库。一些比较知名的应用程序是<a href="https://slack.com/">Slack</a>和<a href="https://discordapp.com/">Discord</a> messengers、<a href="https://atom.io/">Atom</a>代码编辑器和<a href="https://code.visualstudio.com/">Visual Studio Code</a> IDE。</p><table><thead><tr><th>优点</th><th>缺点</th><th></th></tr></thead><tbody><tr><td>容易上手</td><td>打包比较大</td><td></td></tr><tr><td>良好的开发文档</td><td>内存占用高</td><td></td></tr><tr><td>无需更改现有源代码</td><td>包中未受保护的源代码</td><td></td></tr><tr><td>有<a href="https://github.com/nklayman/vue-cli-plugin-electron-builder">Vue CLI 插件</a></td><td></td><td></td></tr><tr><td>成熟的开发者社区</td><td></td><td></td></tr></tbody></table><h4 id="NW-js"><a href="#NW-js" class="headerlink" title="NW.js"></a><a href="https://nwjs.io/">NW.js</a></h4><p><a href="https://nwjs.io/">NW.js</a>（以前称为 node-webkit）是一个使用 HTML、CSS 和 JavaScript 构建桌面应用程序的框架。与<a href="https://vue-community.org/guide/ecosystem/desktop-apps.html#electron">Electron</a>类似，它基于 Chromium 和 Node.js。NW.js 允许您直接从浏览器调用 Node.js 代码和模块，并在您的应用程序中使用 Web 技术。此外，您可以轻松地将 Web 应用程序打包为本机应用程序。</p><table><thead><tr><th>优点</th><th>缺点</th></tr></thead><tbody><tr><td>容易上手</td><td>打包比较大</td></tr><tr><td>无需更改现有源代码</td><td>内存占用高</td></tr><tr><td>编译为受保护的二进制文件</td><td>使用率明显低于 Electron</td></tr><tr><td>有<a href="https://github.com/NataliaTepluhina/vue-cli-plugin-nwjs">Vue CLI 插件</a></td><td></td></tr></tbody></table><h4 id="Quasar-Framework"><a href="#Quasar-Framework" class="headerlink" title="Quasar Framework"></a><a href="https://quasar.dev/">Quasar Framework</a></h4><p><a href="https://quasar.dev/">Quasar Framework</a>是一个允许跨平台应用程序开发的框架。使用大型 VueJS 组件库设计您的应用程序，然后使用 Quasar 强大而简单易用的 CLI 通过 Electron 为桌面自动构建您的应用程序。如果您希望对您的代码做更多的事情而不仅仅是 Electron 应用程序，那么 Quasar 是您跨平台应用程序想法的绝佳解决方案。</p><table><thead><tr><th>优点</th><th>缺点</th></tr></thead><tbody><tr><td>容易上手</td><td>桌面也比较大</td></tr><tr><td>无需更改现有源代码</td><td>内存占用高</td></tr><tr><td>可以打包到各种平台，Android，iOS，以及桌面，网页等</td><td></td></tr></tbody></table><h4 id="Vuido"><a href="#Vuido" class="headerlink" title="Vuido"></a><a href="https://vuido.mimec.org/">Vuido</a></h4><p><a href="https://vuido.mimec.org/">Vuido</a>是一个基于 Vue.js 创建原生桌面应用程序的框架。使用 Vuido 的应用程序可以使用原生 GUI 组件在 Windows、OS X 和 Linux 上运行。</p><p>在幕后，Vuido 使用<a href="https://github.com/andlabs/libui">libui</a>库为每个桌面平台提供原生 GUI 组件，以及用于 Node.js的<a href="https://github.com/parro-it/libui-node">libui-node</a>绑定。</p><p>Vuido 和 Electron 或 NW.js 之间的核心区别在于，您不会在 Vuido 中使用 HTML 标签或 CSS 样式，您只能使用操作系统平台提供的一组预定义的 UI 组件。</p><table><thead><tr><th>优点</th><th>缺点</th></tr></thead><tbody><tr><td>容易上手</td><td>外观仅限于操作系统本机 GUI 组件</td></tr><tr><td>无需更改现有源代码</td><td>没有 Vue CLI 插件，只有 Vue CLI 2 样板</td></tr><tr><td>可以打包到各种桌面版本</td><td></td></tr><tr><td>与 Electron 或 NW.js 应用程序相比，提供更小的封装尺寸</td><td></td></tr><tr><td>有据可查</td><td></td></tr></tbody></table><p>总结，如果你想使用vue来构建全平台应用，而且还要颜值OK的话，选择<a href="https://quasar.dev/">Quasar Framework</a> 是正确的</p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>管理者应该做的事情</title>
    <link href="/2021/09/22/%E5%A6%82%E4%BD%95%E5%81%9A%E4%B8%80%E4%B8%AA%E5%A5%BDleader/"/>
    <url>/2021/09/22/%E5%A6%82%E4%BD%95%E5%81%9A%E4%B8%80%E4%B8%AA%E5%A5%BDleader/</url>
    
    <content type="html"><![CDATA[<h3 id="管理者应该做的事情"><a href="#管理者应该做的事情" class="headerlink" title="管理者应该做的事情"></a>管理者应该做的事情</h3><ol><li>关注小伙伴优点，并非弱点，用人所长容人所短，找出优点，放大优点。</li><li>充当教练，培养人才，找出每个人的才能，表现好需要积极反馈，表现不好需要进一步完善的建议。</li><li>关心下属，设定成功的目标，在成功的途中做一些辅导。</li><li>需要怀疑但也需要倾听，保持尊敬，心平气和接受反馈。</li><li>协助小伙伴共渡难关，但要分辨什么时候提供什么样的帮助，掌握分寸。</li><li>需要讲一些故事来说明愿景，打造一支高效的团队，让大家参与愿景建设。</li><li>不断充实自己，保持对行业技能能敏锐，分享学习心得。</li><li>就事论事，客观看待事情。</li></ol><h3 id="技术团队leader的要求"><a href="#技术团队leader的要求" class="headerlink" title="技术团队leader的要求"></a>技术团队leader的要求</h3><h4 id="基本要求"><a href="#基本要求" class="headerlink" title="基本要求"></a>基本要求</h4><p>了解每个小伙伴的技术特长，根据以往项目经历合理分配任务，保证业务按时高质量完成。</p><h4 id="更高要求"><a href="#更高要求" class="headerlink" title="更高要求"></a>更高要求</h4><ol><li><p>团队文化（团队氛围）建设</p><ol><li><p>大多数人的认可文化才是团队的文化。</p></li><li><p>可以具体实施的，绝对不是空泛不可达的。</p></li><li><blockquote><p>如电子签前端，做技术中心最开心的开发【事假机制灵活，通勤时间不做考量，任务导向，拒绝无效加班，责任为先】</p></blockquote></li></ol></li><li><p>小伙伴技能水平提升</p><ol><li>业务之外，<strong>技术成长与业务需求相结合，产品需求和自研需求相结合</strong></li><li>控制下产品需求的进度和占比，留出一些时间用来做自研需求。</li><li>分享，尽量和平时工作有点关联，可以维护一个技术分享的主题池，控制分享质量及相关度</li></ol></li><li><p>研发规范体系建设</p><ol><li>流程、规范与稳定高于一切</li><li>崇尚技术深度，而不盲目崇尚新技术，且不可拿项目稳定性开玩笑</li></ol></li><li><p>团队凝聚力（稳定性）建设</p><ol><li>注重培养归属感、责任感与主动性，并明确赏罚机制</li><li>backup机制，避免应对线网问题时出现单点故障</li><li>灵活的“7*24”，而不盲目推崇固定的“996”，事情多的时候，大家就辛苦点，多加点班；事情少的时候，大家就早点回家，多休息休息，养精蓄锐而不是在公司干耗着混加班时间。</li></ol></li><li><p>上通下达</p><ol><li>下达，对齐目标，把控项目风险，攻克技术难点，通过晨会周会的形式。</li><li>上通，月度总结，宣讲，邀请领导参与，了解小伙伴工作。</li></ol></li><li><p>注入新的血液，新人培训机制</p><ol><li>流程规范培训要优先于技术培训，新人引发的问题中，很多都是由于操作不按照流程，不遵守规范导致的</li><li>老人踩过的坑，新人也很有可能会踩，每个新人入职时，都把这些常见的坑提前多熟悉几遍，不要求全都一一记住，至少要在脑海中留个印象</li><li>明确新人熟悉系统、技术等的顺序和进度安排，制定一个合理的熟悉顺序和进度安排，明确每天任务，确定deadline</li></ol></li></ol>]]></content>
    
    
    <categories>
      
      <category>团队</category>
      
    </categories>
    
    
    <tags>
      
      <tag>管理</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo使用typora编辑插入图片无法预览的坑的解决</title>
    <link href="/2021/09/21/hexo%E4%BD%BF%E7%94%A8type%E7%BC%96%E8%BE%91%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E9%A2%84%E8%A7%88%E7%9A%84%E5%9D%91%E7%9A%84%E8%A7%A3%E5%86%B3/"/>
    <url>/2021/09/21/hexo%E4%BD%BF%E7%94%A8type%E7%BC%96%E8%BE%91%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E9%A2%84%E8%A7%88%E7%9A%84%E5%9D%91%E7%9A%84%E8%A7%A3%E5%86%B3/</url>
    
    <content type="html"><![CDATA[<p>事情是这个样子的，今天准备开个自己的博客，如是研究了下，使用 hexo 在 github 上发布博客是一个号的选择。</p><p>hexo 可以参考这里 <a href="https://hexo.io/zh-cn/">https://hexo.io/zh-cn/</a><br>typora 可以参考这里 <a href="https://typora.io/">https://typora.io/</a></p><p>这两个哥们搭配，干活就珍惜不累了，安装hexo和安装typora的工作暂且就不在这里唠叨了，随便Google一下，相信你很快就可以安装上了。</p><p>然后，这篇文章主要想说的是，在配置typora插图的过程中，遇到了一个坑，我是这么按照hexo的教程配置的：</p><p><a href="https://hexo.io/zh-cn/docs/asset-folders">https://hexo.io/zh-cn/docs/asset-folders</a> </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript">_config.<span class="hljs-property">yml</span><br><span class="hljs-attr">post_asset_folder</span>: <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><p>据说，当资源文件管理功能打开后，Hexo将会在你每一次通过 <code>hexo new [layout] &lt;title&gt;</code> 命令创建新文章时自动创建一个文件夹。</p><p><img src="/2021/09/21/hexo%E4%BD%BF%E7%94%A8type%E7%BC%96%E8%BE%91%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E9%A2%84%E8%A7%88%E7%9A%84%E5%9D%91%E7%9A%84%E8%A7%A3%E5%86%B3/image-20210921214156375.png" alt="image-20210921214156375" loading="lazy" data-src="/2021/09/21/hexo%E4%BD%BF%E7%94%A8type%E7%BC%96%E8%BE%91%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E9%A2%84%E8%A7%88%E7%9A%84%E5%9D%91%E7%9A%84%E8%A7%A3%E5%86%B3/image-20210921214156375.png"></p><p>对的，没错，老铁，就是上面这个样子，一顿操作猛如虎，结果</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript">hexo g<br>hexo d <span class="hljs-comment">//部署到github上显示不了</span><br>hexo server <span class="hljs-comment">//本地预览显示不了</span><br></code></pre></td></tr></table></figure><p>看了一下，图片压根就显示不出来，看了下，明显图片路径有问题。</p><p>后面看到一个哥们的文章，<a href="https://cxyzjd.com/article/huyun9666/104256799">hexo使用markdown图片无法显示问题_jhhuang-程序员宅基地</a>然后install他的插件之后，发现部署到github上确实可以显示，but，本地没法预览呀，这个有点上火，看了下源码，就自己果断撸了一个；</p><p><img src="/2021/09/21/hexo%E4%BD%BF%E7%94%A8type%E7%BC%96%E8%BE%91%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E9%A2%84%E8%A7%88%E7%9A%84%E5%9D%91%E7%9A%84%E8%A7%A3%E5%86%B3/image-20210921214625183.png" alt="image-20210921214625183" loading="lazy" data-src="/2021/09/21/hexo%E4%BD%BF%E7%94%A8type%E7%BC%96%E8%BE%91%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E9%A2%84%E8%A7%88%E7%9A%84%E5%9D%91%E7%9A%84%E8%A7%A3%E5%86%B3/image-20210921214625183.png"></p><p>一通操作猛如虎，其实就改了这么几行，把作者之前的替换的路径</p><p>&#x2F;&#x2F;yousite&#x2F;path&#x2F;to&#x2F;your&#x2F;image.jgp  修改为了  &#x2F;path&#x2F;to&#x2F;your&#x2F;image.jgp</p><p>需要的老铁可以直接使用我<a href="https://github.com/bravekingzhang/hexo-asset-image">这个补丁</a>就ok啦 ，用法已经在readme中有详细介绍了。</p><h4 id="最后附上我的所有关键配置"><a href="#最后附上我的所有关键配置" class="headerlink" title="最后附上我的所有关键配置"></a>最后附上我的所有关键配置</h4><h5 id="hexo的配置"><a href="#hexo的配置" class="headerlink" title="hexo的配置"></a>hexo的配置</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><code class="hljs javascript"># <span class="hljs-title class_">Hexo</span> <span class="hljs-title class_">Configuration</span><br>## <span class="hljs-title class_">Docs</span>: <span class="hljs-attr">https</span>:<span class="hljs-comment">//hexo.io/docs/configuration.html</span><br>## <span class="hljs-title class_">Source</span>: <span class="hljs-attr">https</span>:<span class="hljs-comment">//github.com/hexojs/hexo/</span><br><br># <span class="hljs-title class_">Site</span><br><span class="hljs-attr">title</span>: 心随我动<br><span class="hljs-attr">subtitle</span>:<br><span class="hljs-attr">description</span>:<br><span class="hljs-attr">author</span>: hz<br><span class="hljs-attr">language</span>: zh-<span class="hljs-variable constant_">CN</span><br><span class="hljs-attr">timezone</span>: <span class="hljs-title class_">Asia</span>/<span class="hljs-title class_">Shanghai</span><br><br># <span class="hljs-variable constant_">URL</span><br>## <span class="hljs-title class_">If</span> your site is put <span class="hljs-keyword">in</span> a subdirectory, set url <span class="hljs-keyword">as</span> <span class="hljs-string">&#x27;http://yoursite.com/child&#x27;</span> and root <span class="hljs-keyword">as</span> <span class="hljs-string">&#x27;/child/&#x27;</span><br><span class="hljs-attr">url</span>: <span class="hljs-attr">https</span>:<span class="hljs-comment">//blog.brzhang.club</span><br><span class="hljs-attr">root</span>: /<br><span class="hljs-attr">permalink</span>: :year/:month/:day/:title/<br><span class="hljs-attr">permalink_defaults</span>:<br><br># <span class="hljs-title class_">Directory</span><br><span class="hljs-attr">source_dir</span>: source<br><span class="hljs-attr">public_dir</span>: public<br><span class="hljs-attr">tag_dir</span>: tags<br><span class="hljs-attr">archive_dir</span>: archives<br><span class="hljs-attr">category_dir</span>: categories<br><span class="hljs-attr">code_dir</span>: downloads/code<br><span class="hljs-attr">i18n_dir</span>: :lang<br><span class="hljs-attr">skip_render</span>:<br><br># <span class="hljs-title class_">Writing</span><br><span class="hljs-attr">new_post_name</span>: :title.<span class="hljs-property">md</span> # <span class="hljs-title class_">File</span> name <span class="hljs-keyword">of</span> <span class="hljs-keyword">new</span> posts<br><span class="hljs-attr">default_layout</span>: post<br><span class="hljs-attr">titlecase</span>: <span class="hljs-literal">false</span> # <span class="hljs-title class_">Transform</span> title into titlecase<br><span class="hljs-attr">external_link</span>: <span class="hljs-literal">true</span> # <span class="hljs-title class_">Open</span> external links <span class="hljs-keyword">in</span> <span class="hljs-keyword">new</span> tab<br><span class="hljs-attr">filename_case</span>: <span class="hljs-number">0</span><br><span class="hljs-attr">render_drafts</span>: <span class="hljs-literal">false</span><br><span class="hljs-attr">post_asset_folder</span>: <span class="hljs-literal">true</span><br><span class="hljs-attr">marked</span>:<br>  <span class="hljs-attr">prependRoot</span>: <span class="hljs-literal">false</span><br>  <span class="hljs-attr">postAsset</span>: <span class="hljs-literal">true</span><br>  <span class="hljs-attr">lazyload</span>: <span class="hljs-literal">true</span><br><span class="hljs-attr">relative_link</span>: <span class="hljs-literal">true</span><br><span class="hljs-attr">future</span>: <span class="hljs-literal">true</span><br><span class="hljs-attr">highlight</span>:<br>  <span class="hljs-attr">enable</span>: <span class="hljs-literal">true</span><br>  <span class="hljs-attr">line_number</span>: <span class="hljs-literal">true</span><br>  <span class="hljs-attr">auto_detect</span>: <span class="hljs-literal">false</span><br>  <span class="hljs-attr">tab_replace</span>:<br><br># <span class="hljs-title class_">Home</span> page setting<br># <span class="hljs-attr">path</span>: <span class="hljs-title class_">Root</span> path <span class="hljs-keyword">for</span> your blogs index page. (<span class="hljs-keyword">default</span> = <span class="hljs-string">&#x27;&#x27;</span>)<br># <span class="hljs-attr">per_page</span>: <span class="hljs-title class_">Posts</span> displayed per page. (<span class="hljs-number">0</span> = disable pagination)<br># <span class="hljs-attr">order_by</span>: <span class="hljs-title class_">Posts</span> order. (<span class="hljs-title class_">Order</span> by date descending by <span class="hljs-keyword">default</span>)<br><span class="hljs-attr">index_generator</span>:<br>  <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;&quot;</span><br>  <span class="hljs-attr">per_page</span>: <span class="hljs-number">10</span><br>  <span class="hljs-attr">order_by</span>: -date<br><br># <span class="hljs-title class_">Category</span> &amp; <span class="hljs-title class_">Tag</span><br><span class="hljs-attr">default_category</span>: uncategorized<br><span class="hljs-attr">category_map</span>:<br><span class="hljs-attr">tag_map</span>:<br><br># <span class="hljs-title class_">Date</span> / <span class="hljs-title class_">Time</span> format<br>## <span class="hljs-title class_">Hexo</span> uses <span class="hljs-title class_">Moment</span>.<span class="hljs-property">js</span> to parse and display date<br>## <span class="hljs-title class_">You</span> can customize the date format <span class="hljs-keyword">as</span> defined <span class="hljs-keyword">in</span><br>## <span class="hljs-attr">http</span>:<span class="hljs-comment">//momentjs.com/docs/#/displaying/format/</span><br><span class="hljs-attr">date_format</span>: <span class="hljs-variable constant_">YYYY</span>-<span class="hljs-variable constant_">MM</span>-<span class="hljs-variable constant_">DD</span><br><span class="hljs-attr">time_format</span>: <span class="hljs-attr">HH</span>:<span class="hljs-attr">mm</span>:ss<br><br># <span class="hljs-title class_">Pagination</span><br>## <span class="hljs-title class_">Set</span> per_page to <span class="hljs-number">0</span> to disable pagination<br><span class="hljs-attr">per_page</span>: <span class="hljs-number">10</span><br><span class="hljs-attr">pagination_dir</span>: page<br><br># <span class="hljs-title class_">Extensions</span><br>## <span class="hljs-title class_">Plugins</span>: <span class="hljs-attr">https</span>:<span class="hljs-comment">//hexo.io/plugins/</span><br>## <span class="hljs-title class_">Themes</span>: <span class="hljs-attr">https</span>:<span class="hljs-comment">//hexo.io/themes/</span><br><br><span class="hljs-attr">tag_generator</span>:<br>  <span class="hljs-attr">per_page</span>: <span class="hljs-number">10</span><br>  <span class="hljs-attr">order_by</span>: -date<br><br><span class="hljs-attr">theme</span>: ocean<br><br># <span class="hljs-title class_">Deployment</span><br>## <span class="hljs-title class_">Docs</span>: <span class="hljs-attr">https</span>:<span class="hljs-comment">//hexo.io/docs/deployment.html</span><br><span class="hljs-attr">deploy</span>:<br>  <span class="hljs-attr">type</span>: git<br>  <span class="hljs-attr">repository</span>: <span class="hljs-attr">https</span>:<span class="hljs-comment">//github.com/bravekingzhang/bravekingzhang.github.io.git</span><br>  <span class="hljs-attr">brance</span>: master<br><br></code></pre></td></tr></table></figure><p>typora的图片上传配置</p><p><img src="/2021/09/21/hexo%E4%BD%BF%E7%94%A8type%E7%BC%96%E8%BE%91%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E9%A2%84%E8%A7%88%E7%9A%84%E5%9D%91%E7%9A%84%E8%A7%A3%E5%86%B3/image-20210921215142921.png" alt="image-20210921215142921" loading="lazy" data-src="/2021/09/21/hexo%E4%BD%BF%E7%94%A8type%E7%BC%96%E8%BE%91%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E9%A2%84%E8%A7%88%E7%9A%84%E5%9D%91%E7%9A%84%E8%A7%A3%E5%86%B3/image-20210921215142921.png"></p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>typora</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>为啥API设计如此重要</title>
    <link href="/2021/09/21/%E4%B8%BA%E5%95%A5API%E8%AE%BE%E8%AE%A1%E5%A6%82%E6%AD%A4%E9%87%8D%E8%A6%81/"/>
    <url>/2021/09/21/%E4%B8%BA%E5%95%A5API%E8%AE%BE%E8%AE%A1%E5%A6%82%E6%AD%A4%E9%87%8D%E8%A6%81/</url>
    
    <content type="html"><![CDATA[<h4 id="为什么-API-设计很重要？"><a href="#为什么-API-设计很重要？" class="headerlink" title="为什么 API 设计很重要？"></a>为什么 API 设计很重要？</h4><ul><li>API 可以是一个公司最重要的资产之一【<strong>客户投入大量资金：购买、编写、学习</strong><br><strong>停止使用 API 的成本可能很高，成功的公共 API 可以捕获客户</strong>】</li><li>也可能是公司最大的负债之一 【<strong>不好的 API 会导致无休止的支持电话流</strong>】</li><li>公共 API 是永久性的【<strong>只有一次机会可以做好它</strong>】</li></ul><h4 id="为什么-API-设计对你很重要？"><a href="#为什么-API-设计对你很重要？" class="headerlink" title="为什么 API 设计对你很重要？"></a>为什么 API 设计对你很重要？</h4><p>如果你编程，你就是一个 API 设计师，好的代码是模块化的–每个模块都有一个 API</p><ul><li>有用的模块往往会被重复使用<br>一旦模块有了用户，就不能随意改变 API _好的可重复使用的模块是企业资产</li><li>从 API 的角度思考问题可以提高代码质量</li></ul><h4 id="好的-API-的特点"><a href="#好的-API-的特点" class="headerlink" title="好的 API 的特点"></a>好的 API 的特点</h4><ul><li>易于学习</li><li>易于使用，即使没有文档</li><li>难以误用</li><li>易于阅读和维护使用它的代码 - 足够强大以满足需求 - 易于扩展</li><li>适合受众</li></ul><h4 id="好的API是如何设计出来的"><a href="#好的API是如何设计出来的" class="headerlink" title="好的API是如何设计出来的"></a>好的API是如何设计出来的</h4><p>一般来说，好的API需要遵循一下几大类设计</p><p><img src="/2021/09/21/%E4%B8%BA%E5%95%A5API%E8%AE%BE%E8%AE%A1%E5%A6%82%E6%AD%A4%E9%87%8D%E8%A6%81/image-20210921194438582.png" alt="image-20210921194438582" loading="lazy" data-src="/2021/09/21/%E4%B8%BA%E5%95%A5API%E8%AE%BE%E8%AE%A1%E5%A6%82%E6%AD%A4%E9%87%8D%E8%A6%81/image-20210921194438582.png"></p><h5 id="收集需求–带着一定程度的怀疑态度"><a href="#收集需求–带着一定程度的怀疑态度" class="headerlink" title="收集需求–带着一定程度的怀疑态度"></a>收集需求–带着一定程度的怀疑态度</h5><ul><li>通常你会得到建议的解决方案 _ 可能存在更好的解决方案</li><li>你的工作是提取真正的需求 _ 应该采取用例的形式</li><li>建立一个更普遍的东西可能更容易，也更有意义。</li></ul><h5 id="一切从简"><a href="#一切从简" class="headerlink" title="一切从简"></a>一切从简</h5><ul><li>在这个阶段，敏捷性胜过完整性</li><li>尽可能让更多的人了解规格，听取他们的意见并认真对待</li><li>如果你保持简短的规格，就很容易修改。</li><li>当你获得信心时，就可以使其更加完善_这必然涉及到编码问题</li></ul><h5 id="API应该只做一件事，而且要做得极致"><a href="#API应该只做一件事，而且要做得极致" class="headerlink" title="API应该只做一件事，而且要做得极致"></a>API应该只做一件事，而且要做得极致</h5><ul><li>功能应该容易解释<br>如果它很难被命名，这通常是个坏兆头 _ 好的名字能推动开发<br>_ 要便于拆分和合并模块</li></ul><h5 id="尽量自闭环"><a href="#尽量自闭环" class="headerlink" title="尽量自闭环"></a>尽量自闭环</h5><ul><li>尽可能地使类和成员成为私有的</li><li>公有类应该没有公有字段<br>(常量除外)</li><li>这样可以最大限度地隐藏信息</li><li>允许模块被独立使用、理解、构建、测试和调试</li></ul><h5 id="名字很重要–名称应该基本上是不言自明的-避免使用隐晦的缩略语"><a href="#名字很重要–名称应该基本上是不言自明的-避免使用隐晦的缩略语" class="headerlink" title="名字很重要–名称应该基本上是不言自明的 _ 避免使用隐晦的缩略语"></a>名字很重要–名称应该基本上是不言自明的 _ 避免使用隐晦的缩略语</h5><ul><li><p>要一致–相同的词意味着相同的事情 _ 在整个API中，（在平台的各个API中）。</p></li><li><p>要有规律–力求对称–代码应该像散文一样阅读</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">if</span> (car.<span class="hljs-title function_">speed</span>() &gt; <span class="hljs-number">2</span> * <span class="hljs-variable constant_">SPEED_LIMIT</span>) <br>  <span class="hljs-title function_">generateAlert</span>(<span class="hljs-string">&quot;Watch out for cops!&quot;</span>);<br></code></pre></td></tr></table></figure></li></ul><h5 id="总体来说，API设计是一项高尚而有意义的工作，它可以改善程序员、终端用户、公司的命运。"><a href="#总体来说，API设计是一项高尚而有意义的工作，它可以改善程序员、终端用户、公司的命运。" class="headerlink" title="总体来说，API设计是一项高尚而有意义的工作，它可以改善程序员、终端用户、公司的命运。"></a>总体来说，API设计是一项高尚而有意义的工作，它可以改善程序员、终端用户、公司的命运。</h5><ul><li>这个讲座涵盖了这门手艺的一些启发式方法 _ 不要一味地遵守它们，但是……<br>不要在没有充分理由的情况下违反它们</li><li>API设计是艰难的<br>-不是一个单独的活动<br>-完美是不可能的，但还是要努力。</li></ul>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>给博客加一个评论</title>
    <link href="/2021/09/21/%E7%BB%99%E5%8D%9A%E5%AE%A2%E5%8A%A0%E4%B8%80%E4%B8%AA%E8%AF%84%E8%AE%BA/"/>
    <url>/2021/09/21/%E7%BB%99%E5%8D%9A%E5%AE%A2%E5%8A%A0%E4%B8%80%E4%B8%AA%E8%AF%84%E8%AE%BA/</url>
    
    <content type="html"><![CDATA[<h3 id="添加一个主题"><a href="#添加一个主题" class="headerlink" title="添加一个主题"></a>添加一个主题</h3><p>主题我选择的是这个 <a href="https://github.com/zhwangart/hexo-theme-ocean">https://github.com/zhwangart/hexo-theme-ocean</a></p><p>如果愿意折腾，完全可以自己选择一个</p><h3 id="添加评论系统，虽然看的人也不都，但要有"><a href="#添加评论系统，虽然看的人也不都，但要有" class="headerlink" title="添加评论系统，虽然看的人也不都，但要有"></a>添加评论系统，虽然看的人也不都，但要有</h3><p>给自己的博客加一个评论系统，采用的是<code>gitalk</code> ，这个玩意还挺简单的，在 github 上申请一个 AuthApp 就 ok 啦，填入相应的参数，搞定，参考这篇文章。</p><p><a href="https://iochen.com/post/use-gitalk-in-hexo/">https://iochen.com/post/use-gitalk-in-hexo/</a></p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
